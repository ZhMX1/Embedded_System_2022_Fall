; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\httpd-cgi.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\httpd-cgi.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\httpd-cgi.crf ..\..\User\uIP\http\httpd-cgi.c]
                          THUMB

                          AREA ||i.file_stats||, CODE, READONLY, ALIGN=2

                  file_stats PROC
;;;92     static
;;;93     PT_THREAD(file_stats(struct httpd_state *s, char *ptr))
000000  b510              PUSH     {r4,lr}
;;;94     {
000002  4604              MOV      r4,r0
;;;95       PSOCK_BEGIN(&s->sout);
000004  8d00              LDRH     r0,[r0,#0x28]
000006  460a              MOV      r2,r1                 ;94
000008  b110              CBZ      r0,|L1.16|
00000a  2861              CMP      r0,#0x61
00000c  d10e              BNE      |L1.44|
00000e  e001              B        |L1.20|
                  |L1.16|
;;;96     
;;;97       PSOCK_GENERATOR_SEND(&s->sout, generate_file_stats, strchr(ptr, ' ') + 1);
000010  2061              MOVS     r0,#0x61
000012  8520              STRH     r0,[r4,#0x28]
                  |L1.20|
000014  2120              MOVS     r1,#0x20
000016  4610              MOV      r0,r2
000018  f7fffffe          BL       strchr
00001c  1c42              ADDS     r2,r0,#1
00001e  4905              LDR      r1,|L1.52|
000020  f1040028          ADD      r0,r4,#0x28
000024  f7fffffe          BL       psock_generator_send
000028  2800              CMP      r0,#0
00002a  d002              BEQ      |L1.50|
                  |L1.44|
;;;98       
;;;99       PSOCK_END(&s->sout);
00002c  2000              MOVS     r0,#0
00002e  8520              STRH     r0,[r4,#0x28]
000030  2002              MOVS     r0,#2
                  |L1.50|
;;;100    }
000032  bd10              POP      {r4,pc}
;;;101    /*---------------------------------------------------------------------------*/
                          ENDP

                  |L1.52|
                          DCD      generate_file_stats

                          AREA ||i.generate_file_stats||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_u
                          REQUIRE _printf_int_dec
                  generate_file_stats PROC
;;;85     static unsigned short
;;;86     generate_file_stats(void *arg)
000000  b510              PUSH     {r4,lr}
;;;87     {
;;;88       char *f = (char *)arg;
;;;89       return snprintf((char *)uip_appdata, UIP_APPDATA_SIZE, "%5u", httpd_fs_count(f));
000002  f7fffffe          BL       httpd_fs_count
000006  4603              MOV      r3,r0
000008  4805              LDR      r0,|L2.32|
00000a  a204              ADR      r2,|L2.28|
00000c  f24051a6          MOV      r1,#0x5a6
000010  6800              LDR      r0,[r0,#0]  ; uip_appdata
000012  f7fffffe          BL       __2snprintf
000016  b280              UXTH     r0,r0
;;;90     }
000018  bd10              POP      {r4,pc}
;;;91     /*---------------------------------------------------------------------------*/
                          ENDP

00001a  0000              DCW      0x0000
                  |L2.28|
00001c  25357500          DCB      "%5u",0
                  |L2.32|
                          DCD      uip_appdata

                          AREA ||i.generate_net_stats||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_u
                          REQUIRE _printf_int_dec
                  generate_net_stats PROC
;;;178    static unsigned short
;;;179    generate_net_stats(void *arg)
000000  b510              PUSH     {r4,lr}
;;;180    {
;;;181      struct httpd_state *s = (struct httpd_state *)arg;
;;;182      return snprintf((char *)uip_appdata, UIP_APPDATA_SIZE,
000002  f8b000ac          LDRH     r0,[r0,#0xac]
000006  4906              LDR      r1,|L3.32|
000008  a206              ADR      r2,|L3.36|
00000a  f8313010          LDRH     r3,[r1,r0,LSL #1]
00000e  4807              LDR      r0,|L3.44|
000010  f24051a6          MOV      r1,#0x5a6
000014  6800              LDR      r0,[r0,#0]  ; uip_appdata
000016  f7fffffe          BL       __2snprintf
00001a  b280              UXTH     r0,r0
;;;183    		  "%5u\n", ((uip_stats_t *)&uip_stat)[s->count]);
;;;184    }
00001c  bd10              POP      {r4,pc}
;;;185    
                          ENDP

00001e  0000              DCW      0x0000
                  |L3.32|
                          DCD      uip_stat
                  |L3.36|
000024  2535750a          DCB      "%5u\n",0
000028  00      
000029  00                DCB      0
00002a  00                DCB      0
00002b  00                DCB      0
                  |L3.44|
                          DCD      uip_appdata

                          AREA ||i.generate_tcp_stats||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_d
                          REQUIRE _printf_u
                          REQUIRE _printf_c
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  generate_tcp_stats PROC
;;;141    static unsigned short
;;;142    generate_tcp_stats(void *arg)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;143    {
;;;144      struct uip_conn *conn;
;;;145      struct httpd_state *s = (struct httpd_state *)arg;
;;;146        
;;;147      conn = &uip_conns[s->count];
000004  f8b000ac          LDRH     r0,[r0,#0xac]
000008  4923              LDR      r1,|L4.152|
00000a  eb001000          ADD      r0,r0,r0,LSL #4
00000e  eb000040          ADD      r0,r0,r0,LSL #1
000012  eb010480          ADD      r4,r1,r0,LSL #2
000016  b08b              SUB      sp,sp,#0x2c           ;143
;;;148      return snprintf((char *)uip_appdata, UIP_APPDATA_SIZE,
000018  88e0              LDRH     r0,[r4,#6]
00001a  f7fffffe          BL       htons
00001e  4681              MOV      r9,r0
000020  8860              LDRH     r0,[r4,#2]
000022  f7fffffe          BL       htons
000026  f00008ff          AND      r8,r0,#0xff
00002a  8860              LDRH     r0,[r4,#2]
00002c  f7fffffe          BL       htons
000030  0a07              LSRS     r7,r0,#8
000032  8820              LDRH     r0,[r4,#0]
000034  f7fffffe          BL       htons
000038  b2c6              UXTB     r6,r0
00003a  8820              LDRH     r0,[r4,#0]
00003c  f7fffffe          BL       htons
000040  0a05              LSRS     r5,r0,#8
000042  88a0              LDRH     r0,[r4,#4]
000044  f7fffffe          BL       htons
000048  4603              MOV      r3,r0
00004a  7e60              LDRB     r0,[r4,#0x19]
00004c  06c1              LSLS     r1,r0,#27
00004e  d501              BPL      |L4.84|
;;;149    		 "<tr><td>%d</td><td>%u.%u.%u.%u:%u</td><td>%s</td><td>%u</td><td>%u</td><td>%c %c</td></tr>\r\n",
;;;150    		 htons(conn->lport),
;;;151    		 htons(conn->ripaddr[0]) >> 8,
;;;152    		 htons(conn->ripaddr[0]) & 0xff,
;;;153    		 htons(conn->ripaddr[1]) >> 8,
;;;154    		 htons(conn->ripaddr[1]) & 0xff,
;;;155    		 htons(conn->rport),
;;;156    		 states[conn->tcpstateflags & UIP_TS_MASK],
;;;157    		 conn->nrtx,
;;;158    		 conn->timer,
;;;159    		 (uip_outstanding(conn))? '*':' ',
;;;160    		 (uip_stopped(conn))? '!':' ');
000050  2221              MOVS     r2,#0x21
000052  e000              B        |L4.86|
                  |L4.84|
000054  2220              MOVS     r2,#0x20
                  |L4.86|
000056  8a21              LDRH     r1,[r4,#0x10]
000058  b111              CBZ      r1,|L4.96|
00005a  f04f0c2a          MOV      r12,#0x2a             ;159
00005e  e001              B        |L4.100|
                  |L4.96|
000060  f04f0c20          MOV      r12,#0x20             ;159
                  |L4.100|
000064  7ea1              LDRB     r1,[r4,#0x1a]         ;159
000066  7ee4              LDRB     r4,[r4,#0x1b]         ;159
000068  e9cd4106          STRD     r4,r1,[sp,#0x18]      ;159
00006c  490b              LDR      r1,|L4.156|
00006e  e9cdc208          STRD     r12,r2,[sp,#0x20]     ;159
000072  f000000f          AND      r0,r0,#0xf            ;159
000076  4a0a              LDR      r2,|L4.160|
000078  f8510020          LDR      r0,[r1,r0,LSL #2]     ;159
00007c  f24051a6          MOV      r1,#0x5a6             ;159
000080  e9cd9004          STRD     r9,r0,[sp,#0x10]      ;159
000084  e88d01e0          STM      sp,{r5-r8}            ;159
000088  4806              LDR      r0,|L4.164|
00008a  6800              LDR      r0,[r0,#0]            ;159  ; uip_appdata
00008c  f7fffffe          BL       __2snprintf
;;;161    }
000090  b00b              ADD      sp,sp,#0x2c
000092  b280              UXTH     r0,r0                 ;159
000094  e8bd83f0          POP      {r4-r9,pc}
;;;162    /*---------------------------------------------------------------------------*/
                          ENDP

                  |L4.152|
                          DCD      uip_conns
                  |L4.156|
                          DCD      ||.data||+0x10
                  |L4.160|
                          DCD      ||area_number.26||
                  |L4.164|
                          DCD      uip_appdata

                          AREA ||i.httpd_cgi||, CODE, READONLY, ALIGN=2

                  httpd_cgi PROC
;;;71     httpd_cgifunction
;;;72     httpd_cgi(char *name)
000000  b570              PUSH     {r4-r6,lr}
;;;73     {
000002  4605              MOV      r5,r0
;;;74       const struct httpd_cgi_call **f;
;;;75     
;;;76       /* Find the matching name in the table, return the function. */
;;;77       for(f = calls; *f != NULL; ++f) {
000004  4c0a              LDR      r4,|L5.48|
000006  e00a              B        |L5.30|
                  |L5.8|
;;;78         if(strncmp((*f)->name, name, strlen((*f)->name)) == 0) {
000008  6800              LDR      r0,[r0,#0]
00000a  f7fffffe          BL       strlen
00000e  4602              MOV      r2,r0
000010  6820              LDR      r0,[r4,#0]
000012  4629              MOV      r1,r5
000014  6800              LDR      r0,[r0,#0]
000016  f7fffffe          BL       strncmp
00001a  b128              CBZ      r0,|L5.40|
00001c  1d24              ADDS     r4,r4,#4
                  |L5.30|
00001e  6820              LDR      r0,[r4,#0]            ;77
000020  2800              CMP      r0,#0                 ;77
000022  d1f1              BNE      |L5.8|
;;;79           return (*f)->function;
;;;80         }
;;;81       }
;;;82       return nullfunction;
000024  4803              LDR      r0,|L5.52|
;;;83     }
000026  bd70              POP      {r4-r6,pc}
                  |L5.40|
000028  6820              LDR      r0,[r4,#0]            ;79
00002a  6840              LDR      r0,[r0,#4]            ;79
00002c  bd70              POP      {r4-r6,pc}
;;;84     /*---------------------------------------------------------------------------*/
                          ENDP

00002e  0000              DCW      0x0000
                  |L5.48|
                          DCD      ||.data||
                  |L5.52|
                          DCD      nullfunction

                          AREA ||i.net_stats||, CODE, READONLY, ALIGN=2

                  net_stats PROC
;;;186    static
;;;187    PT_THREAD(net_stats(struct httpd_state *s, char *ptr))
000000  b570              PUSH     {r4-r6,lr}
;;;188    {
000002  4604              MOV      r4,r0
;;;189      PSOCK_BEGIN(&s->sout);
000004  8d00              LDRH     r0,[r0,#0x28]
000006  2500              MOVS     r5,#0
000008  b110              CBZ      r0,|L6.16|
00000a  28c3              CMP      r0,#0xc3
00000c  d114              BNE      |L6.56|
00000e  e003              B        |L6.24|
                  |L6.16|
;;;190    
;;;191    #if UIP_STATISTICS
;;;192    
;;;193      for(s->count = 0; s->count < sizeof(uip_stat) / sizeof(uip_stats_t);
000010  f8a450ac          STRH     r5,[r4,#0xac]
                  |L6.20|
;;;194          ++s->count) {
;;;195        PSOCK_GENERATOR_SEND(&s->sout, generate_net_stats, s);
000014  20c3              MOVS     r0,#0xc3
000016  8520              STRH     r0,[r4,#0x28]
                  |L6.24|
000018  4622              MOV      r2,r4
00001a  4909              LDR      r1,|L6.64|
00001c  f1040028          ADD      r0,r4,#0x28
000020  f7fffffe          BL       psock_generator_send
000024  2800              CMP      r0,#0
000026  d009              BEQ      |L6.60|
000028  f8b400ac          LDRH     r0,[r4,#0xac]         ;194
00002c  1c40              ADDS     r0,r0,#1              ;194
00002e  b280              UXTH     r0,r0                 ;194
000030  f8a400ac          STRH     r0,[r4,#0xac]         ;194
000034  2816              CMP      r0,#0x16              ;193
000036  d3ed              BCC      |L6.20|
                  |L6.56|
;;;196      }
;;;197      
;;;198    #endif /* UIP_STATISTICS */
;;;199      
;;;200      PSOCK_END(&s->sout);
000038  8525              STRH     r5,[r4,#0x28]
00003a  2002              MOVS     r0,#2
                  |L6.60|
;;;201    }
00003c  bd70              POP      {r4-r6,pc}
;;;202    /*---------------------------------------------------------------------------*/
                          ENDP

00003e  0000              DCW      0x0000
                  |L6.64|
                          DCD      generate_net_stats

                          AREA ||i.nullfunction||, CODE, READONLY, ALIGN=1

                  nullfunction PROC
;;;64     static
;;;65     PT_THREAD(nullfunction(struct httpd_state *s, char *ptr))
000000  2100              MOVS     r1,#0
;;;66     {
;;;67       PSOCK_BEGIN(&s->sout);
;;;68       PSOCK_END(&s->sout);
000002  8501              STRH     r1,[r0,#0x28]
000004  2002              MOVS     r0,#2
;;;69     }
000006  4770              BX       lr
;;;70     /*---------------------------------------------------------------------------*/
                          ENDP


                          AREA ||i.tcp_stats||, CODE, READONLY, ALIGN=2

                  tcp_stats PROC
;;;163    static
;;;164    PT_THREAD(tcp_stats(struct httpd_state *s, char *ptr))
000000  b570              PUSH     {r4-r6,lr}
;;;165    {
000002  4604              MOV      r4,r0
;;;166      
;;;167      PSOCK_BEGIN(&s->sout);
000004  8d00              LDRH     r0,[r0,#0x28]
000006  2500              MOVS     r5,#0
000008  b110              CBZ      r0,|L8.16|
00000a  28ab              CMP      r0,#0xab
00000c  d120              BNE      |L8.80|
00000e  e00f              B        |L8.48|
                  |L8.16|
;;;168    
;;;169      for(s->count = 0; s->count < UIP_CONNS; ++s->count) {
000010  f8a450ac          STRH     r5,[r4,#0xac]
                  |L8.20|
;;;170        if((uip_conns[s->count].tcpstateflags & UIP_TS_MASK) != UIP_CLOSED) {
000014  f8b400ac          LDRH     r0,[r4,#0xac]
000018  490f              LDR      r1,|L8.88|
00001a  eb001000          ADD      r0,r0,r0,LSL #4
00001e  eb000040          ADD      r0,r0,r0,LSL #1
000022  eb010080          ADD      r0,r1,r0,LSL #2
000026  7e40              LDRB     r0,[r0,#0x19]
000028  0700              LSLS     r0,r0,#28
00002a  d009              BEQ      |L8.64|
;;;171          PSOCK_GENERATOR_SEND(&s->sout, generate_tcp_stats, s);
00002c  20ab              MOVS     r0,#0xab
00002e  8520              STRH     r0,[r4,#0x28]
                  |L8.48|
000030  4622              MOV      r2,r4
000032  490a              LDR      r1,|L8.92|
000034  f1040028          ADD      r0,r4,#0x28
000038  f7fffffe          BL       psock_generator_send
00003c  2800              CMP      r0,#0
00003e  d009              BEQ      |L8.84|
                  |L8.64|
000040  f8b400ac          LDRH     r0,[r4,#0xac]         ;169
000044  1c40              ADDS     r0,r0,#1              ;169
000046  b280              UXTH     r0,r0                 ;169
000048  f8a400ac          STRH     r0,[r4,#0xac]         ;169
00004c  2828              CMP      r0,#0x28              ;169
00004e  d3e1              BCC      |L8.20|
                  |L8.80|
;;;172        }
;;;173      }
;;;174    
;;;175      PSOCK_END(&s->sout);
000050  8525              STRH     r5,[r4,#0x28]
000052  2002              MOVS     r0,#2
                  |L8.84|
;;;176    }
000054  bd70              POP      {r4-r6,pc}
;;;177    /*---------------------------------------------------------------------------*/
                          ENDP

000056  0000              DCW      0x0000
                  |L8.88|
                          DCD      uip_conns
                  |L8.92|
                          DCD      generate_tcp_stats

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  file
                          DCD      ||.conststring||
                          DCD      file_stats

                          AREA ||area_number.12||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.constdata||
                  tcp
                          DCD      ||area_number.24||
                          DCD      tcp_stats

                          AREA ||area_number.13||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.constdata||
                  net
                          DCD      ||area_number.25||
                          DCD      net_stats

                          AREA ||area_number.14||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.14||, ||.constdata||
                  closed
000000  434c4f53          DCB      0x43,0x4c,0x4f,0x53
000004  454400            DCB      0x45,0x44,0x00

                          AREA ||area_number.15||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.15||, ||.constdata||
                  syn_rcvd
000000  53594e2d          DCB      0x53,0x59,0x4e,0x2d
000004  52435644          DCB      0x52,0x43,0x56,0x44
000008  00                DCB      0x00

                          AREA ||area_number.16||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.16||, ||.constdata||
                  syn_sent
000000  53594e2d          DCB      0x53,0x59,0x4e,0x2d
000004  53454e54          DCB      0x53,0x45,0x4e,0x54
000008  00                DCB      0x00

                          AREA ||area_number.17||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.17||, ||.constdata||
                  established
000000  45535441          DCB      0x45,0x53,0x54,0x41
000004  424c4953          DCB      0x42,0x4c,0x49,0x53
000008  48454400          DCB      0x48,0x45,0x44,0x00

                          AREA ||area_number.18||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.18||, ||.constdata||
                  fin_wait_1
000000  46494e2d          DCB      0x46,0x49,0x4e,0x2d
000004  57414954          DCB      0x57,0x41,0x49,0x54
000008  2d3100            DCB      0x2d,0x31,0x00

                          AREA ||area_number.19||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.19||, ||.constdata||
                  fin_wait_2
000000  46494e2d          DCB      0x46,0x49,0x4e,0x2d
000004  57414954          DCB      0x57,0x41,0x49,0x54
000008  2d3200            DCB      0x2d,0x32,0x00

                          AREA ||area_number.20||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.20||, ||.constdata||
                  closing
000000  434c4f53          DCB      0x43,0x4c,0x4f,0x53
000004  494e4700          DCB      0x49,0x4e,0x47,0x00

                          AREA ||area_number.21||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.21||, ||.constdata||
                  time_wait
000000  54494d45          DCB      0x54,0x49,0x4d,0x45
000004  2d574149          DCB      0x2d,0x57,0x41,0x49
000008  5400              DCB      0x54,0x00

                          AREA ||area_number.22||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.22||, ||.constdata||
                  last_ack
000000  4c415354          DCB      0x4c,0x41,0x53,0x54
000004  2d41434b          DCB      0x2d,0x41,0x43,0x4b
000008  00                DCB      0x00

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  66696c65          DCB      "file-stats",0
000004  2d737461
000008  747300  

                          AREA ||area_number.24||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

                          EXPORTAS ||area_number.24||, ||.conststring||
000000  7463702d          DCB      "tcp-connections",0
000004  636f6e6e
000008  65637469
00000c  6f6e7300

                          AREA ||area_number.25||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

                          EXPORTAS ||area_number.25||, ||.conststring||
000000  6e65742d          DCB      "net-stats",0
000004  73746174
000008  7300    

                          AREA ||area_number.26||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

                          EXPORTAS ||area_number.26||, ||.conststring||
000000  3c74723e          DCB      "<tr><td>%d</td><td>%u.%u.%u.%u:%u</td><td>%s</td><td>%u"
000004  3c74643e
000008  25643c2f
00000c  74643e3c
000010  74643e25
000014  752e2575
000018  2e25752e
00001c  25753a25
000020  753c2f74
000024  643e3c74
000028  643e2573
00002c  3c2f7464
000030  3e3c7464
000034  3e2575  
000037  3c2f7464          DCB      "</td><td>%u</td><td>%c %c</td></tr>\r\n",0
00003b  3e3c7464
00003f  3e25753c
000043  2f74643e
000047  3c74643e
00004b  25632025
00004f  633c2f74
000053  643e3c2f
000057  74723e0d
00005b  0a00    

                          AREA ||.data||, DATA, ALIGN=2

                  calls
                          DCD      file
                          DCD      tcp
                          DCD      net
                          DCD      0x00000000
                  states
                          DCD      closed
                          DCD      syn_rcvd
                          DCD      syn_sent
                          DCD      established
                          DCD      fin_wait_1
                          DCD      fin_wait_2
                          DCD      closing
                          DCD      time_wait
                          DCD      last_ack
