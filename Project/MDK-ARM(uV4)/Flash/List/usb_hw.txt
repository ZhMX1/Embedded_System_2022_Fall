; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\usb_hw.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\usb_hw.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\usb_hw.crf ..\..\User\usb_mass\usb_hw.c]
                          THUMB

                          AREA ||i.Enter_LowPowerMode||, CODE, READONLY, ALIGN=2

                  Enter_LowPowerMode PROC
;;;171    */
;;;172    void Enter_LowPowerMode(void)
000000  4901              LDR      r1,|L1.8|
;;;173    {
;;;174    	/* 设置设备状态为“挂起” */
;;;175    	bDeviceState = SUSPENDED;
000002  2003              MOVS     r0,#3
000004  6008              STR      r0,[r1,#0]  ; bDeviceState
;;;176    }
000006  4770              BX       lr
;;;177    
                          ENDP

                  |L1.8|
                          DCD      bDeviceState

                          AREA ||i.Get_SerialNum||, CODE, READONLY, ALIGN=2

                  Get_SerialNum PROC
;;;125    */
;;;126    void Get_SerialNum(void)
000000  480a              LDR      r0,|L2.44|
;;;127    {
000002  b510              PUSH     {r4,lr}
;;;128    	uint32_t Device_Serial0, Device_Serial1, Device_Serial2;
;;;129    	
;;;130    	Device_Serial0 = *(__IO uint32_t*)(0x1FFFF7E8);
000004  6801              LDR      r1,[r0,#0]
;;;131    	Device_Serial1 = *(__IO uint32_t*)(0x1FFFF7EC);
000006  1d00              ADDS     r0,r0,#4
000008  6804              LDR      r4,[r0,#0]
;;;132    	Device_Serial2 = *(__IO uint32_t*)(0x1FFFF7F0);
00000a  1d00              ADDS     r0,r0,#4
00000c  6800              LDR      r0,[r0,#0]
;;;133    	
;;;134    	Device_Serial0 += Device_Serial2;
00000e  1808              ADDS     r0,r1,r0
000010  d00b              BEQ      |L2.42|
;;;135    	
;;;136    	if (Device_Serial0 != 0)
;;;137    	{
;;;138    		IntToUnicode (Device_Serial0, &MASS_StringSerial[2] , 8);
000012  2208              MOVS     r2,#8
000014  4906              LDR      r1,|L2.48|
000016  f7fffffe          BL       IntToUnicode
;;;139    		IntToUnicode (Device_Serial1, &MASS_StringSerial[18], 4);
00001a  4905              LDR      r1,|L2.48|
00001c  4620              MOV      r0,r4
00001e  2204              MOVS     r2,#4
000020  e8bd4010          POP      {r4,lr}
000024  3110              ADDS     r1,r1,#0x10
000026  f7ffbffe          B.W      IntToUnicode
                  |L2.42|
;;;140    	}
;;;141    }
00002a  bd10              POP      {r4,pc}
;;;142    
                          ENDP

                  |L2.44|
                          DCD      0x1ffff7e8
                  |L2.48|
                          DCD      MASS_StringSerial+0x2

                          AREA ||i.InitUsbDev||, CODE, READONLY, ALIGN=2

                  InitUsbDev PROC
;;;54     */
;;;55     void InitUsbDev(void)
000000  b538              PUSH     {r3-r5,lr}
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
00000a  2000              MOVS     r0,#0
00000c  f7fffffe          BL       USB_Cable_Config
000010  f44f4080          MOV      r0,#0x4000
000014  f8ad0000          STRH     r0,[sp,#0]
000018  2010              MOVS     r0,#0x10
00001a  f88d0003          STRB     r0,[sp,#3]
00001e  2002              MOVS     r0,#2
000020  f88d0002          STRB     r0,[sp,#2]
000024  4669              MOV      r1,sp
000026  481d              LDR      r0,|L3.156|
000028  f7fffffe          BL       GPIO_Init
;;;56     {	
;;;57     	USB_Disconnect_Config();/* 配置控制USB连接和断开的GPIO */
;;;58     
;;;59     	MAL_Config();			/* MAL configuration */
00002c  f7fffffe          BL       MAL_Config
000030  2000              MOVS     r0,#0
000032  f7fffffe          BL       RCC_USBCLKConfig
000036  2101              MOVS     r1,#1
000038  05c8              LSLS     r0,r1,#23
00003a  f7fffffe          BL       RCC_APB1PeriphClockCmd
00003e  f44f60c0          MOV      r0,#0x600
000042  f7fffffe          BL       NVIC_PriorityGroupConfig
000046  2014              MOVS     r0,#0x14
000048  f88d0000          STRB     r0,[sp,#0]
00004c  2401              MOVS     r4,#1
00004e  f88d4001          STRB     r4,[sp,#1]
000052  f88d4002          STRB     r4,[sp,#2]
000056  f88d4003          STRB     r4,[sp,#3]
00005a  4668              MOV      r0,sp
00005c  f7fffffe          BL       NVIC_Init
000060  2013              MOVS     r0,#0x13
000062  f88d0000          STRB     r0,[sp,#0]
000066  f88d4001          STRB     r4,[sp,#1]
00006a  2500              MOVS     r5,#0
00006c  f88d5002          STRB     r5,[sp,#2]
000070  f88d4003          STRB     r4,[sp,#3]
000074  4668              MOV      r0,sp
000076  f7fffffe          BL       NVIC_Init
00007a  2031              MOVS     r0,#0x31
00007c  f88d0000          STRB     r0,[sp,#0]
000080  f88d5001          STRB     r5,[sp,#1]
000084  f88d5002          STRB     r5,[sp,#2]
000088  f88d4003          STRB     r4,[sp,#3]
00008c  4668              MOV      r0,sp
00008e  f7fffffe          BL       NVIC_Init
;;;60     
;;;61     	Set_USBClock();			/* 设置USB时钟 */
;;;62     	USB_Interrupts_Config();/* 配置USB中断 */
;;;63     	USB_Init();				/* 初始化USB设备, 此函数会调用UsbConnect()连接USB设备到USB总线 */
000092  e8bd4038          POP      {r3-r5,lr}
000096  f7ffbffe          B.W      USB_Init
;;;64     }
;;;65     
                          ENDP

00009a  0000              DCW      0x0000
                  |L3.156|
                          DCD      0x40010c00

                          AREA ||i.IntToUnicode||, CODE, READONLY, ALIGN=2

                  IntToUnicode PROC
;;;286    */
;;;287    static void IntToUnicode (uint32_t value , uint8_t *pbuf , uint8_t len)
000000  b5f0              PUSH     {r4-r7,lr}
;;;288    {
;;;289    	uint8_t idx = 0;
000002  2300              MOVS     r3,#0
;;;290    	
;;;291    	for( idx = 0 ; idx < len ; idx ++)
;;;292    	{
;;;293    		if( ((value >> 28)) < 0xA )
000004  240a              MOVS     r4,#0xa
;;;294    		{
;;;295    			pbuf[ 2* idx] = (value >> 28) + '0';
000006  2530              MOVS     r5,#0x30
;;;296    		}
;;;297    		else
;;;298    		{
;;;299    			pbuf[2* idx] = (value >> 28) + 'A' - 10; 
000008  2637              MOVS     r6,#0x37
00000a  461f              MOV      r7,r3
00000c  e011              B        |L4.50|
00000e  bf00              NOP                            ;293
                  |L4.16|
000010  ebb47f10          CMP      r4,r0,LSR #28         ;293
000014  d902              BLS      |L4.28|
000016  eb057c10          ADD      r12,r5,r0,LSR #28     ;295
00001a  e001              B        |L4.32|
                  |L4.28|
00001c  eb067c10          ADD      r12,r6,r0,LSR #28
                  |L4.32|
000020  f801c013          STRB     r12,[r1,r3,LSL #1]
;;;300    		}
;;;301    		
;;;302    		value = value << 4;
;;;303    		
;;;304    		pbuf[ 2* idx + 1] = 0;
000024  eb010c43          ADD      r12,r1,r3,LSL #1
000028  0100              LSLS     r0,r0,#4              ;302
00002a  1c5b              ADDS     r3,r3,#1
00002c  f88c7001          STRB     r7,[r12,#1]
000030  b2db              UXTB     r3,r3                 ;291
                  |L4.50|
000032  4293              CMP      r3,r2                 ;291
000034  d3ec              BCC      |L4.16|
;;;305    	}
;;;306    }
000036  bdf0              POP      {r4-r7,pc}
;;;307    
                          ENDP


                          AREA ||i.Leave_LowPowerMode||, CODE, READONLY, ALIGN=2

                  Leave_LowPowerMode PROC
;;;185    */
;;;186    void Leave_LowPowerMode(void)
000000  4804              LDR      r0,|L5.20|
;;;187    {	
;;;188    	DEVICE_INFO *pInfo = &Device_Info;
;;;189    	
;;;190    	/* 更新设备状态 */
;;;191    	if (pInfo->Current_Configuration != 0)
000002  7a81              LDRB     r1,[r0,#0xa]
;;;192    	{
;;;193    		/* 设备连接到主机并配置成功 */
;;;194    		bDeviceState = CONFIGURED;
000004  4804              LDR      r0,|L5.24|
000006  b109              CBZ      r1,|L5.12|
000008  2105              MOVS     r1,#5
00000a  e000              B        |L5.14|
                  |L5.12|
;;;195    	}
;;;196    	else
;;;197    	{
;;;198    		bDeviceState = ATTACHED;
00000c  2101              MOVS     r1,#1
                  |L5.14|
00000e  6001              STR      r1,[r0,#0]            ;194  ; bDeviceState
;;;199    	}
;;;200    }
000010  4770              BX       lr
;;;201    
                          ENDP

000012  0000              DCW      0x0000
                  |L5.20|
                          DCD      Device_Info
                  |L5.24|
                          DCD      bDeviceState

                          AREA ||i.Led_RW_OFF||, CODE, READONLY, ALIGN=1

                  Led_RW_OFF PROC
;;;86     */
;;;87     void Led_RW_OFF(void)
000000  4770              BX       lr
;;;88     {
;;;89     	//bsp_LedOff(3);
;;;90     }
;;;91     
                          ENDP


                          AREA ||i.Led_RW_ON||, CODE, READONLY, ALIGN=1

                  Led_RW_ON PROC
;;;73     */
;;;74     void Led_RW_ON(void)
000000  4770              BX       lr
;;;75     {
;;;76     	//bsp_LedOn(3);
;;;77     }
;;;78     
                          ENDP


                          AREA ||i.MAL_Config||, CODE, READONLY, ALIGN=1

                  MAL_Config PROC
;;;40     */
;;;41     void MAL_Config(void)
000000  b510              PUSH     {r4,lr}
;;;42     {
;;;43     	MAL_Init(0);	/* 配置SD卡 */
000002  2000              MOVS     r0,#0
000004  f7fffffe          BL       MAL_Init
;;;44     	MAL_Init(1);	/* 配置NAND Flash */
000008  e8bd4010          POP      {r4,lr}
00000c  2001              MOVS     r0,#1
00000e  f7ffbffe          B.W      MAL_Init
;;;45     }
;;;46     
                          ENDP


                          AREA ||i.USB_Cable_Config||, CODE, READONLY, ALIGN=2

                  USB_Cable_Config PROC
;;;150    */
;;;151    void USB_Cable_Config (uint8_t NewState)
000000  4a04              LDR      r2,|L9.20|
;;;152    {
;;;153    	/* 安富莱开发板使用PB14控制USB数据线上上拉电阻。PB14=0是USB电缆连接到总线 */
;;;154    	if (NewState != DISABLE)
000002  2800              CMP      r0,#0
;;;155    	{
;;;156    		GPIO_ResetBits(GPIOB, GPIO_Pin_14);	
000004  f44f4180          MOV      r1,#0x4000
;;;157    	}
;;;158    	else
;;;159    	{
;;;160    		GPIO_SetBits(GPIOB, GPIO_Pin_14);
000008  4610              MOV      r0,r2
00000a  d001              BEQ      |L9.16|
00000c  f7ffbffe          B.W      GPIO_ResetBits
                  |L9.16|
000010  f7ffbffe          B.W      GPIO_SetBits
;;;161    	}
;;;162    }
;;;163    
                          ENDP

                  |L9.20|
                          DCD      0x40010c00

                          AREA ||i.USB_Configured_LED||, CODE, READONLY, ALIGN=1

                  USB_Configured_LED PROC
;;;99     */
;;;100    void USB_Configured_LED(void)
000000  4770              BX       lr
;;;101    {
;;;102    	//bsp_LedOn(1);
;;;103    }
;;;104    
                          ENDP


                          AREA ||i.USB_HP_CAN1_TX_IRQHandler||, CODE, READONLY, ALIGN=1

                  USB_HP_CAN1_TX_IRQHandler PROC
;;;315    */ 
;;;316    void USB_HP_CAN1_TX_IRQHandler(void)
000000  f7ffbffe          B.W      CTR_HP
;;;317    {
;;;318    	CTR_HP();
;;;319    }
;;;320    
                          ENDP


                          AREA ||i.USB_NotConfigured_LED||, CODE, READONLY, ALIGN=1

                  USB_NotConfigured_LED PROC
;;;112    */
;;;113    void USB_NotConfigured_LED(void)
000000  4770              BX       lr
;;;114    {
;;;115    	//bsp_LedOff(1);
;;;116    }
;;;117    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\usb_mass\\usb_hw.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_usb_hw_c_886c3637____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_usb_hw_c_886c3637____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_usb_hw_c_886c3637____REVSH|
#line 128
|__asm___8_usb_hw_c_886c3637____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
