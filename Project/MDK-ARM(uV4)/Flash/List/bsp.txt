; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp.crf ..\..\User\bsp\bsp.c]
                          THUMB

                          AREA ||i.bsp_Idle||, CODE, READONLY, ALIGN=2

                  bsp_Idle PROC
;;;120    extern void SaveScreenToBmp(uint16_t _index);	/* 此函数在user\app\bmp_file.c --- 调用用了应用层的函数 */
;;;121    void bsp_Idle(void)
000000  b510              PUSH     {r4,lr}
;;;122    {
;;;123    	/* --- 喂狗 */
;;;124    
;;;125    	/* --- 让CPU进入休眠，由Systick定时中断唤醒或者其他中断唤醒 */
;;;126    
;;;127    	/* 例如 emWin 图形库，可以插入图形库需要的轮询函数 */
;;;128    	//GUI_Exec();
;;;129    
;;;130    	/* 例如 uIP 协议，可以插入uip轮询函数 */
;;;131    
;;;132    	TOUCH_CapScan();	/* I2C接口电容触摸屏扫描 */
000002  f7fffffe          BL       TOUCH_CapScan
;;;133    	
;;;134    	if (bsp_GetKey2() == SYS_DOWN_K1K2)	/* K1 K2 组合键用于截屏 */
000006  f7fffffe          BL       bsp_GetKey2
00000a  2819              CMP      r0,#0x19
00000c  d107              BNE      |L1.30|
;;;135    	{
;;;136    		static uint16_t s_file_no = 0;
;;;137    
;;;138    		SaveScreenToBmp(s_file_no++);	/* 截图保存为bmp文件，放在SD卡根目录 */
00000e  4904              LDR      r1,|L1.32|
000010  8808              LDRH     r0,[r1,#0]  ; s_file_no
000012  1c42              ADDS     r2,r0,#1
000014  800a              STRH     r2,[r1,#0]
000016  e8bd4010          POP      {r4,lr}
00001a  f7ffbffe          B.W      SaveScreenToBmp
                  |L1.30|
;;;139    	}
;;;140    }
00001e  bd10              POP      {r4,pc}
;;;141    
                          ENDP

                  |L1.32|
                          DCD      ||.data||

                          AREA ||i.bsp_Init||, CODE, READONLY, ALIGN=1

                  bsp_Init PROC
;;;30     */
;;;31     void bsp_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	/*
;;;34     		由于ST固件库的启动文件已经执行了CPU系统时钟的初始化，所以不必再次重复配置系统时钟。
;;;35     		启动文件配置了CPU主时钟频率、内部Flash访问速度和可选的外部SRAM FSMC初始化。
;;;36     
;;;37     		系统时钟缺省配置为72MHz，如果需要更改，可以修改 system_stm32f10x.c 文件
;;;38     	*/
;;;39     
;;;40     	/* 中断优先级分组设置为4，即： 抢占优先级有0-15(0级别最高）级，无子优先级 */
;;;41     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
000002  f44f7040          MOV      r0,#0x300
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;42     	
;;;43     	bsp_InitUart(); 	/* 初始化串口 */
00000a  f7fffffe          BL       bsp_InitUart
;;;44     	bsp_InitLed(); 		/* 初始化LED指示灯端口 */
00000e  f7fffffe          BL       bsp_InitLed
;;;45     	bsp_InitKey();		/* 初始化按键 */
000012  f7fffffe          BL       bsp_InitKey
;;;46     
;;;47     	bsp_InitRTC();		/* 初始化CPU内部RTC */
000016  f7fffffe          BL       bsp_InitRTC
;;;48     	
;;;49     	bsp_InitExtSRAM();	/* 配置FSMC总线, 用于SRAM访问 */
00001a  f7fffffe          BL       bsp_InitExtSRAM
;;;50     	bsp_InitNorFlash();	/* 初始化FSMC NOR Flash */
00001e  f7fffffe          BL       bsp_InitNorFlash
;;;51     
;;;52     	bsp_InitI2C();		/* 配置I2C总线 */
000022  f7fffffe          BL       bsp_InitI2C
;;;53     	
;;;54     	bsp_InitSPIBus();	/* 配置SPI总线，必须在初始化串行Flash之前执行本函数 */
000026  f7fffffe          BL       bsp_InitSPIBus
;;;55     	bsp_InitSFlash();	/* 初始化串行Flash. 该函数会识别串行FLASH型号 */
00002a  f7fffffe          BL       bsp_InitSFlash
;;;56     	
;;;57     	bsp_InitTimer();	/* 初始化系统滴答定时器 (此函数会开中断) */
00002e  f7fffffe          BL       bsp_InitTimer
;;;58     
;;;59     	bsp_InitMPU6050();	/* 配置MPU6050三轴陀螺仪 */
000032  f7fffffe          BL       bsp_InitMPU6050
;;;60     	bsp_InitBH1750();	/* 配置BH1750光照度传感器 */
000036  f7fffffe          BL       bsp_InitBH1750
;;;61     	
;;;62     	bsp_InitBMP180();	/* 配置BMP180气压传感器 */
00003a  f7fffffe          BL       bsp_InitBMP180
;;;63     	bsp_InitDHT11();
00003e  f7fffffe          BL       bsp_InitDHT11
;;;64     	bsp_InitPS2();		/* 初始化PS2键盘鼠标接口。注意此时并不启动PS2设备检测，还需要执行PS2_StartWork() */
000042  e8bd4010          POP      {r4,lr}
000046  f7ffbffe          B.W      bsp_InitPS2
;;;65     
;;;66     	/* 下面的设备暂时不配置，等需要用的时候再配置和启动 */
;;;67     	
;;;68     #if 0	/* #if 0 是条件编译，0表示此段代码不参与编译，1表示参与编译 */
;;;69     	PS2_StartWork();	/* 启动PS2设备检测 */
;;;70     	IRD_StartWork();	/* 配置并启动红外接收模块 */
;;;71     	
;;;72     	bsp_InitHMC5883L();	/* 配置HMC5883L磁力计 */
;;;73     	bsp_InitBMP180();	/* 配置BMP180气压传感器 */
;;;74     	bsp_InitGPS();		/* 配置GPS模块 */	
;;;75     #endif
;;;76     	
;;;77     }
;;;78     
                          ENDP


                          AREA ||i.bsp_RunPer10ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer10ms PROC
;;;87     */
;;;88     void bsp_RunPer10ms(void)
000000  b510              PUSH     {r4,lr}
;;;89     {
;;;90     	bsp_KeyScan();		/* 扫描按键 */
000002  f7fffffe          BL       bsp_KeyScan
;;;91     	
;;;92     	BEEP_Pro();			/* 处理蜂鸣器定时器 */
000006  e8bd4010          POP      {r4,lr}
00000a  f7ffbffe          B.W      BEEP_Pro
;;;93     }
;;;94     
                          ENDP


                          AREA ||i.bsp_RunPer1ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer1ms PROC
;;;103    */
;;;104    void bsp_RunPer1ms(void)
000000  b510              PUSH     {r4,lr}
;;;105    {
;;;106    	TOUCH_Scan();		/* 触摸扫描（RA8875内置触摸和TSC2046触摸） */
000002  f7fffffe          BL       TOUCH_Scan
;;;107    	
;;;108    	PS2_Timer();		/* PS/2键盘和鼠标定时处理 */
000006  e8bd4010          POP      {r4,lr}
00000a  f7ffbffe          B.W      PS2_Timer
;;;109    }
;;;110    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=1

                  s_file_no
000000  0000              DCW      0x0000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\bsp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_bsp_c_bsp_Init____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REVSH|
#line 128
|__asm___5_bsp_c_bsp_Init____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
