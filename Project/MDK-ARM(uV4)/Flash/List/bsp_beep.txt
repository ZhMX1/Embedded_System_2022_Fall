; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_beep.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_beep.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_beep.crf ..\..\User\bsp\src\bsp_beep.c]
                          THUMB

                          AREA ||i.BEEP_InitHard||, CODE, READONLY, ALIGN=1

                  BEEP_InitHard PROC
;;;50     */
;;;51     void BEEP_InitHard(void)
000000  4770              BX       lr
;;;52     {
;;;53     #ifdef	BEEP_HAVE_POWER		/* 有源蜂鸣器 */
;;;54     	GPIO_InitTypeDef GPIO_InitStructure;
;;;55     
;;;56     	/* 打开GPIO的时钟 */
;;;57     	RCC_APB2PeriphClockCmd(GPIO_RCC_BEEP, ENABLE);
;;;58     
;;;59     	BEEP_DISABLE();
;;;60     
;;;61     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
;;;62     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	/* 推挽输出模式 */	
;;;63     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_BEEP;
;;;64     	GPIO_Init(GPIO_PORT_BEEP, &GPIO_InitStructure);
;;;65     #endif
;;;66     }
;;;67     
                          ENDP


                          AREA ||i.BEEP_KeyTone||, CODE, READONLY, ALIGN=1

                  BEEP_KeyTone PROC
;;;118    */
;;;119    void BEEP_KeyTone(void)
000000  2201              MOVS     r2,#1
;;;120    {
;;;121    	BEEP_Start(5, 1, 1);	/* 鸣叫50ms，停10ms， 1次 */
000002  4611              MOV      r1,r2
000004  2005              MOVS     r0,#5
000006  f7ffbffe          B.W      BEEP_Start
;;;122    }
;;;123    
                          ENDP


                          AREA ||i.BEEP_Pro||, CODE, READONLY, ALIGN=2

                  BEEP_Pro PROC
;;;131    */
;;;132    void BEEP_Pro(void)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;133    {
;;;134    	if ((g_tBeep.ucEnalbe == 0) || (g_tBeep.usStopTime == 0))
000004  4c1f              LDR      r4,|L3.132|
000006  7820              LDRB     r0,[r4,#0]  ; g_tBeep
000008  2800              CMP      r0,#0                 ;133
00000a  d021              BEQ      |L3.80|
00000c  88a7              LDRH     r7,[r4,#4]  ; g_tBeep
00000e  2f00              CMP      r7,#0
000010  d01e              BEQ      |L3.80|
000012  4625              MOV      r5,r4
;;;135    	{
;;;136    		return;
;;;137    	}
;;;138    
;;;139    	if (g_tBeep.ucState == 0)
;;;140    	{
;;;141    		if (g_tBeep.usStopTime > 0)	/* 间断发声 */
;;;142    		{
;;;143    			if (++g_tBeep.usCount >= g_tBeep.usBeepTime)
;;;144    			{
;;;145    				BEEP_DISABLE();		/* 停止发声 */
000014  4a1c              LDR      r2,|L3.136|
000016  892d              LDRH     r5,[r5,#8]            ;143
000018  f894c001          LDRB     r12,[r4,#1]           ;139  ; g_tBeep
00001c  1c6d              ADDS     r5,r5,#1              ;143
00001e  b2ae              UXTH     r6,r5                 ;143
000020  1591              ASRS     r1,r2,#22
000022  481a              LDR      r0,|L3.140|
000024  2500              MOVS     r5,#0                 ;143
000026  f24053dc          MOV      r3,#0x5dc
00002a  f1bc0f00          CMP      r12,#0                ;139
00002e  d011              BEQ      |L3.84|
;;;146    				g_tBeep.usCount = 0;
;;;147    				g_tBeep.ucState = 1;
;;;148    			}
;;;149    		}
;;;150    		else
;;;151    		{
;;;152    			;	/* 不做任何处理，连续发声 */
;;;153    		}
;;;154    	}
;;;155    	else if (g_tBeep.ucState == 1)
000030  f1bc0f01          CMP      r12,#1
000034  d10c              BNE      |L3.80|
;;;156    	{
;;;157    		if (++g_tBeep.usCount >= g_tBeep.usStopTime)
000036  8126              STRH     r6,[r4,#8]
000038  42be              CMP      r6,r7
00003a  d309              BCC      |L3.80|
;;;158    		{
;;;159    			/* 连续发声时，直到调用stop停止为止 */
;;;160    			if (g_tBeep.usCycle > 0)
00003c  88e6              LDRH     r6,[r4,#6]  ; g_tBeep
00003e  b1b6              CBZ      r6,|L3.110|
;;;161    			{
;;;162    				if (++g_tBeep.usCycleCount >= g_tBeep.usCycle)
000040  8967              LDRH     r7,[r4,#0xa]  ; g_tBeep
000042  1c7f              ADDS     r7,r7,#1
000044  b2bf              UXTH     r7,r7
000046  8167              STRH     r7,[r4,#0xa]
000048  42b7              CMP      r7,r6
00004a  d310              BCC      |L3.110|
;;;163    				{
;;;164    					/* 循环次数到，停止发声 */
;;;165    					g_tBeep.ucEnalbe = 0;
00004c  7025              STRB     r5,[r4,#0]
;;;166    				}
;;;167    
;;;168    				if (g_tBeep.ucEnalbe == 0)
;;;169    				{
;;;170    					g_tBeep.usStopTime = 0;
00004e  80a5              STRH     r5,[r4,#4]
                  |L3.80|
;;;171    					return;
;;;172    				}
;;;173    			}
;;;174    
;;;175    			g_tBeep.usCount = 0;
;;;176    			g_tBeep.ucState = 0;
;;;177    
;;;178    			BEEP_ENABLE();			/* 开始发声 */
;;;179    		}
;;;180    	}
;;;181    }
000050  e8bd81fc          POP      {r2-r8,pc}
                  |L3.84|
000054  8126              STRH     r6,[r4,#8]            ;143
000056  8867              LDRH     r7,[r4,#2]            ;143  ; g_tBeep
000058  42be              CMP      r6,r7                 ;143
00005a  d3f9              BCC      |L3.80|
00005c  e9cd3500          STRD     r3,r5,[sp,#0]         ;143
000060  2301              MOVS     r3,#1                 ;145
000062  f7fffffe          BL       bsp_SetTIMOutPWM
000066  8125              STRH     r5,[r4,#8]            ;146
000068  2001              MOVS     r0,#1                 ;147
00006a  7060              STRB     r0,[r4,#1]            ;147
00006c  e7f0              B        |L3.80|
                  |L3.110|
00006e  8125              STRH     r5,[r4,#8]            ;175
000070  7065              STRB     r5,[r4,#1]            ;176
000072  f2413488          MOV      r4,#0x1388            ;178
000076  e9cd3400          STRD     r3,r4,[sp,#0]         ;178
00007a  2301              MOVS     r3,#1                 ;178
00007c  f7fffffe          BL       bsp_SetTIMOutPWM
000080  e7e6              B        |L3.80|
;;;182    
                          ENDP

000082  0000              DCW      0x0000
                  |L3.132|
                          DCD      ||.bss||
                  |L3.136|
                          DCD      0x40012c00
                  |L3.140|
                          DCD      0x40010800

                          AREA ||i.BEEP_Start||, CODE, READONLY, ALIGN=2

                  BEEP_Start PROC
;;;77     */
;;;78     void BEEP_Start(uint16_t _usBeepTime, uint16_t _usStopTime, uint16_t _usCycle)
000000  b51c              PUSH     {r2-r4,lr}
;;;79     {
000002  2800              CMP      r0,#0
000004  d015              BEQ      |L4.50|
;;;80     	if (_usBeepTime == 0)
;;;81     	{
;;;82     		return;
;;;83     	}
;;;84     
;;;85     	g_tBeep.usBeepTime = _usBeepTime;
000006  4b0b              LDR      r3,|L4.52|
000008  8058              STRH     r0,[r3,#2]
;;;86     	g_tBeep.usStopTime = _usStopTime;
00000a  8099              STRH     r1,[r3,#4]
;;;87     	g_tBeep.usCycle = _usCycle;
00000c  80da              STRH     r2,[r3,#6]
;;;88     	g_tBeep.usCount = 0;
00000e  2000              MOVS     r0,#0
000010  8118              STRH     r0,[r3,#8]
;;;89     	g_tBeep.usCycleCount = 0;
000012  8158              STRH     r0,[r3,#0xa]
;;;90     	g_tBeep.ucState = 0;
000014  7058              STRB     r0,[r3,#1]
;;;91     	g_tBeep.ucEnalbe = 1;	/* 设置完全局参数后再使能发声标志 */
000016  2001              MOVS     r0,#1
000018  7018              STRB     r0,[r3,#0]
;;;92     
;;;93     	BEEP_ENABLE();			/* 开始发声 */
00001a  f2413188          MOV      r1,#0x1388
00001e  f24050dc          MOV      r0,#0x5dc
000022  4a05              LDR      r2,|L4.56|
000024  e9cd0100          STRD     r0,r1,[sp,#0]
000028  2301              MOVS     r3,#1
00002a  1591              ASRS     r1,r2,#22
00002c  4803              LDR      r0,|L4.60|
00002e  f7fffffe          BL       bsp_SetTIMOutPWM
                  |L4.50|
;;;94     }
000032  bd1c              POP      {r2-r4,pc}
;;;95     
                          ENDP

                  |L4.52|
                          DCD      ||.bss||
                  |L4.56|
                          DCD      0x40012c00
                  |L4.60|
                          DCD      0x40010800

                          AREA ||i.BEEP_Stop||, CODE, READONLY, ALIGN=2

                  BEEP_Stop PROC
;;;103    */
;;;104    void BEEP_Stop(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;105    {
;;;106    	g_tBeep.ucEnalbe = 0;
000002  4907              LDR      r1,|L5.32|
000004  2000              MOVS     r0,#0
;;;107    
;;;108    	BEEP_DISABLE();	/* 必须在清控制标志后再停止发声，避免停止后在中断中又开启 */
000006  4a07              LDR      r2,|L5.36|
000008  7008              STRB     r0,[r1,#0]            ;106
00000a  f24051dc          MOV      r1,#0x5dc
00000e  e9cd1000          STRD     r1,r0,[sp,#0]
000012  2301              MOVS     r3,#1
000014  1591              ASRS     r1,r2,#22
000016  4804              LDR      r0,|L5.40|
000018  f7fffffe          BL       bsp_SetTIMOutPWM
;;;109    }
00001c  bd1c              POP      {r2-r4,pc}
;;;110    
                          ENDP

00001e  0000              DCW      0x0000
                  |L5.32|
                          DCD      ||.bss||
                  |L5.36|
                          DCD      0x40012c00
                  |L5.40|
                          DCD      0x40010800

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  g_tBeep
                          %        12

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_beep.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_beep_c_471486d3____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_bsp_beep_c_471486d3____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_beep_c_471486d3____REVSH|
#line 128
|__asm___10_bsp_beep_c_471486d3____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
