; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\usb_scsi.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\usb_scsi.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\usb_scsi.crf ..\..\User\usb_mass\usb_scsi.c]
                          THUMB

                          AREA ||i.SCSI_Address_Management||, CODE, READONLY, ALIGN=2

                  SCSI_Address_Management PROC
;;;426    *******************************************************************************/
;;;427    bool SCSI_Address_Management(uint8_t lun , uint8_t Cmd , uint32_t LBA , uint32_t BlockNbr)
000000  b570              PUSH     {r4-r6,lr}
;;;428    {
;;;429    
;;;430      if ((LBA + BlockNbr) > Mass_Block_Count[lun] )
000002  4c18              LDR      r4,|L1.100|
000004  441a              ADD      r2,r2,r3
000006  f8544020          LDR      r4,[r4,r0,LSL #2]
00000a  42a2              CMP      r2,r4
00000c  d90d              BLS      |L1.42|
;;;431      {
;;;432        if (Cmd == SCSI_WRITE10)
00000e  292a              CMP      r1,#0x2a
000010  d102              BNE      |L1.24|
;;;433        {
;;;434          Bot_Abort(BOTH_DIR);
000012  2002              MOVS     r0,#2
000014  f7fffffe          BL       Bot_Abort
                  |L1.24|
;;;435        }
;;;436        Bot_Abort(DIR_IN);
000018  2000              MOVS     r0,#0
00001a  f7fffffe          BL       Bot_Abort
00001e  4912              LDR      r1,|L1.104|
;;;437        Set_Scsi_Sense_Data(lun, ILLEGAL_REQUEST, ADDRESS_OUT_OF_RANGE);
000020  2205              MOVS     r2,#5
000022  2021              MOVS     r0,#0x21
000024  708a              STRB     r2,[r1,#2]
000026  7308              STRB     r0,[r1,#0xc]
;;;438        Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
;;;439    	scsi_printf("SCSI_Address_Management(%d), ADDRESS_OUT_OF_RANGE\r\n",lun);
;;;440        return (FALSE);
000028  e011              B        |L1.78|
                  |L1.42|
;;;441      }
;;;442    
;;;443    
;;;444      if (CBW.dDataLength != BlockNbr * Mass_Block_Size[lun])
00002a  4d11              LDR      r5,|L1.112|
00002c  4c0f              LDR      r4,|L1.108|
00002e  f8550020          LDR      r0,[r5,r0,LSL #2]
000032  68a2              LDR      r2,[r4,#8]  ; CBW
000034  4358              MULS     r0,r3,r0
000036  4282              CMP      r2,r0
000038  d011              BEQ      |L1.94|
;;;445      {
;;;446        if (Cmd == SCSI_WRITE10)
00003a  292a              CMP      r1,#0x2a
00003c  d00d              BEQ      |L1.90|
;;;447        {
;;;448          Bot_Abort(BOTH_DIR);
;;;449        }
;;;450        else
;;;451        {
;;;452          Bot_Abort(DIR_IN);
00003e  2000              MOVS     r0,#0
                  |L1.64|
000040  f7fffffe          BL       Bot_Abort
;;;453        }
;;;454        Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
000044  7b60              LDRB     r0,[r4,#0xd]  ; CBW
000046  2224              MOVS     r2,#0x24
000048  2105              MOVS     r1,#5
00004a  f7fffffe          BL       Set_Scsi_Sense_Data
                  |L1.78|
;;;455        Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
00004e  2100              MOVS     r1,#0
000050  2001              MOVS     r0,#1
000052  f7fffffe          BL       Set_CSW
;;;456    	scsi_printf("SCSI_Address_Management(%d), INVALID_FIELED_IN_COMMAND\r\n",lun);
;;;457        return (FALSE);
000056  2000              MOVS     r0,#0
;;;458      }
;;;459      return (TRUE);
;;;460    }
000058  bd70              POP      {r4-r6,pc}
                  |L1.90|
00005a  2002              MOVS     r0,#2                 ;448
00005c  e7f0              B        |L1.64|
                  |L1.94|
00005e  2001              MOVS     r0,#1                 ;459
000060  bd70              POP      {r4-r6,pc}
;;;461    /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/
                          ENDP

000062  0000              DCW      0x0000
                  |L1.100|
                          DCD      Mass_Block_Count
                  |L1.104|
                          DCD      Scsi_Sense_Data
                  |L1.108|
                          DCD      ||CBW||
                  |L1.112|
                          DCD      Mass_Block_Size

                          AREA ||i.SCSI_Format_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_Format_Cmd PROC
;;;374    *******************************************************************************/
;;;375    void SCSI_Format_Cmd(uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;376    {
;;;377      scsi_printf("SCSI_Format_Cmd(%d)\r\n",lun);
;;;378      if (MAL_GetStatus(lun))
000002  f7fffffe          BL       MAL_GetStatus
000006  b170              CBZ      r0,|L2.38|
;;;379      {
;;;380        Set_Scsi_Sense_Data(CBW.bLUN, NOT_READY, MEDIUM_NOT_PRESENT);
000008  480b              LDR      r0,|L2.56|
00000a  223a              MOVS     r2,#0x3a
00000c  2102              MOVS     r1,#2
00000e  7b40              LDRB     r0,[r0,#0xd]  ; CBW
000010  f7fffffe          BL       Set_Scsi_Sense_Data
;;;381        Set_CSW (CSW_CMD_FAILED, SEND_CSW_ENABLE);
000014  2101              MOVS     r1,#1
000016  4608              MOV      r0,r1
000018  f7fffffe          BL       Set_CSW
;;;382        Bot_Abort(DIR_IN);
00001c  e8bd4010          POP      {r4,lr}
000020  2000              MOVS     r0,#0
000022  f7ffbffe          B.W      Bot_Abort
                  |L2.38|
;;;383        return;
;;;384      }
;;;385      else
;;;386      {
;;;387        NAND_Format();
000026  f7fffffe          BL       NAND_Format
;;;388        Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
00002a  2101              MOVS     r1,#1
00002c  e8bd4010          POP      {r4,lr}
000030  2000              MOVS     r0,#0
000032  f7ffbffe          B.W      Set_CSW
;;;389      }
;;;390    }
;;;391    /*******************************************************************************
                          ENDP

000036  0000              DCW      0x0000
                  |L2.56|
                          DCD      ||CBW||

                          AREA ||i.SCSI_Inquiry_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_Inquiry_Cmd PROC
;;;49     *******************************************************************************/
;;;50     void SCSI_Inquiry_Cmd(uint8_t lun)
000000  4908              LDR      r1,|L3.36|
;;;51     {
;;;52       uint8_t* Inquiry_Data;
;;;53       uint16_t Inquiry_Data_Length;
;;;54     
;;;55       //scsi_printf("SCSI_Inquiry_Cmd(%d)\r\n",lun);  
;;;56               
;;;57       if (CBW.CB[1] & 0x01)/*Evpd is set*/
000002  7c0a              LDRB     r2,[r1,#0x10]  ; CBW
000004  07d2              LSLS     r2,r2,#31
000006  d002              BEQ      |L3.14|
;;;58       {
;;;59         Inquiry_Data = Page00_Inquiry_Data;
000008  4807              LDR      r0,|L3.40|
;;;60         Inquiry_Data_Length = 5;
00000a  2105              MOVS     r1,#5
00000c  e005              B        |L3.26|
                  |L3.14|
;;;61       }
;;;62       else
;;;63       {
;;;64     
;;;65         if ( lun == 0)
00000e  b130              CBZ      r0,|L3.30|
;;;66         {
;;;67           Inquiry_Data = Standard_Inquiry_Data;
;;;68         }
;;;69         else
;;;70         {
;;;71           Inquiry_Data = Standard_Inquiry_Data2;
000010  4806              LDR      r0,|L3.44|
                  |L3.18|
;;;72         }
;;;73     
;;;74         if (CBW.CB[4] <= STANDARD_INQUIRY_DATA_LEN)
000012  7cc9              LDRB     r1,[r1,#0x13]  ; CBW
000014  2924              CMP      r1,#0x24
000016  d900              BLS      |L3.26|
;;;75           Inquiry_Data_Length = CBW.CB[4];
;;;76         else
;;;77           Inquiry_Data_Length = STANDARD_INQUIRY_DATA_LEN;
000018  2124              MOVS     r1,#0x24
                  |L3.26|
;;;78     
;;;79       }
;;;80       Transfer_Data_Request(Inquiry_Data, Inquiry_Data_Length);
00001a  f7ffbffe          B.W      Transfer_Data_Request
                  |L3.30|
00001e  4804              LDR      r0,|L3.48|
000020  e7f7              B        |L3.18|
;;;81     }
;;;82     
                          ENDP

000022  0000              DCW      0x0000
                  |L3.36|
                          DCD      ||CBW||
                  |L3.40|
                          DCD      Page00_Inquiry_Data
                  |L3.44|
                          DCD      Standard_Inquiry_Data2
                  |L3.48|
                          DCD      Standard_Inquiry_Data

                          AREA ||i.SCSI_Invalid_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_Invalid_Cmd PROC
;;;397    *******************************************************************************/
;;;398    void SCSI_Invalid_Cmd(uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;399    {
;;;400      scsi_printf("SCSI_Invalid_Cmd(%d)\r\n",lun);	
;;;401      if (CBW.dDataLength == 0)
000002  4c0b              LDR      r4,|L4.48|
000004  68a0              LDR      r0,[r4,#8]            ;399  ; CBW
000006  b110              CBZ      r0,|L4.14|
;;;402      {
;;;403        Bot_Abort(DIR_IN);
;;;404      }
;;;405      else
;;;406      {
;;;407        if ((CBW.bmFlags & 0x80) != 0)
000008  7b20              LDRB     r0,[r4,#0xc]  ; CBW
00000a  0600              LSLS     r0,r0,#24
00000c  d501              BPL      |L4.18|
                  |L4.14|
00000e  2000              MOVS     r0,#0                 ;403
000010  e000              B        |L4.20|
                  |L4.18|
;;;408        {
;;;409          Bot_Abort(DIR_IN);
;;;410        }
;;;411        else
;;;412        {
;;;413          Bot_Abort(BOTH_DIR);
000012  2002              MOVS     r0,#2
                  |L4.20|
000014  f7fffffe          BL       Bot_Abort
;;;414        }
;;;415      }
;;;416      Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_COMMAND);
000018  7b60              LDRB     r0,[r4,#0xd]  ; CBW
00001a  2220              MOVS     r2,#0x20
00001c  2105              MOVS     r1,#5
00001e  f7fffffe          BL       Set_Scsi_Sense_Data
;;;417      Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
000022  2100              MOVS     r1,#0
000024  e8bd4010          POP      {r4,lr}
000028  2001              MOVS     r0,#1
00002a  f7ffbffe          B.W      Set_CSW
;;;418    }
;;;419    
                          ENDP

00002e  0000              DCW      0x0000
                  |L4.48|
                          DCD      ||CBW||

                          AREA ||i.SCSI_ModeSense10_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_ModeSense10_Cmd PROC
;;;166    *******************************************************************************/
;;;167    void SCSI_ModeSense10_Cmd (uint8_t lun)
000000  2108              MOVS     r1,#8
;;;168    {
;;;169      //scsi_printf("SCSI_ModeSense10_Cmd(%d)\r\n",lun);  
;;;170      Transfer_Data_Request(Mode_Sense10_data, MODE_SENSE10_DATA_LEN);
000002  4801              LDR      r0,|L5.8|
000004  f7ffbffe          B.W      Transfer_Data_Request
;;;171    }
;;;172    
                          ENDP

                  |L5.8|
                          DCD      Mode_Sense10_data

                          AREA ||i.SCSI_ModeSense6_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_ModeSense6_Cmd PROC
;;;153    *******************************************************************************/
;;;154    void SCSI_ModeSense6_Cmd (uint8_t lun)
000000  2104              MOVS     r1,#4
;;;155    {
;;;156      //scsi_printf("SCSI_ModeSense6_Cmd(%d)\r\n",lun);  
;;;157      Transfer_Data_Request(Mode_Sense6_data, MODE_SENSE6_DATA_LEN);
000002  4801              LDR      r0,|L6.8|
000004  f7ffbffe          B.W      Transfer_Data_Request
;;;158    }
;;;159    
                          ENDP

                  |L6.8|
                          DCD      Mode_Sense6_data

                          AREA ||i.SCSI_Read10_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_Read10_Cmd PROC
;;;231    *******************************************************************************/
;;;232    void SCSI_Read10_Cmd(uint8_t lun , uint32_t LBA , uint32_t BlockNbr)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;233    {
;;;234      //scsi_printf("SCSI_Read10_Cmd(%d)\r\n",lun);
;;;235      if (Bot_State == BOT_IDLE)
000004  4d16              LDR      r5,|L7.96|
000006  4680              MOV      r8,r0                 ;233
000008  4616              MOV      r6,r2                 ;233
00000a  7828              LDRB     r0,[r5,#0]  ; Bot_State
00000c  460f              MOV      r7,r1                 ;233
00000e  b130              CBZ      r0,|L7.30|
;;;236      {
;;;237        if (!(SCSI_Address_Management(CBW.bLUN, SCSI_READ10, LBA, BlockNbr)))/*address out of range*/
;;;238        {
;;;239    	  scsi_printf("SCSI_Address_Management(), address out of range\r\n");
;;;240    	  return;
;;;241        }
;;;242    
;;;243        if ((CBW.bmFlags & 0x80) != 0)
;;;244        {
;;;245          Bot_State = BOT_DATA_IN;
;;;246          Read_Memory(lun, LBA , BlockNbr);
;;;247        }
;;;248        else
;;;249        {
;;;250          Bot_Abort(BOTH_DIR);
;;;251          Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
;;;252          Set_CSW (CSW_CMD_FAILED, SEND_CSW_ENABLE);
;;;253    	  scsi_printf("SCSI_Read10_Cmd(), INVALID_FIELED_IN_COMMAND\r\n");
;;;254        }
;;;255        return;
;;;256      }
;;;257      else if (Bot_State == BOT_DATA_IN)
000010  2802              CMP      r0,#2
000012  d123              BNE      |L7.92|
                  |L7.20|
;;;258      {
;;;259        Read_Memory(lun , LBA , BlockNbr);
000014  4640              MOV      r0,r8
000016  e8bd41f0          POP      {r4-r8,lr}
00001a  f7ffbffe          B.W      Read_Memory
                  |L7.30|
00001e  4c11              LDR      r4,|L7.100|
000020  4613              MOV      r3,r2                 ;237
000022  460a              MOV      r2,r1                 ;237
000024  7b60              LDRB     r0,[r4,#0xd]          ;237  ; CBW
000026  2128              MOVS     r1,#0x28              ;237
000028  f7fffffe          BL       SCSI_Address_Management
00002c  2800              CMP      r0,#0                 ;237
00002e  d015              BEQ      |L7.92|
000030  7b20              LDRB     r0,[r4,#0xc]          ;243  ; CBW
000032  0600              LSLS     r0,r0,#24             ;243
000034  f04f0002          MOV      r0,#2                 ;250
000038  d503              BPL      |L7.66|
00003a  7028              STRB     r0,[r5,#0]            ;245
00003c  4632              MOV      r2,r6                 ;246
00003e  4639              MOV      r1,r7                 ;246
000040  e7e8              B        |L7.20|
                  |L7.66|
000042  f7fffffe          BL       Bot_Abort
000046  7b60              LDRB     r0,[r4,#0xd]          ;251  ; CBW
000048  2224              MOVS     r2,#0x24              ;251
00004a  2105              MOVS     r1,#5                 ;251
00004c  f7fffffe          BL       Set_Scsi_Sense_Data
000050  e8bd41f0          POP      {r4-r8,lr}            ;252
000054  2101              MOVS     r1,#1                 ;252
000056  4608              MOV      r0,r1                 ;252
000058  f7ffbffe          B.W      Set_CSW
                  |L7.92|
;;;260      }
;;;261    }
00005c  e8bd81f0          POP      {r4-r8,pc}
;;;262    
                          ENDP

                  |L7.96|
                          DCD      Bot_State
                  |L7.100|
                          DCD      ||CBW||

                          AREA ||i.SCSI_ReadCapacity10_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_ReadCapacity10_Cmd PROC
;;;121    *******************************************************************************/
;;;122    void SCSI_ReadCapacity10_Cmd(uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;123    {
000002  4604              MOV      r4,r0
;;;124      scsi_printf("SCSI_ReadCapacity10_Cmd(%d)\r\n",lun);  
;;;125    
;;;126      if (MAL_GetStatus(lun))
000004  f7fffffe          BL       MAL_GetStatus
000008  b170              CBZ      r0,|L8.40|
;;;127      {
;;;128        Set_Scsi_Sense_Data(CBW.bLUN, NOT_READY, MEDIUM_NOT_PRESENT);
00000a  4815              LDR      r0,|L8.96|
00000c  223a              MOVS     r2,#0x3a
00000e  2102              MOVS     r1,#2
000010  7b40              LDRB     r0,[r0,#0xd]  ; CBW
000012  f7fffffe          BL       Set_Scsi_Sense_Data
;;;129        Set_CSW (CSW_CMD_FAILED, SEND_CSW_ENABLE);
000016  2101              MOVS     r1,#1
000018  4608              MOV      r0,r1
00001a  f7fffffe          BL       Set_CSW
;;;130        Bot_Abort(DIR_IN);
00001e  e8bd4010          POP      {r4,lr}
000022  2000              MOVS     r0,#0
000024  f7ffbffe          B.W      Bot_Abort
                  |L8.40|
;;;131    	scsi_printf("SCSI_ReadCapacity10_Cmd() Abort\r\n");	
;;;132        return;
;;;133      }
;;;134    
;;;135      ReadCapacity10_Data[0] = (uint8_t)((Mass_Block_Count[lun] - 1) >> 24);
000028  480e              LDR      r0,|L8.100|
00002a  490f              LDR      r1,|L8.104|
00002c  f8502024          LDR      r2,[r0,r4,LSL #2]
000030  1e52              SUBS     r2,r2,#1
000032  0e10              LSRS     r0,r2,#24
000034  7008              STRB     r0,[r1,#0]
;;;136      ReadCapacity10_Data[1] = (uint8_t)((Mass_Block_Count[lun] - 1) >> 16);
000036  0c10              LSRS     r0,r2,#16
000038  7048              STRB     r0,[r1,#1]
;;;137      ReadCapacity10_Data[2] = (uint8_t)((Mass_Block_Count[lun] - 1) >>  8);
00003a  0a10              LSRS     r0,r2,#8
00003c  7088              STRB     r0,[r1,#2]
;;;138      ReadCapacity10_Data[3] = (uint8_t)(Mass_Block_Count[lun] - 1);
;;;139    
;;;140      ReadCapacity10_Data[4] = (uint8_t)(Mass_Block_Size[lun] >>  24);
00003e  480b              LDR      r0,|L8.108|
000040  70ca              STRB     r2,[r1,#3]            ;138
000042  f8500024          LDR      r0,[r0,r4,LSL #2]
000046  0e02              LSRS     r2,r0,#24
000048  710a              STRB     r2,[r1,#4]
;;;141      ReadCapacity10_Data[5] = (uint8_t)(Mass_Block_Size[lun] >>  16);
00004a  0c02              LSRS     r2,r0,#16
00004c  714a              STRB     r2,[r1,#5]
;;;142      ReadCapacity10_Data[6] = (uint8_t)(Mass_Block_Size[lun] >>  8);
00004e  0a02              LSRS     r2,r0,#8
000050  718a              STRB     r2,[r1,#6]
;;;143      ReadCapacity10_Data[7] = (uint8_t)(Mass_Block_Size[lun]);
000052  71c8              STRB     r0,[r1,#7]
;;;144      Transfer_Data_Request(ReadCapacity10_Data, READ_CAPACITY10_DATA_LEN);
000054  e8bd4010          POP      {r4,lr}
000058  2108              MOVS     r1,#8
00005a  4803              LDR      r0,|L8.104|
00005c  f7ffbffe          B.W      Transfer_Data_Request
;;;145    }
;;;146    
                          ENDP

                  |L8.96|
                          DCD      ||CBW||
                  |L8.100|
                          DCD      Mass_Block_Count
                  |L8.104|
                          DCD      ReadCapacity10_Data
                  |L8.108|
                          DCD      Mass_Block_Size

                          AREA ||i.SCSI_ReadFormatCapacity_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_ReadFormatCapacity_Cmd PROC
;;;89     *******************************************************************************/
;;;90     void SCSI_ReadFormatCapacity_Cmd(uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;91     {
000002  4604              MOV      r4,r0
;;;92     
;;;93       scsi_printf("SCSI_ReadFormatCapacity_Cmd(%d)\r\n",lun); 
;;;94     
;;;95       if (MAL_GetStatus(lun) != 0 )
000004  f7fffffe          BL       MAL_GetStatus
000008  b170              CBZ      r0,|L9.40|
;;;96       {
;;;97         Set_Scsi_Sense_Data(CBW.bLUN, NOT_READY, MEDIUM_NOT_PRESENT);
00000a  4814              LDR      r0,|L9.92|
00000c  223a              MOVS     r2,#0x3a
00000e  2102              MOVS     r1,#2
000010  7b40              LDRB     r0,[r0,#0xd]  ; CBW
000012  f7fffffe          BL       Set_Scsi_Sense_Data
;;;98         Set_CSW (CSW_CMD_FAILED, SEND_CSW_ENABLE);
000016  2101              MOVS     r1,#1
000018  4608              MOV      r0,r1
00001a  f7fffffe          BL       Set_CSW
;;;99         Bot_Abort(DIR_IN);
00001e  e8bd4010          POP      {r4,lr}
000022  2000              MOVS     r0,#0
000024  f7ffbffe          B.W      Bot_Abort
                  |L9.40|
;;;100    
;;;101    	scsi_printf("SCSI_ReadFormatCapacity_Cmd() Abort\r\n");
;;;102        return;
;;;103      }
;;;104      ReadFormatCapacity_Data[4] = (uint8_t)(Mass_Block_Count[lun] >> 24);
000028  480d              LDR      r0,|L9.96|
00002a  490e              LDR      r1,|L9.100|
00002c  f8502024          LDR      r2,[r0,r4,LSL #2]
000030  0e10              LSRS     r0,r2,#24
000032  7108              STRB     r0,[r1,#4]
;;;105      ReadFormatCapacity_Data[5] = (uint8_t)(Mass_Block_Count[lun] >> 16);
000034  0c10              LSRS     r0,r2,#16
000036  7148              STRB     r0,[r1,#5]
;;;106      ReadFormatCapacity_Data[6] = (uint8_t)(Mass_Block_Count[lun] >>  8);
000038  0a10              LSRS     r0,r2,#8
00003a  7188              STRB     r0,[r1,#6]
;;;107      ReadFormatCapacity_Data[7] = (uint8_t)(Mass_Block_Count[lun]);
;;;108    
;;;109      ReadFormatCapacity_Data[9] = (uint8_t)(Mass_Block_Size[lun] >>  16);
00003c  480a              LDR      r0,|L9.104|
00003e  71ca              STRB     r2,[r1,#7]            ;107
000040  f8500024          LDR      r0,[r0,r4,LSL #2]
000044  0c02              LSRS     r2,r0,#16
000046  724a              STRB     r2,[r1,#9]
;;;110      ReadFormatCapacity_Data[10] = (uint8_t)(Mass_Block_Size[lun] >>  8);
000048  0a02              LSRS     r2,r0,#8
00004a  728a              STRB     r2,[r1,#0xa]
;;;111      ReadFormatCapacity_Data[11] = (uint8_t)(Mass_Block_Size[lun]);
00004c  72c8              STRB     r0,[r1,#0xb]
;;;112      Transfer_Data_Request(ReadFormatCapacity_Data, READ_FORMAT_CAPACITY_DATA_LEN);
00004e  e8bd4010          POP      {r4,lr}
000052  210c              MOVS     r1,#0xc
000054  4803              LDR      r0,|L9.100|
000056  f7ffbffe          B.W      Transfer_Data_Request
;;;113    }
;;;114    
                          ENDP

00005a  0000              DCW      0x0000
                  |L9.92|
                          DCD      ||CBW||
                  |L9.96|
                          DCD      Mass_Block_Count
                  |L9.100|
                          DCD      ReadFormatCapacity_Data
                  |L9.104|
                          DCD      Mass_Block_Size

                          AREA ||i.SCSI_RequestSense_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_RequestSense_Cmd PROC
;;;179    *******************************************************************************/
;;;180    void SCSI_RequestSense_Cmd (uint8_t lun)
000000  4803              LDR      r0,|L10.16|
;;;181    {
;;;182      uint8_t Request_Sense_data_Length;
;;;183    
;;;184      //scsi_printf("SCSI_RequestSense_Cmd(%d)\r\n",lun); 
;;;185      
;;;186      if (CBW.CB[4] <= REQUEST_SENSE_DATA_LEN)
000002  7cc1              LDRB     r1,[r0,#0x13]  ; CBW
000004  2912              CMP      r1,#0x12
000006  d900              BLS      |L10.10|
;;;187      {
;;;188        Request_Sense_data_Length = CBW.CB[4];
;;;189      }
;;;190      else
;;;191      {
;;;192        Request_Sense_data_Length = REQUEST_SENSE_DATA_LEN;
000008  2112              MOVS     r1,#0x12
                  |L10.10|
;;;193      }
;;;194      Transfer_Data_Request(Scsi_Sense_Data, Request_Sense_data_Length);
00000a  4802              LDR      r0,|L10.20|
00000c  f7ffbffe          B.W      Transfer_Data_Request
;;;195    }
;;;196    
                          ENDP

                  |L10.16|
                          DCD      ||CBW||
                  |L10.20|
                          DCD      Scsi_Sense_Data

                          AREA ||i.SCSI_Start_Stop_Unit_Cmd||, CODE, READONLY, ALIGN=1

                  SCSI_Start_Stop_Unit_Cmd PROC
;;;218    *******************************************************************************/
;;;219    void SCSI_Start_Stop_Unit_Cmd(uint8_t lun)
000000  2101              MOVS     r1,#1
;;;220    {
;;;221      //scsi_printf("SCSI_Start_Stop_Unit_Cmd(%d)\r\n",lun);
;;;222      Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
000002  2000              MOVS     r0,#0
000004  f7ffbffe          B.W      Set_CSW
;;;223    }
;;;224    
                          ENDP


                          AREA ||i.SCSI_TestUnitReady_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_TestUnitReady_Cmd PROC
;;;351    *******************************************************************************/
;;;352    void SCSI_TestUnitReady_Cmd(uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;353    {
;;;354      //scsi_printf("SCSI_TestUnitReady_Cmd(%d)\r\n",lun);	
;;;355      if (MAL_GetStatus(lun))
000002  f7fffffe          BL       MAL_GetStatus
000006  b170              CBZ      r0,|L12.38|
;;;356      {
;;;357        Set_Scsi_Sense_Data(CBW.bLUN, NOT_READY, MEDIUM_NOT_PRESENT);
000008  480a              LDR      r0,|L12.52|
00000a  223a              MOVS     r2,#0x3a
00000c  2102              MOVS     r1,#2
00000e  7b40              LDRB     r0,[r0,#0xd]  ; CBW
000010  f7fffffe          BL       Set_Scsi_Sense_Data
;;;358        Set_CSW (CSW_CMD_FAILED, SEND_CSW_ENABLE);
000014  2101              MOVS     r1,#1
000016  4608              MOV      r0,r1
000018  f7fffffe          BL       Set_CSW
;;;359        Bot_Abort(DIR_IN);
00001c  e8bd4010          POP      {r4,lr}
000020  2000              MOVS     r0,#0
000022  f7ffbffe          B.W      Bot_Abort
                  |L12.38|
;;;360    	scsi_printf("SCSI_TestUnitReady_Cmd(%d), NOT_READY\r\n",lun);
;;;361        return;
;;;362      }
;;;363      else
;;;364      {
;;;365        Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
000026  2101              MOVS     r1,#1
000028  e8bd4010          POP      {r4,lr}
00002c  2000              MOVS     r0,#0
00002e  f7ffbffe          B.W      Set_CSW
;;;366      }
;;;367    }
;;;368    /*******************************************************************************
                          ENDP

000032  0000              DCW      0x0000
                  |L12.52|
                          DCD      ||CBW||

                          AREA ||i.SCSI_Valid_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_Valid_Cmd PROC
;;;331    *******************************************************************************/
;;;332    void SCSI_Valid_Cmd(uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;333    {
;;;334      //scsi_printf("SCSI_Valid_Cmd(%d)\r\n",lun);		
;;;335      if (CBW.dDataLength != 0)
000002  4c0a              LDR      r4,|L13.44|
000004  68a0              LDR      r0,[r4,#8]            ;333  ; CBW
000006  b150              CBZ      r0,|L13.30|
;;;336      {
;;;337        Bot_Abort(BOTH_DIR);
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       Bot_Abort
;;;338        Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_COMMAND);
00000e  7b60              LDRB     r0,[r4,#0xd]  ; CBW
000010  2220              MOVS     r2,#0x20
000012  2105              MOVS     r1,#5
000014  f7fffffe          BL       Set_Scsi_Sense_Data
;;;339        Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
000018  2100              MOVS     r1,#0
00001a  2001              MOVS     r0,#1
00001c  e001              B        |L13.34|
                  |L13.30|
;;;340    	scsi_printf("SCSI_Valid_Cmd(), ILLEGAL_REQUEST\r\n");
;;;341      }
;;;342      else
;;;343        Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
00001e  2101              MOVS     r1,#1
000020  2000              MOVS     r0,#0
                  |L13.34|
000022  e8bd4010          POP      {r4,lr}
000026  f7ffbffe          B.W      Set_CSW
;;;344    }
;;;345    /*******************************************************************************
                          ENDP

00002a  0000              DCW      0x0000
                  |L13.44|
                          DCD      ||CBW||

                          AREA ||i.SCSI_Verify10_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_Verify10_Cmd PROC
;;;309    *******************************************************************************/
;;;310    void SCSI_Verify10_Cmd(uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;311    {
;;;312      //scsi_printf("SCSI_Verify10_Cmd(%d)\r\n",lun);	
;;;313      if ((CBW.dDataLength == 0) && !(CBW.CB[1] & BLKVFY))/* BLKVFY not set*/
000002  4c0b              LDR      r4,|L14.48|
000004  68a0              LDR      r0,[r4,#8]            ;311  ; CBW
000006  b928              CBNZ     r0,|L14.20|
000008  7c20              LDRB     r0,[r4,#0x10]  ; CBW
00000a  0740              LSLS     r0,r0,#29
00000c  d402              BMI      |L14.20|
;;;314      {
;;;315        Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
00000e  2101              MOVS     r1,#1
000010  2000              MOVS     r0,#0
000012  e009              B        |L14.40|
                  |L14.20|
;;;316      }
;;;317      else
;;;318      {
;;;319        Bot_Abort(BOTH_DIR);
000014  2002              MOVS     r0,#2
000016  f7fffffe          BL       Bot_Abort
;;;320        Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
00001a  7b60              LDRB     r0,[r4,#0xd]  ; CBW
00001c  2224              MOVS     r2,#0x24
00001e  2105              MOVS     r1,#5
000020  f7fffffe          BL       Set_Scsi_Sense_Data
;;;321        Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
000024  2100              MOVS     r1,#0
000026  2001              MOVS     r0,#1
                  |L14.40|
000028  e8bd4010          POP      {r4,lr}
00002c  f7ffbffe          B.W      Set_CSW
;;;322    	scsi_printf("SCSI_Verify10_Cmd(), ILLEGAL_REQUEST\r\n");
;;;323      }
;;;324    }
;;;325    /*******************************************************************************
                          ENDP

                  |L14.48|
                          DCD      ||CBW||

                          AREA ||i.SCSI_Write10_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_Write10_Cmd PROC
;;;269    *******************************************************************************/
;;;270    void SCSI_Write10_Cmd(uint8_t lun , uint32_t LBA , uint32_t BlockNbr)
000000  b570              PUSH     {r4-r6,lr}
;;;271    {
;;;272      //scsi_printf("SCSI_Write10_Cmd(%d)\r\n",lun);
;;;273      if (Bot_State == BOT_IDLE)
000002  4d16              LDR      r5,|L15.92|
000004  782b              LDRB     r3,[r5,#0]  ; Bot_State
000006  b12b              CBZ      r3,|L15.20|
;;;274      {
;;;275        if (!(SCSI_Address_Management(CBW.bLUN, SCSI_WRITE10 , LBA, BlockNbr)))/*address out of range*/
;;;276        {
;;;277    	  scsi_printf("SCSI_Address_Management(), address out of range\r\n");
;;;278    	  return;
;;;279        }
;;;280    
;;;281        if ((CBW.bmFlags & 0x80) == 0)
;;;282        {
;;;283          Bot_State = BOT_DATA_OUT;
;;;284        #ifndef STM32F10X_CL
;;;285          SetEPRxStatus(ENDP2, EP_RX_VALID);
;;;286        #endif /* STM32F10X_CL */
;;;287        }
;;;288        else
;;;289        {
;;;290          Bot_Abort(DIR_IN);
;;;291          Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
;;;292          Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
;;;293    	  scsi_printf("SCSI_Write10_Cmd(), INVALID_FIELED_IN_COMMAND\r\n");
;;;294        }
;;;295        return;
;;;296      }
;;;297      else if (Bot_State == BOT_DATA_OUT)
000008  2b01              CMP      r3,#1
00000a  d126              BNE      |L15.90|
;;;298      {
;;;299        Write_Memory(lun , LBA , BlockNbr);
00000c  e8bd4070          POP      {r4-r6,lr}
000010  f7ffbffe          B.W      Write_Memory
                  |L15.20|
000014  4c12              LDR      r4,|L15.96|
000016  4613              MOV      r3,r2                 ;275
000018  460a              MOV      r2,r1                 ;275
00001a  7b60              LDRB     r0,[r4,#0xd]          ;275  ; CBW
00001c  212a              MOVS     r1,#0x2a              ;275
00001e  f7fffffe          BL       SCSI_Address_Management
000022  2800              CMP      r0,#0                 ;275
000024  d019              BEQ      |L15.90|
000026  7b20              LDRB     r0,[r4,#0xc]          ;281  ; CBW
000028  0600              LSLS     r0,r0,#24             ;281
00002a  d408              BMI      |L15.62|
00002c  2001              MOVS     r0,#1                 ;283
00002e  7028              STRB     r0,[r5,#0]            ;283
000030  e8bd4070          POP      {r4-r6,lr}            ;285
000034  f44f5140          MOV      r1,#0x3000            ;285
000038  2002              MOVS     r0,#2                 ;285
00003a  f7ffbffe          B.W      SetEPRxStatus
                  |L15.62|
00003e  2000              MOVS     r0,#0                 ;290
000040  f7fffffe          BL       Bot_Abort
000044  7b60              LDRB     r0,[r4,#0xd]          ;291  ; CBW
000046  2224              MOVS     r2,#0x24              ;291
000048  2105              MOVS     r1,#5                 ;291
00004a  f7fffffe          BL       Set_Scsi_Sense_Data
00004e  e8bd4070          POP      {r4-r6,lr}            ;292
000052  2100              MOVS     r1,#0                 ;292
000054  2001              MOVS     r0,#1                 ;292
000056  f7ffbffe          B.W      Set_CSW
                  |L15.90|
;;;300      }
;;;301    }
00005a  bd70              POP      {r4-r6,pc}
;;;302    
                          ENDP

                  |L15.92|
                          DCD      Bot_State
                  |L15.96|
                          DCD      ||CBW||

                          AREA ||i.Set_Scsi_Sense_Data||, CODE, READONLY, ALIGN=2

                  Set_Scsi_Sense_Data PROC
;;;204    *******************************************************************************/
;;;205    void Set_Scsi_Sense_Data(uint8_t lun, uint8_t Sens_Key, uint8_t Asc)
000000  4801              LDR      r0,|L16.8|
;;;206    {
;;;207      //scsi_printf("Set_Scsi_Sense_Data\r\n"); 
;;;208      Scsi_Sense_Data[2] = Sens_Key;
000002  7081              STRB     r1,[r0,#2]
;;;209      Scsi_Sense_Data[12] = Asc;
000004  7302              STRB     r2,[r0,#0xc]
;;;210    }
000006  4770              BX       lr
;;;211    
                          ENDP

                  |L16.8|
                          DCD      Scsi_Sense_Data

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\usb_mass\\usb_scsi.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_usb_scsi_c_4f4a76f0____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_usb_scsi_c_4f4a76f0____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_usb_scsi_c_4f4a76f0____REVSH|
#line 128
|__asm___10_usb_scsi_c_4f4a76f0____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
