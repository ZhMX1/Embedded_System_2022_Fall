; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_bh1750.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_bh1750.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_bh1750.crf ..\..\User\bsp\src\bsp_bh1750.c]
                          THUMB

                          AREA ||i.BH1750_AdjustSensitivity||, CODE, READONLY, ALIGN=2

                  BH1750_AdjustSensitivity PROC
;;;93     */
;;;94     void BH1750_AdjustSensitivity(uint8_t _ucMTReg)
000000  b510              PUSH     {r4,lr}
;;;95     {
;;;96     	if (_ucMTReg <= 31)
000002  281f              CMP      r0,#0x1f
000004  d801              BHI      |L1.10|
;;;97     	{
;;;98     		_ucMTReg = 31;
000006  201f              MOVS     r0,#0x1f
000008  e002              B        |L1.16|
                  |L1.10|
;;;99     	}
;;;100    	else if (_ucMTReg >= 254)
00000a  28fe              CMP      r0,#0xfe
00000c  d300              BCC      |L1.16|
;;;101    	{
;;;102    		_ucMTReg = 254;
00000e  20fe              MOVS     r0,#0xfe
                  |L1.16|
;;;103    	}
;;;104    	
;;;105    	s_MTReg = _ucMTReg;
000010  4c08              LDR      r4,|L1.52|
;;;106    	
;;;107    	BH1750_WriteCmd(0x40 + (s_MTReg >> 5));		/* 更改高3bit */
000012  2140              MOVS     r1,#0x40
000014  7020              STRB     r0,[r4,#0]            ;105
000016  eb011050          ADD      r0,r1,r0,LSR #5
00001a  f7fffffe          BL       BH1750_WriteCmd
;;;108    	BH1750_WriteCmd(0x60 + (s_MTReg & 0x1F));	/* 更改低5bit */
00001e  7820              LDRB     r0,[r4,#0]  ; s_MTReg
000020  f000001f          AND      r0,r0,#0x1f
000024  3060              ADDS     r0,r0,#0x60
000026  f7fffffe          BL       BH1750_WriteCmd
;;;109    	
;;;110    	/*　更改量程范围后，需要重新发送命令设置测量模式　*/
;;;111    	BH1750_ChageMode(s_Mode);
00002a  7860              LDRB     r0,[r4,#1]  ; s_Mode
00002c  e8bd4010          POP      {r4,lr}
000030  f7ffbffe          B.W      BH1750_ChageMode
;;;112    }
;;;113    
                          ENDP

                  |L1.52|
                          DCD      ||.data||

                          AREA ||i.BH1750_ChageMode||, CODE, READONLY, ALIGN=2

                  BH1750_ChageMode PROC
;;;121    */
;;;122    void BH1750_ChageMode(uint8_t _ucMode)
000000  b510              PUSH     {r4,lr}
;;;123    {
;;;124    	if (_ucMode == 1)		/* 连续高分测量模式1 */
;;;125    	{
;;;126    		BH1750_WriteCmd(BHOP_CON_H_RES);	
;;;127    		s_Mode = 1;			/* 测量模式1，分辨率 1 lux*/
000002  4c0b              LDR      r4,|L2.48|
000004  2801              CMP      r0,#1                 ;124
000006  d008              BEQ      |L2.26|
;;;128    	}
;;;129    	else if (_ucMode == 2)	/* 连续高分测量模式2 */
000008  2802              CMP      r0,#2
00000a  d00b              BEQ      |L2.36|
;;;130    	{
;;;131    		BH1750_WriteCmd(BHOP_CON_H_RES2);	
;;;132    		s_Mode = 2;			/* 测量模式2, 分辨率 0.5 lux */		
;;;133    	}
;;;134    	else if (_ucMode == 3)	/* 连续低分测量模式 */
00000c  2803              CMP      r0,#3
00000e  d10e              BNE      |L2.46|
;;;135    	{
;;;136    		BH1750_WriteCmd(BHOP_CON_L_RES);	
000010  2013              MOVS     r0,#0x13
000012  f7fffffe          BL       BH1750_WriteCmd
;;;137    		s_Mode = 3;			/* 测量模式3，低分辨率 4 lux*/		
000016  2003              MOVS     r0,#3
000018  e008              B        |L2.44|
                  |L2.26|
00001a  2010              MOVS     r0,#0x10              ;126
00001c  f7fffffe          BL       BH1750_WriteCmd
000020  2001              MOVS     r0,#1                 ;127
000022  e003              B        |L2.44|
                  |L2.36|
000024  2011              MOVS     r0,#0x11              ;131
000026  f7fffffe          BL       BH1750_WriteCmd
00002a  2002              MOVS     r0,#2                 ;132
                  |L2.44|
00002c  7060              STRB     r0,[r4,#1]            ;127
                  |L2.46|
;;;138    	}	
;;;139    }
00002e  bd10              POP      {r4,pc}
;;;140    
                          ENDP

                  |L2.48|
                          DCD      ||.data||

                          AREA ||i.BH1750_GetLux||, CODE, READONLY, ALIGN=2

                  BH1750_GetLux PROC
;;;178    */
;;;179    float BH1750_GetLux(void)
000000  b570              PUSH     {r4-r6,lr}
;;;180    {
;;;181    	uint16_t usLight;
;;;182    	float lux;
;;;183    	
;;;184    	usLight = BH1750_ReadData();
000002  f7fffffe          BL       BH1750_ReadData
;;;185    	
;;;186    	/* 计算光强度 = 16位寄存器值 / 1.2  * (69 / X) */
;;;187    
;;;188    	//lux = usLight * (((float)1 / 1.2) * ((float)69 / s_MTReg));
;;;189    	lux = (float)(usLight * 5 * 69) / (6 * s_MTReg);
000006  4e0d              LDR      r6,|L3.60|
000008  4604              MOV      r4,r0                 ;184
00000a  7830              LDRB     r0,[r6,#0]  ; s_MTReg
00000c  eb000040          ADD      r0,r0,r0,LSL #1
000010  0040              LSLS     r0,r0,#1
000012  f7fffffe          BL       __aeabi_ui2f
000016  4605              MOV      r5,r0
000018  f2401059          MOV      r0,#0x159
00001c  4360              MULS     r0,r4,r0
00001e  f7fffffe          BL       __aeabi_ui2f
000022  4629              MOV      r1,r5
000024  f7fffffe          BL       __aeabi_fdiv
;;;190    	
;;;191    	if (s_Mode == 2)	/* 高分辨率测量模式2 */
000028  7871              LDRB     r1,[r6,#1]  ; s_Mode
00002a  2902              CMP      r1,#2
00002c  d104              BNE      |L3.56|
;;;192    	{
;;;193    		lux = lux / 2;
00002e  e8bd4070          POP      {r4-r6,lr}
000032  1ec9              SUBS     r1,r1,#3
000034  f7ffbffe          B.W      __ARM_scalbnf
                  |L3.56|
;;;194    	}
;;;195    	else
;;;196    	{
;;;197    		;	/* 不必除2 */
;;;198    	}
;;;199    	
;;;200    	return lux;
;;;201    }
000038  bd70              POP      {r4-r6,pc}
;;;202    
                          ENDP

00003a  0000              DCW      0x0000
                  |L3.60|
                          DCD      ||.data||

                          AREA ||i.BH1750_ReadData||, CODE, READONLY, ALIGN=1

                  BH1750_ReadData PROC
;;;149    */
;;;150    uint16_t BH1750_ReadData(void)
000000  b570              PUSH     {r4-r6,lr}
;;;151    {
;;;152    	uint8_t ucData1;
;;;153    	uint8_t ucData2;
;;;154    	uint16_t usLight;
;;;155    
;;;156    	i2c_Start();                  			/* 总线开始信号 */
000002  f7fffffe          BL       i2c_Start
;;;157    	i2c_SendByte(BH1750_SLAVE_ADDRESS + 1);	/* 发送设备地址+读信号 */
000006  2047              MOVS     r0,#0x47
000008  f7fffffe          BL       i2c_SendByte
;;;158    	i2c_WaitAck();
00000c  f7fffffe          BL       i2c_WaitAck
;;;159    
;;;160    	ucData1 = i2c_ReadByte();       		/* 读出高字节数据 */
000010  f7fffffe          BL       i2c_ReadByte
000014  4604              MOV      r4,r0
;;;161    	i2c_Ack();
000016  f7fffffe          BL       i2c_Ack
;;;162    	ucData2 = i2c_ReadByte();       		/* 读出低字节数据 */
00001a  f7fffffe          BL       i2c_ReadByte
00001e  4605              MOV      r5,r0
;;;163    	i2c_NAck();
000020  f7fffffe          BL       i2c_NAck
;;;164    	i2c_Stop();                  			/* 总线停止信号 */
000024  f7fffffe          BL       i2c_Stop
;;;165    	
;;;166    	usLight = (ucData1 << 8) + ucData2;
000028  eb052004          ADD      r0,r5,r4,LSL #8
00002c  b280              UXTH     r0,r0
;;;167    
;;;168    	return usLight;
;;;169    }
00002e  bd70              POP      {r4-r6,pc}
;;;170    
                          ENDP


                          AREA ||i.BH1750_WriteCmd||, CODE, READONLY, ALIGN=1

                  BH1750_WriteCmd PROC
;;;72     */
;;;73     void BH1750_WriteCmd(uint8_t _ucOpecode)
000000  b510              PUSH     {r4,lr}
;;;74     {
000002  4604              MOV      r4,r0
;;;75         i2c_Start();							/* 总线开始信号 */
000004  f7fffffe          BL       i2c_Start
;;;76     
;;;77         i2c_SendByte(BH1750_SLAVE_ADDRESS);		/* 发送设备地址+写信号 */
000008  2046              MOVS     r0,#0x46
00000a  f7fffffe          BL       i2c_SendByte
;;;78     	i2c_WaitAck();
00000e  f7fffffe          BL       i2c_WaitAck
;;;79     
;;;80         i2c_SendByte(_ucOpecode);				/* 1字节操作码 */
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       i2c_SendByte
;;;81     	i2c_WaitAck();
000018  f7fffffe          BL       i2c_WaitAck
;;;82     
;;;83         i2c_Stop();                   			/* 总线停止信号 */
00001c  e8bd4010          POP      {r4,lr}
000020  f7ffbffe          B.W      i2c_Stop
;;;84     }
;;;85     
                          ENDP


                          AREA ||i.bsp_InitBH1750||, CODE, READONLY, ALIGN=1

                  bsp_InitBH1750 PROC
;;;55     */
;;;56     void bsp_InitBH1750(void)
000000  b510              PUSH     {r4,lr}
;;;57     {
;;;58     	BH1750_WriteCmd(BHOP_POWER_ON);		/* 芯片上电 */
000002  2001              MOVS     r0,#1
000004  f7fffffe          BL       BH1750_WriteCmd
;;;59     
;;;60     	BH1750_ChageMode(2);			/* 高分辨率连续测量 */
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       BH1750_ChageMode
;;;61     	
;;;62     	BH1750_AdjustSensitivity(69);	/* 芯片缺省灵敏度倍率 = 69 */
00000e  e8bd4010          POP      {r4,lr}
000012  2045              MOVS     r0,#0x45
000014  f7ffbffe          B.W      BH1750_AdjustSensitivity
;;;63     }
;;;64     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=0

                  s_MTReg
000000  00                DCB      0x00
                  s_Mode
000001  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_bh1750.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_bsp_bh1750_c_92ff95cf____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_bsp_bh1750_c_92ff95cf____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_bsp_bh1750_c_92ff95cf____REVSH|
#line 128
|__asm___12_bsp_bh1750_c_92ff95cf____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
