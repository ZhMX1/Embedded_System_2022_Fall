; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_tsc2046.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_tsc2046.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_tsc2046.crf ..\..\User\bsp\src\bsp_tsc2046.c]
                          THUMB

                          AREA ||i.TSC2046_CfgSpiHard||, CODE, READONLY, ALIGN=2

                  TSC2046_CfgSpiHard PROC
;;;119    */
;;;120    void TSC2046_CfgSpiHard(void)
000000  b510              PUSH     {r4,lr}
;;;121    {
000002  b086              SUB      sp,sp,#0x18
;;;122    	SPI_InitTypeDef  SPI_InitStructure;
;;;123    
;;;124    	/* 配置 SPI1工作模式 */
;;;125    	SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;
000004  2000              MOVS     r0,#0
000006  f8ad0000          STRH     r0,[sp,#0]
;;;126    	SPI_InitStructure.SPI_Mode = SPI_Mode_Master;
00000a  f44f7182          MOV      r1,#0x104
00000e  f8ad1002          STRH     r1,[sp,#2]
;;;127    	SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b;
;;;128    	SPI_InitStructure.SPI_CPOL = SPI_CPOL_Low;
;;;129    	SPI_InitStructure.SPI_CPHA = SPI_CPHA_1Edge;
000012  f8ad0008          STRH     r0,[sp,#8]
;;;130    	SPI_InitStructure.SPI_NSS = SPI_NSS_Soft; 		/* 软件控制片选 */
000016  f44f7100          MOV      r1,#0x200
00001a  f8ad100a          STRH     r1,[sp,#0xa]
;;;131    	/*
;;;132    		SPI_BaudRatePrescaler_64 对应SCK时钟频率约1M
;;;133    		TSC2046 对SCK时钟的要求，高电平和低电平最小200ns，周期400ns，也就是2.5M
;;;134    
;;;135    		示波器实测频率
;;;136    		SPI_BaudRatePrescaler_64 时，SCK时钟频率约 1.116M
;;;137    		SPI_BaudRatePrescaler_32 时，SCK时钟频率月 2.232M
;;;138    	*/
;;;139    	SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_128;
00001e  2130              MOVS     r1,#0x30
000020  f8ad100c          STRH     r1,[sp,#0xc]
000024  f8ad0004          STRH     r0,[sp,#4]            ;127
000028  f8ad0006          STRH     r0,[sp,#6]            ;128
;;;140    	SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_MSB;
00002c  f8ad000e          STRH     r0,[sp,#0xe]
;;;141    	SPI_InitStructure.SPI_CRCPolynomial = 7;
000030  2007              MOVS     r0,#7
;;;142    	SPI_Init(SPI1,&SPI_InitStructure);
000032  4c06              LDR      r4,|L1.76|
000034  f8ad0010          STRH     r0,[sp,#0x10]         ;141
000038  4669              MOV      r1,sp
00003a  4620              MOV      r0,r4
00003c  f7fffffe          BL       SPI_Init
;;;143    
;;;144    	/* 使能 SPI1 */
;;;145    	SPI_Cmd(SPI1,ENABLE);
000040  2101              MOVS     r1,#1
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       SPI_Cmd
;;;146    }
000048  b006              ADD      sp,sp,#0x18
00004a  bd10              POP      {r4,pc}
;;;147    
                          ENDP

                  |L1.76|
                          DCD      0x40013000

                          AREA ||i.TSC2046_InitHard||, CODE, READONLY, ALIGN=2

                  TSC2046_InitHard PROC
;;;51     */
;;;52     void TSC2046_InitHard(void)
000000  b508              PUSH     {r3,lr}
;;;53     {
;;;54     	GPIO_InitTypeDef  GPIO_InitStructure;
;;;55     
;;;56     	/* 打开GPIO时钟 */
;;;57     	RCC_APB2PeriphClockCmd(TSC2046_RCC_CS | TSC2046_RCC_INT, ENABLE);
000002  2101              MOVS     r1,#1
000004  f44f7088          MOV      r0,#0x110
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;58     
;;;59     	/* 配置几个推完输出IO */
;;;60     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00000c  2003              MOVS     r0,#3
00000e  f88d0002          STRB     r0,[sp,#2]
;;;61     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	/* 推挽输出模式 */
000012  2010              MOVS     r0,#0x10
000014  f88d0003          STRB     r0,[sp,#3]
;;;62     
;;;63     	GPIO_InitStructure.GPIO_Pin = TSC2046_PIN_CS;
000018  01c0              LSLS     r0,r0,#7
00001a  f8ad0000          STRH     r0,[sp,#0]
;;;64     	GPIO_Init(TSC2046_PORT_CS, &GPIO_InitStructure);
00001e  4669              MOV      r1,sp
000020  4806              LDR      r0,|L2.60|
000022  f7fffffe          BL       GPIO_Init
;;;65     
;;;66     	/* 不用配置TP_BUSY  */
;;;67     
;;;68     	/* 配置触笔中断IO */
;;;69     	GPIO_InitStructure.GPIO_Pin = TSC2046_PIN_INT;
000026  2020              MOVS     r0,#0x20
000028  f8ad0000          STRH     r0,[sp,#0]
;;;70     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;	/* 输入浮空模式 */
00002c  2004              MOVS     r0,#4
00002e  f88d0003          STRB     r0,[sp,#3]
;;;71     	GPIO_Init(TSC2046_PORT_INT, &GPIO_InitStructure);
000032  4669              MOV      r1,sp
000034  4802              LDR      r0,|L2.64|
000036  f7fffffe          BL       GPIO_Init
;;;72     
;;;73     	//TSC2046_CfgSpiHard();
;;;74     }
00003a  bd08              POP      {r3,pc}
;;;75     
                          ENDP

                  |L2.60|
                          DCD      0x40012000
                  |L2.64|
                          DCD      0x40011000

                          AREA ||i.TSC2046_PenInt||, CODE, READONLY, ALIGN=2

                  TSC2046_PenInt PROC
;;;189    */
;;;190    uint8_t TSC2046_PenInt(void)
000000  b510              PUSH     {r4,lr}
;;;191    {
;;;192    	if (GPIO_ReadInputDataBit(TSC2046_PORT_INT, TSC2046_PIN_INT) == Bit_RESET)
000002  2120              MOVS     r1,#0x20
000004  4803              LDR      r0,|L3.20|
000006  f7fffffe          BL       GPIO_ReadInputDataBit
00000a  b108              CBZ      r0,|L3.16|
;;;193    	{
;;;194    		return 1;
;;;195    	}
;;;196    	else
;;;197    	{
;;;198    		return 0;
00000c  2000              MOVS     r0,#0
;;;199    	}
;;;200    }
00000e  bd10              POP      {r4,pc}
                  |L3.16|
000010  2001              MOVS     r0,#1                 ;194
000012  bd10              POP      {r4,pc}
;;;201    
                          ENDP

                  |L3.20|
                          DCD      0x40011000

                          AREA ||i.TSC2046_ReadAdc||, CODE, READONLY, ALIGN=1

                  TSC2046_ReadAdc PROC
;;;83     */
;;;84     uint16_t TSC2046_ReadAdc(uint8_t _ucCh)
000000  b510              PUSH     {r4,lr}
;;;85     {
000002  4604              MOV      r4,r0
;;;86     	uint16_t usAdc;
;;;87     
;;;88     	TSC2046_SetCS(0);		/* 使能TS2046的片选 */
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       TSC2046_SetCS
;;;89     
;;;90     	/*
;;;91     		TSC2046 控制字（8Bit）
;;;92     		Bit7   = S     起始位，必须是1
;;;93     		Bit6:4 = A2-A0 模拟输入通道选择A2-A0; 共有6个通道。
;;;94     		Bit3   = MODE  ADC位数选择，0 表示12Bit;1表示8Bit
;;;95     		Bit2   = SER/DFR 模拟输入形式，  1表示单端输入；0表示差分输入
;;;96     		Bit1:0 = PD1-PD0 掉电模式选择位
;;;97     	*/
;;;98     	bsp_spiWrite0((1 << 7) | (_ucCh << 4));			/* 选择通道1, 测量X位置 */
00000a  2080              MOVS     r0,#0x80
00000c  ea401004          ORR      r0,r0,r4,LSL #4
000010  b2c0              UXTB     r0,r0
000012  f7fffffe          BL       bsp_spiWrite0
;;;99     
;;;100    	/* 读ADC结果, 12位ADC值的高位先传，前12bit有效，最后4bit填0 */
;;;101    	usAdc = bsp_spiRead0();		/* 发送的0x00可以为任意值，无意义 */
000016  f7fffffe          BL       bsp_spiRead0
;;;102    	usAdc <<= 8;
00001a  f64f71ff          MOV      r1,#0xffff
00001e  ea012400          AND      r4,r1,r0,LSL #8
;;;103    	usAdc += bsp_spiRead0();		/* 获得12位的ADC采样值 */
000022  f7fffffe          BL       bsp_spiRead0
000026  4420              ADD      r0,r0,r4
;;;104    
;;;105    	usAdc >>= 3;						/* 右移3位，保留12位有效数字.  */
000028  f3c004cc          UBFX     r4,r0,#3,#13
;;;106    
;;;107    	TSC2046_SetCS(1);					/* 禁能片选 */
00002c  2001              MOVS     r0,#1
00002e  f7fffffe          BL       TSC2046_SetCS
;;;108    
;;;109    	return (usAdc);
000032  4620              MOV      r0,r4
;;;110    }
000034  bd10              POP      {r4,pc}
;;;111    
                          ENDP


                          AREA ||i.TSC2046_SetCS||, CODE, READONLY, ALIGN=2

                  TSC2046_SetCS PROC
;;;155    */
;;;156    static void TSC2046_SetCS(uint8_t _level)
000000  b570              PUSH     {r4-r6,lr}
;;;157    {
;;;158    	if (_level == 0)
;;;159    	{
;;;160    		bsp_SpiBusEnter();	/* 占用SPI总线， 用于总线共享 */
;;;161    
;;;162    		#ifdef SOFT_SPI		/* 软件SPI */
;;;163    			bsp_SetSpiSck(0);
;;;164    			TSC2046_CS_0();
;;;165    		#endif
;;;166    
;;;167    		#ifdef HARD_SPI		/* 硬件SPI */
;;;168    			TSC2046_CS_0();
000002  4d09              LDR      r5,|L5.40|
000004  f44f6400          MOV      r4,#0x800
000008  b120              CBZ      r0,|L5.20|
;;;169    
;;;170    			bsp_SPI_Init(SPI_Direction_2Lines_FullDuplex | SPI_Mode_Master | SPI_DataSize_8b
;;;171    				| SPI_CPOL_Low | SPI_CPHA_1Edge | SPI_NSS_Soft | SPI_BaudRatePrescaler_64 | SPI_FirstBit_MSB);
;;;172    		#endif
;;;173    	}
;;;174    	else
;;;175    	{
;;;176    		TSC2046_CS_1();
00000a  612c              STR      r4,[r5,#0x10]
;;;177    
;;;178    		bsp_SpiBusExit();	/* 释放SPI总线， 用于总线共享 */
00000c  e8bd4070          POP      {r4-r6,lr}
000010  f7ffbffe          B.W      bsp_SpiBusExit
                  |L5.20|
000014  f7fffffe          BL       bsp_SpiBusEnter
000018  616c              STR      r4,[r5,#0x14]         ;168
00001a  e8bd4070          POP      {r4-r6,lr}            ;170
00001e  f44f704b          MOV      r0,#0x32c             ;170
000022  f7ffbffe          B.W      bsp_SPI_Init
;;;179    	}
;;;180    }
;;;181    
                          ENDP

000026  0000              DCW      0x0000
                  |L5.40|
                          DCD      0x40012000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_tsc2046.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_tsc2046_c_ffc720e2____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_bsp_tsc2046_c_ffc720e2____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_tsc2046_c_ffc720e2____REVSH|
#line 128
|__asm___13_bsp_tsc2046_c_ffc720e2____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
