; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\mems_test.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\mems_test.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\mems_test.crf ..\..\User\app\src\mems_test.c]
                          THUMB

                          AREA ||i.DispBMP180||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_flags
                  DispBMP180 PROC
;;;383    */
;;;384    static void DispBMP180(void)
000000  b570              PUSH     {r4-r6,lr}
;;;385    {
000002  b0a2              SUB      sp,sp,#0x88
;;;386    	FONT_T tFont;
;;;387    	char buf[128];
;;;388    	uint16_t x, y;
;;;389    	uint8_t ucLineCap = 17;
;;;390    
;;;391    	/* 设置字体参数 */
;;;392    	{
;;;393    		tFont.FontCode = FC_ST_16;		/* 字体代码 16点阵 */
000004  2001              MOVS     r0,#1
000006  f88d0080          STRB     r0,[sp,#0x80]
;;;394    		tFont.FrontColor = CL_BLUE;		/* 字体颜色 */
00000a  201f              MOVS     r0,#0x1f
00000c  f8ad0082          STRH     r0,[sp,#0x82]
;;;395    		tFont.BackColor = CL_BTN_FACE;	/* 文字背景颜色 */
000010  f64e705b          MOV      r0,#0xef5b
000014  f8ad0084          STRH     r0,[sp,#0x84]
;;;396    		tFont.Space = 0;				/* 文字间距，单位 = 像素 */
;;;397    	}
;;;398    
;;;399    	x = BOX3_X + 5;
;;;400    	y = BOX3_Y + 18;
;;;401    
;;;402    	/* 温度值， 单位 0.1摄氏度 */
;;;403    	/* 压力值， 单位 Pa */
;;;404    	sprintf(buf, "环境温度  = %3d.%d℃", g_tBMP180.Temp / 10, g_tBMP180.Temp % 10);
000018  4e16              LDR      r6,|L1.116|
00001a  2000              MOVS     r0,#0                 ;396
00001c  f8ad0086          STRH     r0,[sp,#0x86]         ;396
000020  69b0              LDR      r0,[r6,#0x18]  ; g_tBMP180
000022  240a              MOVS     r4,#0xa
000024  fb90f1f4          SDIV     r1,r0,r4
000028  fb90f2f4          SDIV     r2,r0,r4
00002c  fb040311          MLS      r3,r4,r1,r0
000030  2597              MOVS     r5,#0x97              ;400
000032  a111              ADR      r1,|L1.120|
000034  4668              MOV      r0,sp
000036  f7fffffe          BL       __2sprintf
;;;405    	LCD_DispStr(x, y, buf, &tFont);
00003a  ab20              ADD      r3,sp,#0x80
00003c  466a              MOV      r2,sp
00003e  4629              MOV      r1,r5
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       LCD_DispStr
;;;406    	y += ucLineCap;
;;;407    
;;;408    	sprintf(buf, "大气压力  = %3d.%03dKPa", g_tBMP180.Press / 1000, g_tBMP180.Press % 1000);
000046  69f0              LDR      r0,[r6,#0x1c]  ; g_tBMP180
000048  f44f717a          MOV      r1,#0x3e8
00004c  fb90f2f1          SDIV     r2,r0,r1
000050  fb010312          MLS      r3,r1,r2,r0
000054  fb90f2f1          SDIV     r2,r0,r1
000058  25a8              MOVS     r5,#0xa8              ;385
00005a  a10d              ADR      r1,|L1.144|
00005c  4668              MOV      r0,sp
00005e  f7fffffe          BL       __2sprintf
;;;409    	LCD_DispStr(x, y, buf, &tFont);
000062  ab20              ADD      r3,sp,#0x80
000064  466a              MOV      r2,sp
000066  4629              MOV      r1,r5
000068  4620              MOV      r0,r4
00006a  f7fffffe          BL       LCD_DispStr
;;;410    	y += ucLineCap;
;;;411    }
00006e  b022              ADD      sp,sp,#0x88
000070  bd70              POP      {r4-r6,pc}
;;;412    
                          ENDP

000072  0000              DCW      0x0000
                  |L1.116|
                          DCD      g_tBMP180
                  |L1.120|
000078  bbb7beb3          DCB      187,183,190,179,206,194,182,200,"  = %3d.%d",161,230,0
00007c  cec2b6c8
000080  20203d20
000084  2533642e
000088  2564a1e6
00008c  00      
00008d  00                DCB      0
00008e  00                DCB      0
00008f  00                DCB      0
                  |L1.144|
000090  b4f3c6f8          DCB      180,243,198,248,209,185,193,166,"  = %3d.%03dKPa",0
000094  d1b9c1a6
000098  20203d20
00009c  2533642e
0000a0  25303364
0000a4  4b506100

                          AREA ||i.DispButton||, CODE, READONLY, ALIGN=2

                  DispButton PROC
;;;631    */
;;;632    static void DispButton(uint8_t _id, uint8_t _focus)
000000  b500              PUSH     {lr}
;;;633    {
000002  b089              SUB      sp,sp,#0x24
;;;634    	FONT_T tFontBtn;		/* 定义一个字体结构体变量，用于设置字体参数 */
;;;635    	BUTTON_T tBtn;
;;;636    
;;;637    	/* 设置字体参数 */
;;;638    	{
;;;639    		/* 按钮字体 */
;;;640    		tFontBtn.FontCode = FC_ST_16;
000004  2201              MOVS     r2,#1
000006  f88d2018          STRB     r2,[sp,#0x18]
;;;641    		tFontBtn.BackColor = CL_MASK;	/* 透明色 */
00000a  f6491299          MOV      r2,#0x9999
00000e  f8ad201c          STRH     r2,[sp,#0x1c]
;;;642    		tFontBtn.FrontColor = CL_BLACK;
000012  2200              MOVS     r2,#0
000014  f8ad201a          STRH     r2,[sp,#0x1a]
;;;643    		tFontBtn.Space = 0;
000018  f8ad201e          STRH     r2,[sp,#0x1e]
;;;644    	}
;;;645    
;;;646    	tBtn.Font = &tFontBtn;
00001c  aa06              ADD      r2,sp,#0x18
00001e  9203              STR      r2,[sp,#0xc]          ;633
000020  2800              CMP      r0,#0                 ;633
000022  d116              BNE      |L2.82|
;;;647    
;;;648    	switch (_id)
;;;649    	{
;;;650    		case BUTTON_RET_ID:
;;;651    			tBtn.Left = BUTTON_RET_X;
000024  480c              LDR      r0,|L2.88|
000026  8800              LDRH     r0,[r0,#0]  ; g_LcdWidth
000028  3840              SUBS     r0,r0,#0x40
00002a  f8ad0002          STRH     r0,[sp,#2]
;;;652    			tBtn.Top = BUTTON_RET_Y;
00002e  480b              LDR      r0,|L2.92|
000030  8800              LDRH     r0,[r0,#0]  ; g_LcdHeight
;;;653    			tBtn.Height = BUTTON_RET_H;
;;;654    			tBtn.Width = BUTTON_RET_W;
;;;655    			tBtn.Focus = _focus;
000032  f88d1014          STRB     r1,[sp,#0x14]
000036  3824              SUBS     r0,r0,#0x24           ;652
000038  f8ad0004          STRH     r0,[sp,#4]            ;652
00003c  2020              MOVS     r0,#0x20              ;653
00003e  f8ad0006          STRH     r0,[sp,#6]            ;653
000042  203c              MOVS     r0,#0x3c              ;654
000044  f8ad0008          STRH     r0,[sp,#8]            ;654
;;;656    			tBtn.pCaption = BUTTON_RET_TEXT;
000048  a005              ADR      r0,|L2.96|
;;;657    			break;
;;;658    
;;;659    		default:
;;;660    			return;
;;;661    	}
;;;662    
;;;663    	LCD_DrawButton(&tBtn);
00004a  9004              STR      r0,[sp,#0x10]
00004c  4668              MOV      r0,sp
00004e  f7fffffe          BL       LCD_DrawButton
                  |L2.82|
;;;664    }
000052  b009              ADD      sp,sp,#0x24
000054  bd00              POP      {pc}
;;;665    
                          ENDP

000056  0000              DCW      0x0000
                  |L2.88|
                          DCD      g_LcdWidth
                  |L2.92|
                          DCD      g_LcdHeight
                  |L2.96|
000060  b7b5bbd8          DCB      183,181,187,216,0
000064  00      
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0

                          AREA ||i.DispDHT11||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  DispDHT11 PROC
;;;506    */
;;;507    static void DispDHT11(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;508    {
000002  b0a5              SUB      sp,sp,#0x94
;;;509    	FONT_T tFont;
;;;510    	char buf[128];
;;;511    	uint16_t x, y;
;;;512    	
;;;513    	DHT11_T tDHT;
;;;514    	uint8_t ret;
;;;515    
;;;516    	x = BOX6_X + 5;
000004  270a              MOVS     r7,#0xa
;;;517    	y = BOX6_Y + 18;
000006  26d0              MOVS     r6,#0xd0
;;;518    
;;;519    	ret = DHT11_ReadData(&tDHT);
000008  a822              ADD      r0,sp,#0x88
00000a  f7fffffe          BL       DHT11_ReadData
00000e  2401              MOVS     r4,#1                 ;514
000010  2100              MOVS     r1,#0
;;;520    	if (ret == 1)
;;;521    	{
;;;522    		/* 设置字体参数 蓝色 */
;;;523    		{
;;;524    			tFont.FontCode = FC_ST_16;		/* 字体代码 16点阵 */
;;;525    			tFont.FrontColor = CL_BLUE;		/* 字体颜色 */
;;;526    			tFont.BackColor = CL_BTN_FACE;	/* 文字背景颜色 */
;;;527    			tFont.Space = 0;				/* 文字间距，单位 = 像素 */
;;;528    		}			
;;;529    		sprintf(buf, "湿度 %d%%,温度 %d℃       ", tDHT.Hum, tDHT.Temp);
;;;530    		LCD_DispStr(x, y, buf, &tFont);					
;;;531    		
;;;532    		s_use_dht11 = 1;	/* 在DS18B20程序中 暂时屏蔽 */
000012  4d16              LDR      r5,|L3.108|
000014  f64e725b          MOV      r2,#0xef5b            ;526
000018  2801              CMP      r0,#1                 ;520
;;;533    	}			
;;;534    	else
;;;535    	{
;;;536    		/* 设置字体参数 红色 */
;;;537    		{
;;;538    			tFont.FontCode = FC_ST_16;		/* 字体代码 16点阵 */
00001a  f88d4080          STRB     r4,[sp,#0x80]
00001e  d015              BEQ      |L3.76|
;;;539    			tFont.FrontColor = CL_RED;		/* 字体颜色 */
000020  f44f4078          MOV      r0,#0xf800
;;;540    			tFont.BackColor = CL_BTN_FACE;	/* 文字背景颜色 */
000024  f8ad2084          STRH     r2,[sp,#0x84]
000028  f8ad0082          STRH     r0,[sp,#0x82]         ;539
;;;541    			tFont.Space = 0;				/* 文字间距，单位 = 像素 */
00002c  460c              MOV      r4,r1
00002e  f8ad1086          STRH     r1,[sp,#0x86]
;;;542    		}		
;;;543    		sprintf(buf, "未发现DHT11       ");		
000032  a10f              ADR      r1,|L3.112|
000034  4668              MOV      r0,sp
000036  f7fffffe          BL       __2sprintf
                  |L3.58|
00003a  ab20              ADD      r3,sp,#0x80           ;530
00003c  466a              MOV      r2,sp                 ;530
00003e  4631              MOV      r1,r6                 ;530
000040  4638              MOV      r0,r7                 ;530
000042  f7fffffe          BL       LCD_DispStr
000046  702c              STRB     r4,[r5,#0]            ;532
;;;544    		LCD_DispStr(x, y, buf, &tFont);			
;;;545    
;;;546    		s_use_dht11 = 0;	/* 在DS18B20程序中 取消屏蔽 */
;;;547    	}
;;;548    }
000048  b025              ADD      sp,sp,#0x94
00004a  bdf0              POP      {r4-r7,pc}
                  |L3.76|
00004c  f8ad2084          STRH     r2,[sp,#0x84]         ;526
000050  201f              MOVS     r0,#0x1f              ;525
000052  f8ad0082          STRH     r0,[sp,#0x82]         ;525
000056  f8ad1086          STRH     r1,[sp,#0x86]         ;527
00005a  f89d308d          LDRB     r3,[sp,#0x8d]         ;529
00005e  f89d208e          LDRB     r2,[sp,#0x8e]         ;529
000062  a108              ADR      r1,|L3.132|
000064  4668              MOV      r0,sp                 ;529
000066  f7fffffe          BL       __2sprintf
00006a  e7e6              B        |L3.58|
;;;549    
                          ENDP

                  |L3.108|
                          DCD      ||.data||
                  |L3.112|
000070  ceb4b7a2          DCB      206,180,183,162,207,214,"DHT11       ",0
000074  cfd64448
000078  54313120
00007c  20202020
000080  202000  
000083  00                DCB      0
                  |L3.132|
000084  caaab6c8          DCB      202,170,182,200," %d%%,",206,194,182,200," %d",161,230," "
000088  20256425
00008c  252ccec2
000090  b6c82025
000094  64a1e620
000098  20202020          DCB      "      ",0
00009c  202000  
00009f  00                DCB      0

                          AREA ||i.DispInitFace||, CODE, READONLY, ALIGN=2

                  DispInitFace PROC
;;;557    */
;;;558    static void DispInitFace(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;559    {
;;;560    	FONT_T tFontBox;		/* 定义一个字体结构体变量，用于设置字体参数 */
;;;561    	GROUP_T tBox;
;;;562    
;;;563    	LCD_ClrScr(CL_BTN_FACE);  	/* 清屏，背景蓝色 */
000002  f64e745b          MOV      r4,#0xef5b
000006  b087              SUB      sp,sp,#0x1c           ;559
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       LCD_ClrScr
;;;564    
;;;565    	/* 设置字体参数 */
;;;566    	{
;;;567    		/* 分组框字体 */
;;;568    		tFontBox.FontCode = FC_ST_16;
00000e  2001              MOVS     r0,#1
000010  f88d0014          STRB     r0,[sp,#0x14]
;;;569    		tFontBox.BackColor = CL_BTN_FACE;
000014  f8ad4018          STRH     r4,[sp,#0x18]
;;;570    		tFontBox.FrontColor = CL_BLACK;
000018  2000              MOVS     r0,#0
00001a  f8ad0016          STRH     r0,[sp,#0x16]
;;;571    		tFontBox.Space = 0;
00001e  f8ad001a          STRH     r0,[sp,#0x1a]
;;;572    	}
;;;573    
;;;574    	/* 显示分组框 */
;;;575    	{
;;;576    		tBox.Font = &tFontBox;
000022  a805              ADD      r0,sp,#0x14
;;;577    
;;;578    		tBox.Left = BOX1_X;
000024  9003              STR      r0,[sp,#0xc]
;;;579    		tBox.Top = BOX1_Y;
000026  2008              MOVS     r0,#8
000028  f8ad0004          STRH     r0,[sp,#4]
;;;580    		tBox.Height = BOX1_H;
00002c  2078              MOVS     r0,#0x78
00002e  f8ad0006          STRH     r0,[sp,#6]
;;;581    		tBox.Width = BOX1_W;
;;;582    		tBox.pCaption = BOX1_TEXT;
000032  a01f              ADR      r0,|L4.176|
000034  2405              MOVS     r4,#5                 ;578
000036  f44f76dc          MOV      r6,#0x1b8             ;581
;;;583    		LCD_DrawGroupBox(&tBox);
00003a  9004              STR      r0,[sp,#0x10]
00003c  f8ad4002          STRH     r4,[sp,#2]            ;578
000040  f8ad6008          STRH     r6,[sp,#8]            ;581
000044  4668              MOV      r0,sp
000046  f7fffffe          BL       LCD_DrawGroupBox
;;;584    
;;;585    //		tBox.Left = BOX2_X;
;;;586    //		tBox.Top = BOX2_Y;
;;;587    //		tBox.Height = BOX2_H;
;;;588    //		tBox.Width = BOX2_W;
;;;589    //		tBox.pCaption = BOX2_TEXT;
;;;590    //		LCD_DrawGroupBox(&tBox);
;;;591    
;;;592    		tBox.Left = BOX3_X;
;;;593    		tBox.Top = BOX3_Y;
;;;594    		tBox.Height = BOX3_H;
;;;595    		tBox.Width = BOX3_W;
00004a  20dc              MOVS     r0,#0xdc
00004c  f8ad0008          STRH     r0,[sp,#8]
000050  2785              MOVS     r7,#0x85              ;593
;;;596    		tBox.pCaption = BOX3_TEXT;
000052  a01b              ADR      r0,|L4.192|
000054  f8ad7004          STRH     r7,[sp,#4]            ;593
000058  2534              MOVS     r5,#0x34              ;594
;;;597    		LCD_DrawGroupBox(&tBox);
00005a  9004              STR      r0,[sp,#0x10]
00005c  f8ad4002          STRH     r4,[sp,#2]            ;592
000060  f8ad5006          STRH     r5,[sp,#6]            ;594
000064  4668              MOV      r0,sp
000066  f7fffffe          BL       LCD_DrawGroupBox
;;;598    
;;;599    		tBox.Left = BOX4_X;
00006a  20e6              MOVS     r0,#0xe6
00006c  f8ad0002          STRH     r0,[sp,#2]
;;;600    		tBox.Top = BOX4_Y;
;;;601    		tBox.Height = BOX4_H;
;;;602    		tBox.Width = BOX4_W;
000070  20d7              MOVS     r0,#0xd7
000072  f8ad0008          STRH     r0,[sp,#8]
;;;603    		tBox.pCaption = BOX4_TEXT;
000076  a017              ADR      r0,|L4.212|
000078  f8ad7004          STRH     r7,[sp,#4]            ;600
;;;604    		LCD_DrawGroupBox(&tBox);
00007c  9004              STR      r0,[sp,#0x10]
00007e  f8ad5006          STRH     r5,[sp,#6]            ;601
000082  4668              MOV      r0,sp
000084  f7fffffe          BL       LCD_DrawGroupBox
;;;605    
;;;606    //		tBox.Left = BOX5_X;
;;;607    //		tBox.Top = BOX5_Y;
;;;608    //		tBox.Height = BOX5_H;
;;;609    //		tBox.Width = BOX5_W;
;;;610    //		tBox.pCaption = BOX5_TEXT;
;;;611    //		LCD_DrawGroupBox(&tBox);
;;;612    
;;;613    		tBox.Left = BOX6_X;
;;;614    		tBox.Top = BOX6_Y;
000088  20be              MOVS     r0,#0xbe
00008a  f8ad0004          STRH     r0,[sp,#4]
;;;615    		tBox.Height = BOX6_H;
;;;616    		tBox.Width = BOX6_W;
;;;617    		tBox.pCaption = BOX6_TEXT;
00008e  a015              ADR      r0,|L4.228|
;;;618    		LCD_DrawGroupBox(&tBox);
000090  9004              STR      r0,[sp,#0x10]
000092  f8ad4002          STRH     r4,[sp,#2]            ;613
000096  f8ad5006          STRH     r5,[sp,#6]            ;615
00009a  f8ad6008          STRH     r6,[sp,#8]            ;616
00009e  4668              MOV      r0,sp
0000a0  f7fffffe          BL       LCD_DrawGroupBox
;;;619    	}
;;;620    
;;;621    	DispButton(BUTTON_RET_ID, 0);
0000a4  2100              MOVS     r1,#0
0000a6  4608              MOV      r0,r1
0000a8  f7fffffe          BL       DispButton
;;;622    }
0000ac  b007              ADD      sp,sp,#0x1c
0000ae  bdf0              POP      {r4-r7,pc}
;;;623    
                          ENDP

                  |L4.176|
0000b0  4d505536          DCB      "MPU6050 ",205,211,194,221,210,199,0
0000b4  30353020
0000b8  cdd3c2dd
0000bc  d2c700  
0000bf  00                DCB      0
                  |L4.192|
0000c0  424d5031          DCB      "BMP180 ",198,248,209,185,188,198,186,205,206,194,182,200
0000c4  383020c6
0000c8  f8d1b9bc
0000cc  c6bacdce
0000d0  c2b6c8  
0000d3  00                DCB      0
                  |L4.212|
0000d4  42483137          DCB      "BH1750 ",185,226,213,213,182,200,0
0000d8  353020b9
0000dc  e2d5d5b6
0000e0  c800    
0000e2  00                DCB      0
0000e3  00                DCB      0
                  |L4.228|
0000e4  44485431          DCB      "DHT11 ",206,194,202,170,182,200,180,171,184,208,198,247
0000e8  3120cec2
0000ec  caaab6c8
0000f0  b4abb8d0
0000f4  c6f7    
0000f6  00                DCB      0
0000f7  00                DCB      0

                          AREA ||i.DispMPU6050||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  DispMPU6050 PROC
;;;216    */
;;;217    static void DispMPU6050(void)
000000  b570              PUSH     {r4-r6,lr}
;;;218    {
000002  b0a2              SUB      sp,sp,#0x88
;;;219    	FONT_T tFont;
;;;220    	char buf[128];
;;;221    	uint16_t x, y;
;;;222    	uint8_t ucLineCap = 17;
;;;223    
;;;224    	/* 设置字体参数 */
;;;225    	{
;;;226    		tFont.FontCode = FC_ST_16;		/* 字体代码 16点阵 */
000004  2001              MOVS     r0,#1
000006  f88d0080          STRB     r0,[sp,#0x80]
;;;227    		tFont.FrontColor = CL_BLUE;		/* 字体颜色 */
00000a  201f              MOVS     r0,#0x1f
00000c  f8ad0082          STRH     r0,[sp,#0x82]
;;;228    		tFont.BackColor = CL_BTN_FACE;	/* 文字背景颜色 */
000010  f64e705b          MOV      r0,#0xef5b
000014  f8ad0084          STRH     r0,[sp,#0x84]
;;;229    		tFont.Space = 0;				/* 文字间距，单位 = 像素 */
000018  2000              MOVS     r0,#0
;;;230    	}
;;;231    
;;;232    	x = BOX1_X + 5;
;;;233    	y = BOX1_Y + 18;
;;;234    
;;;235    	sprintf(buf, "GYRO_X  = %6d", g_tMPU6050.GYRO_X);
00001a  4c2a              LDR      r4,|L5.196|
00001c  f8ad0086          STRH     r0,[sp,#0x86]         ;229
000020  260a              MOVS     r6,#0xa               ;232
000022  251a              MOVS     r5,#0x1a              ;233
000024  f9b42008          LDRSH    r2,[r4,#8]  ; g_tMPU6050
000028  a127              ADR      r1,|L5.200|
00002a  4668              MOV      r0,sp
00002c  f7fffffe          BL       __2sprintf
;;;236    	LCD_DispStr(x, y, buf, &tFont);
000030  ab20              ADD      r3,sp,#0x80
000032  466a              MOV      r2,sp
000034  4629              MOV      r1,r5
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       LCD_DispStr
;;;237    	y += ucLineCap;
00003c  252b              MOVS     r5,#0x2b
;;;238    
;;;239    	sprintf(buf, "GYRO_Y  = %6d", g_tMPU6050.GYRO_Y);
00003e  f9b4200a          LDRSH    r2,[r4,#0xa]  ; g_tMPU6050
000042  a125              ADR      r1,|L5.216|
000044  4668              MOV      r0,sp
000046  f7fffffe          BL       __2sprintf
;;;240    	LCD_DispStr(x, y, buf, &tFont);
00004a  ab20              ADD      r3,sp,#0x80
00004c  466a              MOV      r2,sp
00004e  4629              MOV      r1,r5
000050  4630              MOV      r0,r6
000052  f7fffffe          BL       LCD_DispStr
;;;241    	y += ucLineCap;
000056  253c              MOVS     r5,#0x3c
;;;242    
;;;243    	sprintf(buf, "GYRO_Z  = %6d", g_tMPU6050.GYRO_Z);
000058  f9b4200c          LDRSH    r2,[r4,#0xc]  ; g_tMPU6050
00005c  a122              ADR      r1,|L5.232|
00005e  4668              MOV      r0,sp
000060  f7fffffe          BL       __2sprintf
;;;244    	LCD_DispStr(x, y, buf, &tFont);
000064  ab20              ADD      r3,sp,#0x80
000066  466a              MOV      r2,sp
000068  4629              MOV      r1,r5
00006a  4630              MOV      r0,r6
00006c  f7fffffe          BL       LCD_DispStr
;;;245    	y += ucLineCap;
000070  254d              MOVS     r5,#0x4d
;;;246    
;;;247    	sprintf(buf, "Accel_X = %6d", g_tMPU6050.Accel_X);
000072  f9b42000          LDRSH    r2,[r4,#0]  ; g_tMPU6050
000076  a120              ADR      r1,|L5.248|
000078  4668              MOV      r0,sp
00007a  f7fffffe          BL       __2sprintf
;;;248    	LCD_DispStr(x, y, buf, &tFont);
00007e  ab20              ADD      r3,sp,#0x80
000080  466a              MOV      r2,sp
000082  4629              MOV      r1,r5
000084  4630              MOV      r0,r6
000086  f7fffffe          BL       LCD_DispStr
;;;249    	y += ucLineCap;
00008a  255e              MOVS     r5,#0x5e
;;;250    
;;;251    	sprintf(buf, "Accel_Y = %6d", g_tMPU6050.Accel_Y);
00008c  f9b42002          LDRSH    r2,[r4,#2]  ; g_tMPU6050
000090  a11d              ADR      r1,|L5.264|
000092  4668              MOV      r0,sp
000094  f7fffffe          BL       __2sprintf
;;;252    	LCD_DispStr(x, y, buf, &tFont);
000098  ab20              ADD      r3,sp,#0x80
00009a  466a              MOV      r2,sp
00009c  4629              MOV      r1,r5
00009e  4630              MOV      r0,r6
0000a0  f7fffffe          BL       LCD_DispStr
;;;253    	y += ucLineCap;
0000a4  256f              MOVS     r5,#0x6f
;;;254    
;;;255    	sprintf(buf, "Accel_Z = %6d", g_tMPU6050.Accel_Z);
0000a6  f9b42004          LDRSH    r2,[r4,#4]  ; g_tMPU6050
0000aa  a11b              ADR      r1,|L5.280|
0000ac  4668              MOV      r0,sp
0000ae  f7fffffe          BL       __2sprintf
;;;256    	LCD_DispStr(x, y, buf, &tFont);
0000b2  ab20              ADD      r3,sp,#0x80
0000b4  466a              MOV      r2,sp
0000b6  4629              MOV      r1,r5
0000b8  4630              MOV      r0,r6
0000ba  f7fffffe          BL       LCD_DispStr
;;;257    	y += ucLineCap;
;;;258    
;;;259    }
0000be  b022              ADD      sp,sp,#0x88
0000c0  bd70              POP      {r4-r6,pc}
;;;260    
                          ENDP

0000c2  0000              DCW      0x0000
                  |L5.196|
                          DCD      g_tMPU6050
                  |L5.200|
0000c8  4759524f          DCB      "GYRO_X  = %6d",0
0000cc  5f582020
0000d0  3d202536
0000d4  6400    
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L5.216|
0000d8  4759524f          DCB      "GYRO_Y  = %6d",0
0000dc  5f592020
0000e0  3d202536
0000e4  6400    
0000e6  00                DCB      0
0000e7  00                DCB      0
                  |L5.232|
0000e8  4759524f          DCB      "GYRO_Z  = %6d",0
0000ec  5f5a2020
0000f0  3d202536
0000f4  6400    
0000f6  00                DCB      0
0000f7  00                DCB      0
                  |L5.248|
0000f8  41636365          DCB      "Accel_X = %6d",0
0000fc  6c5f5820
000100  3d202536
000104  6400    
000106  00                DCB      0
000107  00                DCB      0
                  |L5.264|
000108  41636365          DCB      "Accel_Y = %6d",0
00010c  6c5f5920
000110  3d202536
000114  6400    
000116  00                DCB      0
000117  00                DCB      0
                  |L5.280|
000118  41636365          DCB      "Accel_Z = %6d",0
00011c  6c5f5a20
000120  3d202536
000124  6400    
000126  00                DCB      0
000127  00                DCB      0

                          AREA ||i.TestMems||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  TestMems PROC
;;;84     */
;;;85     void TestMems(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;86     {
000004  b0a4              SUB      sp,sp,#0x90
;;;87     	uint8_t ucKeyCode;		/* 按键代码 */
;;;88     	uint8_t ucTouch;		/* 触摸事件 */
;;;89     //	uint8_t fRefresh;		/* 刷屏请求标志,1表示需要刷新 */
;;;90     	uint8_t fQuit = 0;
000006  2400              MOVS     r4,#0
;;;91     
;;;92     	int16_t tpX, tpY;
;;;93     
;;;94     	DispInitFace();
000008  f7fffffe          BL       DispInitFace
;;;95     	
;;;96     
;;;97     
;;;98     //	fRefresh = 1;
;;;99     
;;;100    
;;;101    //	if (i2c_CheckDevice(HMC5883L_SLAVE_ADDRESS) == 0)
;;;102    //	{
;;;103    //		bsp_InitHMC5883L();
;;;104    //	}
;;;105    	
;;;106    	bsp_InitBMP180();
00000c  f7fffffe          BL       bsp_InitBMP180
;;;107    	BMP180_ReadTempPress();		/* 读取结果存放在全局变量 */
000010  f7fffffe          BL       BMP180_ReadTempPress
;;;108    	
;;;109    	bsp_InitMPU6050();
000014  f7fffffe          BL       bsp_InitMPU6050
;;;110    	bsp_InitDS18B20();
000018  f7fffffe          BL       bsp_InitDS18B20
;;;111    	
;;;112    	/* 进入主程序循环体 */
;;;113    	bsp_StartAutoTimer(0, 250);		/* 陀螺仪 加速度 磁力计 定时采样周期 */
00001c  21fa              MOVS     r1,#0xfa
00001e  2000              MOVS     r0,#0
000020  f7fffffe          BL       bsp_StartAutoTimer
;;;114    	bsp_DelayMS(125);
000024  207d              MOVS     r0,#0x7d
000026  f7fffffe          BL       bsp_DelayMS
;;;115    	bsp_StartAutoTimer(1, 1000);	/* 气压计和光照度定时采样周期 */
00002a  f44f717a          MOV      r1,#0x3e8
00002e  2001              MOVS     r0,#1
000030  f7fffffe          BL       bsp_StartAutoTimer
;;;116    	while (fQuit == 0)
;;;117    	{
;;;118    		bsp_Idle();
;;;119    
;;;120    		if (bsp_CheckTimer(0))
;;;121    		{
;;;122    			MPU6050_ReadData();
;;;123    
;;;124    			DispMPU6050();
;;;125    			
;;;126    			HMC5883L_ReadData();
;;;127    //			DispHMC5833L();		
;;;128    
;;;129    			DispDS18B20();	/* 读取并显示DS18B20的数据 */				
;;;130    		}
;;;131    
;;;132    		if (bsp_CheckTimer(1))
;;;133    		{
;;;134    			BMP180_ReadTempPress();
;;;135    			DispBMP180();
;;;136    
;;;137    			DispBH1750(BH1750_GetLux());
;;;138    		
;;;139    			DispDHT11();
;;;140    		}
;;;141    
;;;142    		ucTouch = TOUCH_GetKey(&tpX, &tpY);	/* 读取触摸事件 */
;;;143    		if (ucTouch != TOUCH_NONE)
;;;144    		{
;;;145    			switch (ucTouch)
;;;146    			{
;;;147    				case TOUCH_DOWN:		/* 触笔按下事件 */
;;;148    					if (TOUCH_InRect(tpX, tpY, BUTTON_RET_X, BUTTON_RET_Y, BUTTON_RET_H, BUTTON_RET_W))
000034  f8df9108          LDR      r9,|L6.320|
000038  f8dfa108          LDR      r10,|L6.324|
00003c  273c              MOVS     r7,#0x3c
00003e  f04f0820          MOV      r8,#0x20
000042  bf00              NOP                            ;118
                  |L6.68|
000044  f7fffffe          BL       bsp_Idle
000048  2000              MOVS     r0,#0                 ;120
00004a  f7fffffe          BL       bsp_CheckTimer
00004e  b128              CBZ      r0,|L6.92|
000050  f7fffffe          BL       MPU6050_ReadData
000054  f7fffffe          BL       DispMPU6050
000058  f7fffffe          BL       HMC5883L_ReadData
                  |L6.92|
00005c  2001              MOVS     r0,#1                 ;132
00005e  f7fffffe          BL       bsp_CheckTimer
000062  b320              CBZ      r0,|L6.174|
000064  f7fffffe          BL       BMP180_ReadTempPress
000068  f7fffffe          BL       DispBMP180
00006c  f7fffffe          BL       BH1750_GetLux
000070  2101              MOVS     r1,#1                 ;137
000072  f88d1088          STRB     r1,[sp,#0x88]         ;137
000076  211f              MOVS     r1,#0x1f              ;137
000078  f8ad108a          STRH     r1,[sp,#0x8a]         ;137
00007c  f64e715b          MOV      r1,#0xef5b            ;137
000080  f8ad108c          STRH     r1,[sp,#0x8c]         ;137
000084  2100              MOVS     r1,#0                 ;137
000086  f8ad108e          STRH     r1,[sp,#0x8e]         ;137
00008a  26eb              MOVS     r6,#0xeb              ;137
00008c  2597              MOVS     r5,#0x97              ;137
00008e  f7fffffe          BL       __aeabi_f2d
000092  4602              MOV      r2,r0                 ;137
000094  460b              MOV      r3,r1                 ;137
000096  a12c              ADR      r1,|L6.328|
000098  4668              MOV      r0,sp                 ;137
00009a  f7fffffe          BL       __2sprintf
00009e  ab22              ADD      r3,sp,#0x88           ;137
0000a0  466a              MOV      r2,sp                 ;137
0000a2  4629              MOV      r1,r5                 ;137
0000a4  4630              MOV      r0,r6                 ;137
0000a6  f7fffffe          BL       LCD_DispStr
0000aa  f7fffffe          BL       DispDHT11
                  |L6.174|
0000ae  a921              ADD      r1,sp,#0x84           ;142
0000b0  a820              ADD      r0,sp,#0x80           ;142
0000b2  f7fffffe          BL       TOUCH_GetKey
0000b6  b1d8              CBZ      r0,|L6.240|
0000b8  2801              CMP      r0,#1                 ;145
0000ba  d002              BEQ      |L6.194|
0000bc  2803              CMP      r0,#3                 ;145
0000be  d117              BNE      |L6.240|
0000c0  e023              B        |L6.266|
                  |L6.194|
0000c2  e9cd8700          STRD     r8,r7,[sp,#0]         ;145
0000c6  f8b90000          LDRH     r0,[r9,#0]  ; g_LcdHeight
0000ca  3824              SUBS     r0,r0,#0x24
0000cc  b283              UXTH     r3,r0
0000ce  f8ba0000          LDRH     r0,[r10,#0]  ; g_LcdWidth
0000d2  3840              SUBS     r0,r0,#0x40
0000d4  b282              UXTH     r2,r0
0000d6  f8bd0084          LDRH     r0,[sp,#0x84]
0000da  b281              UXTH     r1,r0
0000dc  f8bd0080          LDRH     r0,[sp,#0x80]
0000e0  b280              UXTH     r0,r0
0000e2  f7fffffe          BL       TOUCH_InRect
0000e6  b118              CBZ      r0,|L6.240|
;;;149    					{
;;;150    						DispButton(BUTTON_RET_ID, 1);
0000e8  2101              MOVS     r1,#1
                  |L6.234|
0000ea  2000              MOVS     r0,#0
0000ec  f7fffffe          BL       DispButton
                  |L6.240|
;;;151    					}
;;;152    					break;
;;;153    
;;;154    				case TOUCH_RELEASE:		/* 触笔释放事件 */
;;;155    					if (TOUCH_InRect(tpX, tpY, BUTTON_RET_X, BUTTON_RET_Y, BUTTON_RET_H, BUTTON_RET_W))
;;;156    					{
;;;157    						DispButton(BUTTON_RET_ID, 0);
;;;158    						fQuit = 1;	/* 返回 */
;;;159    					}
;;;160    					else	/* 按钮失去焦点 */
;;;161    					{
;;;162    						DispButton(BUTTON_RET_ID, 0);
;;;163    					}
;;;164    					break;
;;;165    			}
;;;166    		}
;;;167    
;;;168    		/* 处理按键事件 */
;;;169    		ucKeyCode = bsp_GetKey();
0000f0  f7fffffe          BL       bsp_GetKey
;;;170    		if (ucKeyCode > 0)
0000f4  2c00              CMP      r4,#0
0000f6  d0a5              BEQ      |L6.68|
;;;171    		{
;;;172    			/* 有键按下 */
;;;173    			switch (ucKeyCode)
;;;174    			{
;;;175    				case KEY_DOWN_K1:		/* K1键切换音频格式，在下次开始录音和放音时有效 */
;;;176    					break;
;;;177    
;;;178    				case KEY_DOWN_K2:		/* K2键按下，录音 */
;;;179    					break;
;;;180    
;;;181    				case KEY_DOWN_K3:		/* K3键按下，放音 */
;;;182    					break;
;;;183    
;;;184    				case JOY_DOWN_U:		/* 摇杆UP键按下 */
;;;185    					break;
;;;186    
;;;187    				case JOY_DOWN_D:		/* 摇杆DOWN键按下 */
;;;188    					break;
;;;189    
;;;190    				case JOY_DOWN_L:		/* 摇杆LEFT键按下 */
;;;191    					break;
;;;192    
;;;193    				case JOY_DOWN_R:	/* 摇杆RIGHT键按下 */
;;;194    					break;
;;;195    
;;;196    				case JOY_DOWN_OK:		/* 摇杆OK键按下 */
;;;197    					break;
;;;198    
;;;199    				default:
;;;200    					break;
;;;201    			}
;;;202    		}
;;;203    	}
;;;204    
;;;205    	bsp_StopTimer(0);
0000f8  2000              MOVS     r0,#0
0000fa  f7fffffe          BL       bsp_StopTimer
;;;206    	bsp_StopTimer(1);
0000fe  2001              MOVS     r0,#1
000100  f7fffffe          BL       bsp_StopTimer
;;;207    }
000104  b024              ADD      sp,sp,#0x90
000106  e8bd87f0          POP      {r4-r10,pc}
                  |L6.266|
00010a  e9cd8700          STRD     r8,r7,[sp,#0]
00010e  f8b90000          LDRH     r0,[r9,#0]            ;155  ; g_LcdHeight
000112  3824              SUBS     r0,r0,#0x24           ;155
000114  b283              UXTH     r3,r0                 ;155
000116  f8ba0000          LDRH     r0,[r10,#0]           ;155  ; g_LcdWidth
00011a  3840              SUBS     r0,r0,#0x40           ;155
00011c  b282              UXTH     r2,r0                 ;155
00011e  f8bd0084          LDRH     r0,[sp,#0x84]         ;155
000122  b281              UXTH     r1,r0                 ;155
000124  f8bd0080          LDRH     r0,[sp,#0x80]         ;155
000128  b280              UXTH     r0,r0                 ;155
00012a  f7fffffe          BL       TOUCH_InRect
00012e  f04f0100          MOV      r1,#0                 ;162
000132  2800              CMP      r0,#0                 ;155
000134  d0d9              BEQ      |L6.234|
000136  4608              MOV      r0,r1                 ;157
000138  f7fffffe          BL       DispButton
00013c  2401              MOVS     r4,#1                 ;158
00013e  e7d7              B        |L6.240|
;;;208    
                          ENDP

                  |L6.320|
                          DCD      g_LcdHeight
                  |L6.324|
                          DCD      g_LcdWidth
                  |L6.328|
000148  b9e2d5d5          DCB      185,226,213,213,182,200,"  = %6.2f lux",0
00014c  b6c82020
000150  3d202536
000154  2e326620
000158  6c757800

                          AREA ||.data||, DATA, ALIGN=0

                  s_use_dht11
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\mems_test.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_mems_test_c_TestMems____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_mems_test_c_TestMems____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_mems_test_c_TestMems____REVSH|
#line 128
|__asm___11_mems_test_c_TestMems____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
