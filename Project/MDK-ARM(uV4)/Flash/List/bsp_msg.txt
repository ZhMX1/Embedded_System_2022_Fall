; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_msg.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_msg.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_msg.crf ..\..\User\bsp\bsp_msg.c]
                          THUMB

                          AREA ||i.bsp_ClearMsg||, CODE, READONLY, ALIGN=2

                  bsp_ClearMsg PROC
;;;125    */
;;;126    void bsp_ClearMsg(void)
000000  4802              LDR      r0,|L1.12|
;;;127    {
;;;128    	g_tMsg.Read = g_tMsg.Write;
000002  f8901141          LDRB     r1,[r0,#0x141]  ; g_tMsg
000006  f8801140          STRB     r1,[r0,#0x140]
;;;129    }
00000a  4770              BX       lr
;;;130    
                          ENDP

                  |L1.12|
                          DCD      ||.bss||

                          AREA ||i.bsp_GetMsg||, CODE, READONLY, ALIGN=2

                  bsp_GetMsg PROC
;;;62     */
;;;63     uint8_t bsp_GetMsg(MSG_T *_pMsg)
000000  490c              LDR      r1,|L2.52|
;;;64     {
;;;65     	MSG_T *p;
;;;66     
;;;67     	if (g_tMsg.Read == g_tMsg.Write)
000002  f8912140          LDRB     r2,[r1,#0x140]  ; g_tMsg
000006  f8913141          LDRB     r3,[r1,#0x141]  ; g_tMsg
00000a  429a              CMP      r2,r3
00000c  d101              BNE      |L2.18|
;;;68     	{
;;;69     		return 0;
00000e  2000              MOVS     r0,#0
;;;70     	}
;;;71     	else
;;;72     	{
;;;73     		p = &g_tMsg.Buf[g_tMsg.Read];
;;;74     
;;;75     		if (++g_tMsg.Read >= MSG_FIFO_SIZE)
;;;76     		{
;;;77     			g_tMsg.Read = 0;
;;;78     		}
;;;79     		
;;;80     		_pMsg->MsgCode = p->MsgCode;
;;;81     		_pMsg->MsgParam = p->MsgParam;
;;;82     		return 1;
;;;83     	}
;;;84     }
000010  4770              BX       lr
                  |L2.18|
000012  eb0103c2          ADD      r3,r1,r2,LSL #3       ;73
000016  1c52              ADDS     r2,r2,#1              ;73
000018  b2d2              UXTB     r2,r2                 ;75
00001a  f8812140          STRB     r2,[r1,#0x140]        ;75
00001e  2a28              CMP      r2,#0x28              ;75
000020  d302              BCC      |L2.40|
000022  2200              MOVS     r2,#0                 ;77
000024  f8812140          STRB     r2,[r1,#0x140]        ;77
                  |L2.40|
000028  8819              LDRH     r1,[r3,#0]            ;80
00002a  8001              STRH     r1,[r0,#0]            ;80
00002c  6859              LDR      r1,[r3,#4]            ;81
00002e  6041              STR      r1,[r0,#4]            ;82
000030  2001              MOVS     r0,#1                 ;82
000032  4770              BX       lr
;;;85     
                          ENDP

                  |L2.52|
                          DCD      ||.bss||

                          AREA ||i.bsp_GetMsg2||, CODE, READONLY, ALIGN=2

                  bsp_GetMsg2 PROC
;;;94     */
;;;95     uint8_t bsp_GetMsg2(MSG_T *_pMsg)
000000  490c              LDR      r1,|L3.52|
;;;96     {
;;;97     	MSG_T *p;
;;;98     
;;;99     	if (g_tMsg.Read2 == g_tMsg.Write)
000002  f8912142          LDRB     r2,[r1,#0x142]  ; g_tMsg
000006  f8913141          LDRB     r3,[r1,#0x141]  ; g_tMsg
00000a  429a              CMP      r2,r3
00000c  d101              BNE      |L3.18|
;;;100    	{
;;;101    		return 0;
00000e  2000              MOVS     r0,#0
;;;102    	}
;;;103    	else
;;;104    	{
;;;105    		p = &g_tMsg.Buf[g_tMsg.Read2];
;;;106    
;;;107    		if (++g_tMsg.Read2 >= MSG_FIFO_SIZE)
;;;108    		{
;;;109    			g_tMsg.Read2 = 0;
;;;110    		}
;;;111    		
;;;112    		_pMsg->MsgCode = p->MsgCode;
;;;113    		_pMsg->MsgParam = p->MsgParam;
;;;114    		return 1;
;;;115    	}
;;;116    }
000010  4770              BX       lr
                  |L3.18|
000012  eb0103c2          ADD      r3,r1,r2,LSL #3       ;105
000016  1c52              ADDS     r2,r2,#1              ;105
000018  b2d2              UXTB     r2,r2                 ;107
00001a  f8812142          STRB     r2,[r1,#0x142]        ;107
00001e  2a28              CMP      r2,#0x28              ;107
000020  d302              BCC      |L3.40|
000022  2200              MOVS     r2,#0                 ;109
000024  f8812142          STRB     r2,[r1,#0x142]        ;109
                  |L3.40|
000028  8819              LDRH     r1,[r3,#0]            ;112
00002a  8001              STRH     r1,[r0,#0]            ;112
00002c  6859              LDR      r1,[r3,#4]            ;113
00002e  6041              STR      r1,[r0,#4]            ;114
000030  2001              MOVS     r0,#1                 ;114
000032  4770              BX       lr
;;;117    
                          ENDP

                  |L3.52|
                          DCD      ||.bss||

                          AREA ||i.bsp_InitMsg||, CODE, READONLY, ALIGN=1

                  bsp_InitMsg PROC
;;;29     */
;;;30     void bsp_InitMsg(void)
000000  f7ffbffe          B.W      bsp_ClearMsg
;;;31     {
;;;32     	bsp_ClearMsg();
;;;33     }
;;;34     
                          ENDP


                          AREA ||i.bsp_PutMsg||, CODE, READONLY, ALIGN=2

                  bsp_PutMsg PROC
;;;43     */
;;;44     void bsp_PutMsg(uint16_t _MsgCode, uint32_t _MsgParam)
000000  4a0a              LDR      r2,|L5.44|
;;;45     {
;;;46     	g_tMsg.Buf[g_tMsg.Write].MsgCode = _MsgCode;
000002  f8923141          LDRB     r3,[r2,#0x141]  ; g_tMsg
000006  f8220033          STRH     r0,[r2,r3,LSL #3]
;;;47     	g_tMsg.Buf[g_tMsg.Write].MsgParam = _MsgParam;
00000a  f8920141          LDRB     r0,[r2,#0x141]  ; g_tMsg
00000e  eb0200c0          ADD      r0,r2,r0,LSL #3
;;;48     
;;;49     	if (++g_tMsg.Write  >= MSG_FIFO_SIZE)
000012  6041              STR      r1,[r0,#4]
000014  f8920141          LDRB     r0,[r2,#0x141]  ; g_tMsg
000018  1c40              ADDS     r0,r0,#1
00001a  b2c0              UXTB     r0,r0
00001c  f8820141          STRB     r0,[r2,#0x141]
000020  2828              CMP      r0,#0x28
000022  d302              BCC      |L5.42|
;;;50     	{
;;;51     		g_tMsg.Write = 0;
000024  2000              MOVS     r0,#0
000026  f8820141          STRB     r0,[r2,#0x141]
                  |L5.42|
;;;52     	}
;;;53     }
00002a  4770              BX       lr
;;;54     
                          ENDP

                  |L5.44|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  g_tMsg
                          %        324

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\bsp_msg.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_msg_c_3e703e1b____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bsp_msg_c_3e703e1b____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_msg_c_3e703e1b____REVSH|
#line 128
|__asm___9_bsp_msg_c_3e703e1b____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
