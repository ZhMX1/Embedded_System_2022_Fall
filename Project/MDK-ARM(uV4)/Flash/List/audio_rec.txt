; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\audio_rec.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\audio_rec.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\audio_rec.crf ..\..\User\app\src\audio_rec.c]
                          THUMB

                          AREA ||i.DispStatus||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                  DispStatus PROC
;;;640    */
;;;641    static void DispStatus(void)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;642    {
000004  b0a3              SUB      sp,sp,#0x8c
;;;643    	FONT_T tFont;
;;;644    	char buf[128];
;;;645    	uint16_t x, y;
;;;646    
;;;647    	/* 设置字体参数 */
;;;648    	{
;;;649    		tFont.FontCode = FC_ST_16;	/* 字体代码 16点阵 */
000006  2001              MOVS     r0,#1
000008  f88d0080          STRB     r0,[sp,#0x80]
;;;650    		tFont.FrontColor = CL_WHITE;	/* 字体颜色 */
00000c  f64f70ff          MOV      r0,#0xffff
000010  f8ad0082          STRH     r0,[sp,#0x82]
;;;651    		tFont.BackColor = CL_BLUE;	/* 文字背景颜色 */
000014  201f              MOVS     r0,#0x1f
000016  f8ad0084          STRH     r0,[sp,#0x84]
;;;652    		tFont.Space = 0;				/* 文字间距，单位 = 像素 */
;;;653    	}
;;;654    
;;;655    	x = 5;
;;;656    	y = 100;
;;;657    	/* 显示当前音频格式 */
;;;658    	sprintf(buf, "音频格式: Philips,16Bit,%d.%dkHz     ",
00001a  4c35              LDR      r4,|L1.240|
00001c  2000              MOVS     r0,#0                 ;652
00001e  f8ad0086          STRH     r0,[sp,#0x86]         ;652
000022  7820              LDRB     r0,[r4,#0]  ; g_tRec
000024  4e33              LDR      r6,|L1.244|
000026  eb000040          ADD      r0,r0,r0,LSL #1
00002a  eb060080          ADD      r0,r6,r0,LSL #2
00002e  f44f757a          MOV      r5,#0x3e8
000032  6880              LDR      r0,[r0,#8]
000034  f04f0864          MOV      r8,#0x64
000038  fbb0f1f5          UDIV     r1,r0,r5
00003c  fb050211          MLS      r2,r5,r1,r0
000040  fbb2f3f8          UDIV     r3,r2,r8
000044  fbb0f2f5          UDIV     r2,r0,r5
000048  f04f0905          MOV      r9,#5                 ;655
00004c  a12a              ADR      r1,|L1.248|
00004e  4668              MOV      r0,sp
000050  f7fffffe          BL       __2sprintf
;;;659    		g_FmtList[g_tRec.ucFmtIdx][2]/1000,
;;;660    		(g_FmtList[g_tRec.ucFmtIdx][2]%1000)/100
;;;661    		);
;;;662    
;;;663    	sprintf(&buf[strlen(buf)], "录音时长: %d.%03d秒    ",
000054  7820              LDRB     r0,[r4,#0]  ; g_tRec
000056  04e9              LSLS     r1,r5,#19
000058  eb000040          ADD      r0,r0,r0,LSL #1
00005c  eb060080          ADD      r0,r6,r0,LSL #2
000060  6880              LDR      r0,[r0,#8]
000062  fbb1f1f0          UDIV     r1,r1,r0
000066  fbb1f2f5          UDIV     r2,r1,r5
00006a  fb051612          MLS      r6,r5,r2,r1
00006e  f44f2100          MOV      r1,#0x80000
000072  fbb1f5f0          UDIV     r5,r1,r0
000076  4668              MOV      r0,sp
000078  f7fffffe          BL       strlen
00007c  466f              MOV      r7,sp
00007e  4438              ADD      r0,r0,r7
000080  4633              MOV      r3,r6
000082  462a              MOV      r2,r5
000084  a126              ADR      r1,|L1.288|
000086  f7fffffe          BL       __2sprintf
;;;664    		(EXT_SRAM_SIZE / 2) / g_FmtList[g_tRec.ucFmtIdx][2],
;;;665    		(((EXT_SRAM_SIZE / 2) * 1000) / g_FmtList[g_tRec.ucFmtIdx][2]) % 1000
;;;666    		);
;;;667    
;;;668    	LCD_DispStr(x, y, buf, &tFont);
00008a  ab20              ADD      r3,sp,#0x80
00008c  466a              MOV      r2,sp
00008e  4641              MOV      r1,r8
000090  4648              MOV      r0,r9
000092  f7fffffe          BL       LCD_DispStr
;;;669    	y += 18;
000096  2576              MOVS     r5,#0x76
;;;670    
;;;671    	sprintf(buf, "麦克风增益 = %d ", g_tRec.ucMicGain);
000098  78a2              LDRB     r2,[r4,#2]  ; g_tRec
00009a  a127              ADR      r1,|L1.312|
00009c  4668              MOV      r0,sp
00009e  f7fffffe          BL       __2sprintf
;;;672    	sprintf(&buf[strlen(buf)], "耳机音量 = %d         ", g_tRec.ucVolume);
0000a2  4668              MOV      r0,sp
0000a4  f7fffffe          BL       strlen
0000a8  4438              ADD      r0,r0,r7
0000aa  7862              LDRB     r2,[r4,#1]  ; g_tRec
0000ac  a127              ADR      r1,|L1.332|
0000ae  f7fffffe          BL       __2sprintf
;;;673    	LCD_DispStr(x, y, buf, &tFont);
0000b2  ab20              ADD      r3,sp,#0x80
0000b4  466a              MOV      r2,sp
0000b6  4629              MOV      r1,r5
0000b8  4648              MOV      r0,r9
0000ba  f7fffffe          BL       LCD_DispStr
;;;674    	y += 18;
;;;675    
;;;676    	if (g_tRec.ucStatus == STA_IDLE)
0000be  7b60              LDRB     r0,[r4,#0xd]  ; g_tRec
0000c0  2588              MOVS     r5,#0x88              ;674
0000c2  b120              CBZ      r0,|L1.206|
;;;677    	{
;;;678    		sprintf(buf, "状态 = 空闲    ");
;;;679    	}
;;;680    	else if (g_tRec.ucStatus == STA_RECORDING)
0000c4  2801              CMP      r0,#1
0000c6  d004              BEQ      |L1.210|
;;;681    	{
;;;682    		sprintf(buf,"状态 = 正在录音");
;;;683    	}
;;;684    	else if (g_tRec.ucStatus == STA_PLAYING)
0000c8  2802              CMP      r0,#2
0000ca  d004              BEQ      |L1.214|
0000cc  e007              B        |L1.222|
                  |L1.206|
0000ce  a125              ADR      r1,|L1.356|
0000d0  e002              B        |L1.216|
                  |L1.210|
0000d2  a128              ADR      r1,|L1.372|
0000d4  e000              B        |L1.216|
                  |L1.214|
;;;685    	{
;;;686    		sprintf(buf,"状态 = 正在回放");
0000d6  a12b              ADR      r1,|L1.388|
                  |L1.216|
0000d8  4668              MOV      r0,sp
0000da  f7fffffe          BL       __2sprintf
                  |L1.222|
;;;687    	}
;;;688    	LCD_DispStr(x, y, buf, &tFont);
0000de  ab20              ADD      r3,sp,#0x80
0000e0  466a              MOV      r2,sp
0000e2  4629              MOV      r1,r5
0000e4  4648              MOV      r0,r9
0000e6  f7fffffe          BL       LCD_DispStr
;;;689    }
0000ea  b023              ADD      sp,sp,#0x8c
0000ec  e8bd83f0          POP      {r4-r9,pc}
;;;690    
                          ENDP

                  |L1.240|
                          DCD      ||.bss||
                  |L1.244|
                          DCD      ||.data||
                  |L1.248|
0000f8  d2f4c6b5          DCB      210,244,198,181,184,241,202,189,": Philips,16Bit,%d.%dkH"
0000fc  b8f1cabd
000100  3a205068
000104  696c6970
000108  732c3136
00010c  4269742c
000110  25642e25
000114  646b48  
000117  7a202020          DCB      "z     ",0
00011b  202000  
00011e  00                DCB      0
00011f  00                DCB      0
                  |L1.288|
000120  c2bcd2f4          DCB      194,188,210,244,202,177,179,164,": %d.%03d",195,235,"   "
000124  cab1b3a4
000128  3a202564
00012c  2e253033
000130  64c3eb20
000134  2020    
000136  2000              DCB      " ",0
                  |L1.312|
000138  c2f3bfcb          DCB      194,243,191,203,183,231,212,246,210,230," = %d ",0
00013c  b7e7d4f6
000140  d2e6203d
000144  20256420
000148  00      
000149  00                DCB      0
00014a  00                DCB      0
00014b  00                DCB      0
                  |L1.332|
00014c  b6fabbfa          DCB      182,250,187,250,210,244,193,191," = %d         ",0
000150  d2f4c1bf
000154  203d2025
000158  64202020
00015c  20202020
000160  202000  
000163  00                DCB      0
                  |L1.356|
000164  d7b4ccac          DCB      215,180,204,172," = ",191,213,207,208,"    ",0
000168  203d20bf
00016c  d5cfd020
000170  20202000
                  |L1.372|
000174  d7b4ccac          DCB      215,180,204,172," = ",213,253,212,218,194,188,210,244,0
000178  203d20d5
00017c  fdd4dac2
000180  bcd2f400
                  |L1.388|
000184  d7b4ccac          DCB      215,180,204,172," = ",213,253,212,218,187,216,183,197,0
000188  203d20d5
00018c  fdd4dabb
000190  d8b7c500

                          AREA ||i.I2S_CODEC_DataTransfer||, CODE, READONLY, ALIGN=2

                  I2S_CODEC_DataTransfer PROC
;;;698    */
;;;699    void I2S_CODEC_DataTransfer(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;700    {
;;;701    	uint16_t usData;
;;;702    	
;;;703    	/* 只录左声道(安富莱STM32开发板MIC安装在左声道), 放音时左右声道相同 */
;;;704    	if (g_tRec.ucStatus == STA_RECORDING)	/* 录音状态 */
000004  4c30              LDR      r4,|L2.200|
;;;705    	{
;;;706    		if (SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_RXNE) == SET)
000006  4e31              LDR      r6,|L2.204|
;;;707    		{
;;;708    			usData = SPI_I2S_ReceiveData(SPI2);
;;;709    			#if 1		/* 录双通道 */
;;;710    				g_tRec.pAudio[g_tRec.uiCursor] = usData;	/* 保存音频数据 */
;;;711    				if (++g_tRec.uiCursor >= EXT_SRAM_SIZE / 2)
000008  f44f2500          MOV      r5,#0x80000
00000c  7b60              LDRB     r0,[r4,#0xd]          ;704  ; g_tRec
00000e  2801              CMP      r0,#1                 ;704
000010  d00d              BEQ      |L2.46|
;;;712    				{
;;;713    					g_tRec.uiCursor = EXT_SRAM_SIZE / 2;
;;;714    					/* 禁止I2S2 RXNE中断(接收不空)，需要时再打开 */
;;;715    					SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_RXNE, DISABLE);
;;;716    					/* 禁止I2S2 TXE中断(发送缓冲区空)，需要时再打开 */
;;;717    					SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_TXE, DISABLE);
;;;718    
;;;719    					bsp_PutKey(JOY_DOWN_OK);	/* 模拟停止键按下 */
;;;720    				}
;;;721    			#else	/* 选择一个声道进行记录 */
;;;722    				if (SPI_I2S_GetFlagStatus(SPI2, I2S_FLAG_CHSIDE) != SET)	/* 判断是不是左声道 */
;;;723    				{
;;;724    					g_tRec.pAudio[g_tRec.uiCursor] = usData;	/* 保存音频数据 */
;;;725    					if (++g_tRec.uiCursor >= EXT_SRAM_SIZE / 2)
;;;726    					{
;;;727    						g_tRec.uiCursor = EXT_SRAM_SIZE / 2;
;;;728    						/* 禁止I2S2 RXNE中断(接收不空)，需要时再打开 */
;;;729    						SPI_I2S_ITConfig(I2S2ext, SPI_I2S_IT_RXNE, DISABLE);
;;;730    						/* 禁止I2S2 TXE中断(发送缓冲区空)，需要时再打开 */
;;;731    						SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_TXE, DISABLE);
;;;732    
;;;733    						bsp_PutKey(JOY_DOWN_OK);	/* 模拟停止键按下 */
;;;734    					}
;;;735    				}
;;;736    			#endif
;;;737    		}
;;;738    
;;;739    		if (SPI_I2S_GetITStatus(SPI2, SPI_I2S_IT_TXE) == SET)
;;;740    		{
;;;741    			SPI_I2S_SendData(SPI2, 0);
;;;742    		}
;;;743    	}
;;;744    	else if (g_tRec.ucStatus == STA_PLAYING)	/* 放音状态，右声道的值等于左声道 */
000012  2802              CMP      r0,#2
000014  d033              BEQ      |L2.126|
;;;745    	{
;;;746    		if (SPI_I2S_GetITStatus(SPI2, SPI_I2S_IT_TXE) == SET)
;;;747    		{
;;;748    			#if 1		/* 双通道放音 */
;;;749    				usData = g_tRec.pAudio[g_tRec.uiCursor];		/* 读取音频数据 */
;;;750    				if (++g_tRec.uiCursor >= EXT_SRAM_SIZE / 2)
;;;751    				{
;;;752    					g_tRec.uiCursor = EXT_SRAM_SIZE / 2;
;;;753    					/* 禁止I2S2 RXNE中断(接收不空)，需要时再打开 */
;;;754    					SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_RXNE, DISABLE);
;;;755    					/* 禁止I2S2 TXE中断(发送缓冲区空)，需要时再打开 */
;;;756    					SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_TXE, DISABLE);
;;;757    
;;;758    					bsp_PutKey(JOY_DOWN_OK);	/* 模拟停止键按下 */
;;;759    				}
;;;760    				SPI_I2S_SendData(SPI2, usData);
;;;761    			#else	/* 可以将其中1个通道的声音复制到另外1个通道(用于左声道录音或右声道录音) */
;;;762    				usData = g_tRec.pAudio[g_tRec.uiCursor];		/* 读取音频数据 */
;;;763    				if (SPI_I2S_GetFlagStatus(SPI2, I2S_FLAG_CHSIDE) != SET)	/* 判断是不是左声道 */
;;;764    				{
;;;765    					if (++g_tRec.uiCursor >= EXT_SRAM_SIZE / 2)
;;;766    					{
;;;767    						g_tRec.uiCursor = EXT_SRAM_SIZE / 2;
;;;768    						/* 禁止I2S2 RXNE中断(接收不空)，需要时再打开 */
;;;769    						SPI_I2S_ITConfig(I2S2ext, SPI_I2S_IT_RXNE, DISABLE);
;;;770    						/* 禁止I2S2 TXE中断(发送缓冲区空)，需要时再打开 */
;;;771    						SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_TXE, DISABLE);
;;;772    
;;;773    						bsp_PutKey(JOY_DOWN_OK);	/* 模拟停止键按下 */
;;;774    					}
;;;775    				}
;;;776    				SPI_I2S_SendData(SPI2, usData);
;;;777    			#endif
;;;778    		}
;;;779    	}
;;;780    	else 	/* 临时状态 STA_STOP_I2S，用于停止中断 */
;;;781    	{
;;;782    		/* 禁止I2S2 RXNE中断(接收不空)，需要时再打开 */
;;;783    		SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_RXNE, DISABLE);
000016  2200              MOVS     r2,#0
000018  2160              MOVS     r1,#0x60
00001a  4630              MOV      r0,r6
00001c  f7fffffe          BL       SPI_I2S_ITConfig
;;;784    		/* 禁止I2S2 TXE中断(发送缓冲区空)，需要时再打开 */
;;;785    		SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_TXE, DISABLE);
000020  4630              MOV      r0,r6
000022  e8bd41f0          POP      {r4-r8,lr}
000026  2200              MOVS     r2,#0
000028  2171              MOVS     r1,#0x71
00002a  f7ffbffe          B.W      SPI_I2S_ITConfig
                  |L2.46|
00002e  2101              MOVS     r1,#1                 ;706
000030  4630              MOV      r0,r6                 ;706
000032  f7fffffe          BL       SPI_I2S_GetFlagStatus
000036  2801              CMP      r0,#1                 ;706
000038  d119              BNE      |L2.110|
00003a  4630              MOV      r0,r6                 ;708
00003c  f7fffffe          BL       SPI_I2S_ReceiveData
000040  e9d41201          LDRD     r1,r2,[r4,#4]         ;708
000044  f8210012          STRH     r0,[r1,r2,LSL #1]     ;710
000048  68a0              LDR      r0,[r4,#8]            ;711  ; g_tRec
00004a  1c40              ADDS     r0,r0,#1              ;711
00004c  60a0              STR      r0,[r4,#8]            ;711  ; g_tRec
00004e  42a8              CMP      r0,r5                 ;711
000050  d30d              BCC      |L2.110|
000052  2200              MOVS     r2,#0                 ;715
000054  2160              MOVS     r1,#0x60              ;715
000056  4630              MOV      r0,r6                 ;715
000058  60a5              STR      r5,[r4,#8]            ;715  ; g_tRec
00005a  f7fffffe          BL       SPI_I2S_ITConfig
00005e  2200              MOVS     r2,#0                 ;717
000060  2171              MOVS     r1,#0x71              ;717
000062  4630              MOV      r0,r6                 ;717
000064  f7fffffe          BL       SPI_I2S_ITConfig
000068  2016              MOVS     r0,#0x16              ;719
00006a  f7fffffe          BL       bsp_PutKey
                  |L2.110|
00006e  2171              MOVS     r1,#0x71              ;739
000070  4630              MOV      r0,r6                 ;739
000072  f7fffffe          BL       SPI_I2S_GetITStatus
000076  2801              CMP      r0,#1                 ;739
000078  d123              BNE      |L2.194|
00007a  2100              MOVS     r1,#0                 ;741
00007c  e01c              B        |L2.184|
                  |L2.126|
00007e  2171              MOVS     r1,#0x71              ;746
000080  4630              MOV      r0,r6                 ;746
000082  f7fffffe          BL       SPI_I2S_GetITStatus
000086  2801              CMP      r0,#1                 ;746
000088  d11b              BNE      |L2.194|
00008a  e9d41001          LDRD     r1,r0,[r4,#4]         ;746
00008e  f8317010          LDRH     r7,[r1,r0,LSL #1]     ;749
000092  1c40              ADDS     r0,r0,#1              ;749
000094  60a0              STR      r0,[r4,#8]            ;750  ; g_tRec
000096  42a8              CMP      r0,r5                 ;750
000098  d30d              BCC      |L2.182|
00009a  2200              MOVS     r2,#0                 ;754
00009c  2160              MOVS     r1,#0x60              ;754
00009e  4630              MOV      r0,r6                 ;754
0000a0  60a5              STR      r5,[r4,#8]            ;754  ; g_tRec
0000a2  f7fffffe          BL       SPI_I2S_ITConfig
0000a6  2200              MOVS     r2,#0                 ;756
0000a8  2171              MOVS     r1,#0x71              ;756
0000aa  4630              MOV      r0,r6                 ;756
0000ac  f7fffffe          BL       SPI_I2S_ITConfig
0000b0  2016              MOVS     r0,#0x16              ;758
0000b2  f7fffffe          BL       bsp_PutKey
                  |L2.182|
0000b6  4639              MOV      r1,r7                 ;760
                  |L2.184|
0000b8  4630              MOV      r0,r6                 ;760
0000ba  e8bd41f0          POP      {r4-r8,lr}            ;760
0000be  f7ffbffe          B.W      SPI_I2S_SendData
                  |L2.194|
;;;786    	}
;;;787    }
0000c2  e8bd81f0          POP      {r4-r8,pc}
;;;788    
                          ENDP

0000c6  0000              DCW      0x0000
                  |L2.200|
                          DCD      ||.bss||
                  |L2.204|
                          DCD      0x40003800

                          AREA ||i.RecorderDemo||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  RecorderDemo PROC
;;;128    */
;;;129    void RecorderDemo(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;130    {
000004  b0bd              SUB      sp,sp,#0xf4
;;;131    	uint8_t ucKeyCode;		/* 按键代码 */
;;;132    	uint8_t ucTouch;		/* 触摸事件 */
;;;133    	uint8_t fRefresh;		/* 刷屏请求标志,1表示需要刷新 */
;;;134    	uint8_t fQuit = 0;
000006  2700              MOVS     r7,#0
;;;135    	FONT_T tFont, tFontBtn, tFontChk;			/* 定义一个字体结构体变量，用于设置字体参数 */
;;;136    
;;;137    	char buf[128];
;;;138    	uint16_t x, y;
;;;139    	uint16_t usLineCap = 18;
;;;140    
;;;141    	int16_t tpX, tpY;
;;;142    	BUTTON_T tBtn;
;;;143    	CHECK_T tCheck;
;;;144    
;;;145    	LCD_ClrScr(CL_BLUE);  	/* 清屏，背景蓝色 */
000008  201f              MOVS     r0,#0x1f
00000a  f7fffffe          BL       LCD_ClrScr
;;;146    
;;;147    	/* 设置字体参数 */
;;;148    	{
;;;149    		tFont.FontCode = FC_ST_16;	/* 字体代码 16点阵 */
;;;150    		tFont.FrontColor = CL_WHITE;	/* 字体颜色 */
;;;151    		tFont.BackColor = CL_BLUE;	/* 文字背景颜色 */
00000e  201f              MOVS     r0,#0x1f
000010  f8ad00ac          STRH     r0,[sp,#0xac]
000014  2501              MOVS     r5,#1                 ;149
;;;152    		tFont.Space = 0;				/* 文字间距，单位 = 像素 */
000016  2600              MOVS     r6,#0
;;;153    
;;;154    		/* 按钮字体 */
;;;155    		tFontBtn.FontCode = FC_ST_16;
;;;156    		tFontBtn.BackColor = CL_MASK;	/* 透明色 */
000018  f6491099          MOV      r0,#0x9999
00001c  f8ad00cc          STRH     r0,[sp,#0xcc]
;;;157    		tFontBtn.FrontColor = CL_BLACK;
;;;158    		tFontBtn.Space = 0;
;;;159    
;;;160    		/* CheckBox 字体 */
;;;161    		tFontChk.FontCode = FC_ST_16;
;;;162    		tFontChk.BackColor = CL_MASK;	/* 透明色 */
000020  f8ad00ec          STRH     r0,[sp,#0xec]
000024  f8ad60ae          STRH     r6,[sp,#0xae]         ;152
000028  f88d50a8          STRB     r5,[sp,#0xa8]         ;149
00002c  f64f74ff          MOV      r4,#0xffff            ;150
000030  f88d50c8          STRB     r5,[sp,#0xc8]         ;155
000034  f88d50e8          STRB     r5,[sp,#0xe8]         ;161
;;;163    		tFontChk.FrontColor = CL_YELLOW;
000038  f64f78e0          MOV      r8,#0xffe0
;;;164    		tFontChk.Space = 0;
;;;165    	}
;;;166    
;;;167    	x = 5;
00003c  2005              MOVS     r0,#5
00003e  f8ad40aa          STRH     r4,[sp,#0xaa]         ;150
000042  f8ad60ca          STRH     r6,[sp,#0xca]         ;157
000046  f8ad60ce          STRH     r6,[sp,#0xce]         ;158
00004a  f8ad80ea          STRH     r8,[sp,#0xea]         ;163
00004e  f8ad60ee          STRH     r6,[sp,#0xee]         ;164
000052  4682              MOV      r10,r0
;;;168    	y = 3;
000054  2103              MOVS     r1,#3
;;;169    	LCD_DispStr(x, y, "WM8978录音机", &tFont);			/* 在(8,3)坐标处显示一串汉字 */
000056  ab2a              ADD      r3,sp,#0xa8
000058  a2f5              ADR      r2,|L3.1072|
00005a  f7fffffe          BL       LCD_DispStr
;;;170    	y += usLineCap;
00005e  f04f0915          MOV      r9,#0x15
;;;171    
;;;172    	/* 测试I2C设备 */
;;;173    	{
;;;174    		if (i2c_CheckDevice(WM8978_SLAVE_ADDRESS) == 0)
000062  2034              MOVS     r0,#0x34
000064  f7fffffe          BL       i2c_CheckDevice
000068  2800              CMP      r0,#0
;;;175    		{
;;;176    			sprintf(buf, "WM8978 Ok (0x%02X)", WM8978_SLAVE_ADDRESS);
;;;177    			LCD_DispStr(x, y, buf, &tFont);
;;;178    		}
;;;179    		else
;;;180    		{
;;;181    			sprintf(buf, "WM8978 Err (0x%02X)", WM8978_SLAVE_ADDRESS);
00006a  f04f0234          MOV      r2,#0x34
00006e  d07d              BEQ      |L3.364|
000070  a1f3              ADR      r1,|L3.1088|
000072  a808              ADD      r0,sp,#0x20
000074  f7fffffe          BL       __2sprintf
;;;182    
;;;183    			tFont.FrontColor = CL_RED;
000078  f44f4078          MOV      r0,#0xf800
00007c  f8ad00aa          STRH     r0,[sp,#0xaa]
;;;184    			LCD_DispStr(x, y, buf, &tFont);
000080  ab2a              ADD      r3,sp,#0xa8
000082  aa08              ADD      r2,sp,#0x20
000084  4649              MOV      r1,r9
000086  4650              MOV      r0,r10
000088  f7fffffe          BL       LCD_DispStr
;;;185    			tFont.FrontColor = CL_WHITE;
00008c  f8ad40aa          STRH     r4,[sp,#0xaa]
                  |L3.144|
;;;186    		}
;;;187    		y += usLineCap;
000090  2127              MOVS     r1,#0x27
;;;188    
;;;189    		tFont.FrontColor = CL_YELLOW;
000092  f8ad80aa          STRH     r8,[sp,#0xaa]
;;;190    		LCD_DispStr(x, y, STR_Help1, &tFont);
000096  ab2a              ADD      r3,sp,#0xa8
000098  a2ee              ADR      r2,|L3.1108|
00009a  4650              MOV      r0,r10
00009c  f7fffffe          BL       LCD_DispStr
;;;191    		y += usLineCap;
0000a0  2139              MOVS     r1,#0x39
;;;192    
;;;193    		LCD_DispStr(x, y, STR_Help2, &tFont);
0000a2  ab2a              ADD      r3,sp,#0xa8
0000a4  a2f2              ADR      r2,|L3.1136|
0000a6  4650              MOV      r0,r10
0000a8  f7fffffe          BL       LCD_DispStr
;;;194    		y += usLineCap;
0000ac  214b              MOVS     r1,#0x4b
;;;195    
;;;196    		LCD_DispStr(x, y, STR_Help3, &tFont);
0000ae  ab2a              ADD      r3,sp,#0xa8
0000b0  a2f7              ADR      r2,|L3.1168|
0000b2  4650              MOV      r0,r10
0000b4  f7fffffe          BL       LCD_DispStr
;;;197    		y += usLineCap;
;;;198    
;;;199    		tFont.FrontColor = CL_WHITE;
0000b8  f8ad40aa          STRH     r4,[sp,#0xaa]
;;;200    	}
;;;201    
;;;202    	/* 配置外部SRAM接口已经在 bsp.c 中的 bsp_Init() 函数执行过 */
;;;203    
;;;204    	/* 检测WM8978芯片，此函数会自动配置CPU的GPIO */
;;;205    	if (!wm8978_Init())
0000bc  f7fffffe          BL       wm8978_Init
0000c0  2800              CMP      r0,#0
0000c2  d07c              BEQ      |L3.446|
;;;206    	{
;;;207    		bsp_DelayMS(500);
;;;208    		return;
;;;209    	}
;;;210    
;;;211    	/* 显示按钮 */
;;;212    	{
;;;213    		tBtn.Font = &tFontBtn;
;;;214    
;;;215    		tBtn.Left = BUTTON_RET_X;
0000c4  f8df93e4          LDR      r9,|L3.1196|
0000c8  a832              ADD      r0,sp,#0xc8           ;213
0000ca  9005              STR      r0,[sp,#0x14]
0000cc  f8b90000          LDRH     r0,[r9,#0]  ; g_LcdWidth
;;;216    		tBtn.Top = BUTTON_RET_Y;
0000d0  f8dfa3dc          LDR      r10,|L3.1200|
0000d4  3840              SUBS     r0,r0,#0x40           ;215
0000d6  f8ad000a          STRH     r0,[sp,#0xa]          ;215
0000da  f8ba0000          LDRH     r0,[r10,#0]  ; g_LcdHeight
;;;217    		tBtn.Height = BUTTON_RET_H;
0000de  f04f0820          MOV      r8,#0x20
0000e2  3824              SUBS     r0,r0,#0x24           ;216
0000e4  f8ad000c          STRH     r0,[sp,#0xc]          ;216
;;;218    		tBtn.Width = BUTTON_RET_W;
;;;219    		tBtn.Focus = 0;		/* 未选中 */
;;;220    		tBtn.pCaption = BUTTON_RET_TEXT;
0000e8  a0f2              ADR      r0,|L3.1204|
0000ea  f04f0b3c          MOV      r11,#0x3c             ;218
;;;221    		LCD_DrawButton(&tBtn);
0000ee  9006              STR      r0,[sp,#0x18]
0000f0  f8ad800e          STRH     r8,[sp,#0xe]          ;217
0000f4  f8adb010          STRH     r11,[sp,#0x10]        ;218
0000f8  f88d601c          STRB     r6,[sp,#0x1c]         ;219
0000fc  a802              ADD      r0,sp,#8
0000fe  f7fffffe          BL       LCD_DrawButton
;;;222    
;;;223    		tBtn.Left = BUTTON_REC_X;
;;;224    		tBtn.Top = BUTTON_REC_Y;
000102  20b4              MOVS     r0,#0xb4
000104  f8ad000c          STRH     r0,[sp,#0xc]
;;;225    		tBtn.Height = BUTTON_REC_H;
000108  2020              MOVS     r0,#0x20
00010a  f8ad000e          STRH     r0,[sp,#0xe]
;;;226    		tBtn.Width = BUTTON_REC_W;
00010e  204a              MOVS     r0,#0x4a
000110  2405              MOVS     r4,#5                 ;223
000112  f8ad0010          STRH     r0,[sp,#0x10]
000116  f8ad400a          STRH     r4,[sp,#0xa]          ;223
;;;227    		tBtn.Focus = 0;		/* 失去焦点 */
00011a  2000              MOVS     r0,#0
00011c  f88d001c          STRB     r0,[sp,#0x1c]
;;;228    		tBtn.pCaption = BUTTON_REC_TEXT;
000120  a0e6              ADR      r0,|L3.1212|
;;;229    		LCD_DrawButton(&tBtn);
000122  9006              STR      r0,[sp,#0x18]
000124  a802              ADD      r0,sp,#8
000126  f7fffffe          BL       LCD_DrawButton
;;;230    
;;;231    		tBtn.Left = BUTTON_PLAY_X;
00012a  2059              MOVS     r0,#0x59
00012c  f8ad000a          STRH     r0,[sp,#0xa]
;;;232    		tBtn.Top = BUTTON_PLAY_Y;
000130  20b4              MOVS     r0,#0xb4
000132  f8ad000c          STRH     r0,[sp,#0xc]
;;;233    		tBtn.Height = BUTTON_PLAY_H;
000136  2020              MOVS     r0,#0x20
000138  f8ad000e          STRH     r0,[sp,#0xe]
;;;234    		tBtn.Width = BUTTON_PLAY_W;
00013c  204a              MOVS     r0,#0x4a
00013e  f8ad0010          STRH     r0,[sp,#0x10]
;;;235    		tBtn.Focus = 0;		/* 失去焦点 */
000142  2000              MOVS     r0,#0
000144  f88d001c          STRB     r0,[sp,#0x1c]
;;;236    		tBtn.pCaption = BUTTON_PLAY_TEXT;
000148  a0df              ADR      r0,|L3.1224|
;;;237    		LCD_DrawButton(&tBtn);
00014a  9006              STR      r0,[sp,#0x18]
00014c  a802              ADD      r0,sp,#8
00014e  f7fffffe          BL       LCD_DrawButton
;;;238    
;;;239    		tBtn.Left = BUTTON_STOP_X;
000152  20ad              MOVS     r0,#0xad
000154  f8ad000a          STRH     r0,[sp,#0xa]
;;;240    		tBtn.Top = BUTTON_STOP_Y;
000158  20b4              MOVS     r0,#0xb4
00015a  f8ad000c          STRH     r0,[sp,#0xc]
;;;241    		tBtn.Height = BUTTON_STOP_H;
00015e  2020              MOVS     r0,#0x20
000160  f8ad000e          STRH     r0,[sp,#0xe]
;;;242    		tBtn.Width = BUTTON_STOP_W;
000164  204a              MOVS     r0,#0x4a
000166  f8ad0010          STRH     r0,[sp,#0x10]
;;;243    		tBtn.Focus = 0;		/* 失去焦点 */
00016a  e000              B        |L3.366|
                  |L3.364|
00016c  e037              B        |L3.478|
                  |L3.366|
00016e  2000              MOVS     r0,#0
000170  f88d001c          STRB     r0,[sp,#0x1c]
;;;244    		tBtn.pCaption = BUTTON_STOP_TEXT;
000174  a0d7              ADR      r0,|L3.1236|
;;;245    		LCD_DrawButton(&tBtn);
000176  9006              STR      r0,[sp,#0x18]
000178  a802              ADD      r0,sp,#8
00017a  f7fffffe          BL       LCD_DrawButton
;;;246    
;;;247    		/* 显示检查框 */
;;;248    		tCheck.Font = &tFontChk;
00017e  a83a              ADD      r0,sp,#0xe8
;;;249    
;;;250    		tCheck.Left = CHECK_SPK_X;
000180  902f              STR      r0,[sp,#0xbc]
;;;251    		tCheck.Top = CHECK_SPK_Y;
000182  20d9              MOVS     r0,#0xd9
000184  f8ad00b4          STRH     r0,[sp,#0xb4]
000188  f8ad40b2          STRH     r4,[sp,#0xb2]         ;250
;;;252    		tCheck.Height = CHECK_SPK_H;
00018c  2018              MOVS     r0,#0x18
00018e  f8ad00b6          STRH     r0,[sp,#0xb6]
;;;253    		tCheck.Width = CHECK_SPK_W;
;;;254    		if (g_tRec.ucSpkOutEn == 1)
000192  4cd2              LDR      r4,|L3.1244|
000194  2068              MOVS     r0,#0x68              ;253
000196  f8ad00b8          STRH     r0,[sp,#0xb8]         ;253
00019a  7b20              LDRB     r0,[r4,#0xc]  ; g_tRec
00019c  2801              CMP      r0,#1
00019e  d030              BEQ      |L3.514|
;;;255    		{
;;;256    			tCheck.Checked = 1;
;;;257    		}
;;;258    		else
;;;259    		{
;;;260    			tCheck.Checked = 0;
0001a0  f88d60c4          STRB     r6,[sp,#0xc4]
                  |L3.420|
;;;261    		}
;;;262    		tCheck.pCaption = CHECK_SPK_TEXT;
0001a4  a0ce              ADR      r0,|L3.1248|
;;;263    		LCD_DrawCheckBox(&tCheck);
0001a6  9030              STR      r0,[sp,#0xc0]
0001a8  a82c              ADD      r0,sp,#0xb0
0001aa  f7fffffe          BL       LCD_DrawCheckBox
;;;264    	}
;;;265    
;;;266    
;;;267    	/* 初始化全局变量 */
;;;268    	g_tRec.ucVolume = 39;		/* 缺省音量 */
0001ae  2027              MOVS     r0,#0x27
0001b0  7060              STRB     r0,[r4,#1]
;;;269    	g_tRec.ucMicGain = 34;			/* 缺省PGA增益 */
0001b2  2022              MOVS     r0,#0x22
0001b4  70a0              STRB     r0,[r4,#2]
;;;270    
;;;271    	I2S_CODEC_Init();			/* 初始化设置I2S */
0001b6  f7fffffe          BL       I2S_CODEC_Init
;;;272    	fRefresh = 1;
;;;273    
;;;274    	g_tRec.ucFmtIdx = 1;		/* 缺省音频格式(16Bit, 16KHz) */
0001ba  7025              STRB     r5,[r4,#0]
;;;275    	g_tRec.pAudio = (int16_t *)EXT_SRAM_ADDR;	/* 通过 init16_t * 型指针访问外部SRAM */
0001bc  e000              B        |L3.448|
                  |L3.446|
0001be  e019              B        |L3.500|
                  |L3.448|
0001c0  f04f40d0          MOV      r0,#0x68000000
;;;276    
;;;277    	/* 清零录音缓冲区. SRAM容量2M字节 */
;;;278    	{
;;;279    		int i;
;;;280    
;;;281    		for (i = 0 ; i < 1 * 1024 * 1024; i++)
0001c4  6060              STR      r0,[r4,#4]  ; g_tRec
0001c6  2000              MOVS     r0,#0
0001c8  f44f1180          MOV      r1,#0x100000
                  |L3.460|
;;;282    		{
;;;283    			g_tRec.pAudio[i] = 0;
0001cc  6862              LDR      r2,[r4,#4]  ; g_tRec
0001ce  f8226010          STRH     r6,[r2,r0,LSL #1]
0001d2  1c40              ADDS     r0,r0,#1
0001d4  4288              CMP      r0,r1                 ;281
0001d6  dbf9              BLT      |L3.460|
;;;284    		}
;;;285    	}
;;;286    
;;;287    	g_tRec.ucStatus = STA_IDLE;		/* 首先进入空闲状态 */
0001d8  2000              MOVS     r0,#0
0001da  7360              STRB     r0,[r4,#0xd]
                  |L3.476|
;;;288    
;;;289    	/* 进入主程序循环体 */
;;;290    	while (fQuit == 0)
0001dc  e019              B        |L3.530|
                  |L3.478|
0001de  a1c3              ADR      r1,|L3.1260|
0001e0  a808              ADD      r0,sp,#0x20           ;176
0001e2  f7fffffe          BL       __2sprintf
0001e6  ab2a              ADD      r3,sp,#0xa8           ;177
0001e8  aa08              ADD      r2,sp,#0x20           ;177
0001ea  4649              MOV      r1,r9                 ;177
0001ec  4650              MOV      r0,r10                ;177
0001ee  f7fffffe          BL       LCD_DispStr
0001f2  e74d              B        |L3.144|
                  |L3.500|
0001f4  f44f70fa          MOV      r0,#0x1f4             ;207
0001f8  f7fffffe          BL       bsp_DelayMS
                  |L3.508|
;;;291    	{
;;;292    		bsp_Idle();
;;;293    
;;;294    		/* 集中处理显示界面刷新 */
;;;295    		if (fRefresh == 1)
;;;296    		{
;;;297    			fRefresh = 0;
;;;298    			DispStatus();		/* 显示当前状态，频率，音量等 */
;;;299    		}
;;;300    
;;;301    		ucTouch = TOUCH_GetKey(&tpX, &tpY);	/* 读取触摸事件 */
;;;302    		if (ucTouch != TOUCH_NONE)
;;;303    		{
;;;304    			switch (ucTouch)
;;;305    			{
;;;306    				case TOUCH_DOWN:		/* 触笔按下事件 */
;;;307    					if (TOUCH_InRect(tpX, tpY, BUTTON_RET_X, BUTTON_RET_Y, BUTTON_RET_H, BUTTON_RET_W))
;;;308    					{
;;;309    						tBtn.Left = BUTTON_RET_X;
;;;310    						tBtn.Top = BUTTON_RET_Y;
;;;311    						tBtn.Height = BUTTON_RET_H;
;;;312    						tBtn.Width = BUTTON_RET_W;
;;;313    						tBtn.Focus = 1;	/* 焦点 */
;;;314    						tBtn.pCaption = BUTTON_RET_TEXT;
;;;315    						LCD_DrawButton(&tBtn);
;;;316    					}
;;;317    					else if (TOUCH_InRect(tpX, tpY, BUTTON_REC_X, BUTTON_REC_Y, BUTTON_REC_H, BUTTON_REC_W))
;;;318    					{
;;;319    						tBtn.Left = BUTTON_REC_X;
;;;320    						tBtn.Top = BUTTON_REC_Y;
;;;321    						tBtn.Height = BUTTON_REC_H;
;;;322    						tBtn.Width = BUTTON_REC_W;
;;;323    						tBtn.Focus = 1;		/* 焦点 */
;;;324    						tBtn.pCaption = BUTTON_REC_TEXT;
;;;325    						LCD_DrawButton(&tBtn);
;;;326    					}
;;;327    					else if (TOUCH_InRect(tpX, tpY, BUTTON_PLAY_X, BUTTON_PLAY_Y, BUTTON_PLAY_H, BUTTON_PLAY_W))
;;;328    					{
;;;329    						tBtn.Left = BUTTON_PLAY_X;
;;;330    						tBtn.Top = BUTTON_PLAY_Y;
;;;331    						tBtn.Height = BUTTON_PLAY_H;
;;;332    						tBtn.Width = BUTTON_PLAY_W;
;;;333    						tBtn.Focus = 1;		/* 焦点 */
;;;334    						tBtn.pCaption = BUTTON_PLAY_TEXT;
;;;335    						LCD_DrawButton(&tBtn);
;;;336    					}
;;;337    					else if (TOUCH_InRect(tpX, tpY, BUTTON_STOP_X, BUTTON_STOP_Y, BUTTON_STOP_H, BUTTON_STOP_W))
;;;338    					{
;;;339    						tBtn.Left = BUTTON_STOP_X;
;;;340    						tBtn.Top = BUTTON_STOP_Y;
;;;341    						tBtn.Height = BUTTON_STOP_H;
;;;342    						tBtn.Width = BUTTON_STOP_W;
;;;343    						tBtn.Focus = 1;		/* 焦点 */
;;;344    						tBtn.pCaption = BUTTON_STOP_TEXT;
;;;345    						LCD_DrawButton(&tBtn);
;;;346    					}
;;;347    					else if (TOUCH_InRect(tpX, tpY, CHECK_SPK_X, CHECK_SPK_Y, CHECK_SPK_H, CHECK_SPK_W))
;;;348    					{
;;;349    						if (g_tRec.ucSpkOutEn)
;;;350    						{
;;;351    							g_tRec.ucSpkOutEn = 0;
;;;352    							tCheck.Checked = 0;
;;;353    
;;;354    							/* 配置WM8978芯片，输入为AUX接口(收音机)，输出为耳机 */
;;;355    						}
;;;356    						else
;;;357    						{
;;;358    							g_tRec.ucSpkOutEn = 1;
;;;359    							tCheck.Checked = 1;
;;;360    
;;;361    							/* 配置WM8978芯片，输入为AUX接口(收音机)，输出为耳机 和 扬声器 */
;;;362    						}
;;;363    
;;;364    						tCheck.Left = CHECK_SPK_X;
;;;365    						tCheck.Top = CHECK_SPK_Y;
;;;366    						tCheck.Height = CHECK_SPK_H;
;;;367    						tCheck.Width = CHECK_SPK_W;
;;;368    						tCheck.pCaption = CHECK_SPK_TEXT;
;;;369    						LCD_DrawCheckBox(&tCheck);
;;;370    					}
;;;371    					break;
;;;372    
;;;373    				case TOUCH_RELEASE:		/* 触笔释放事件 */
;;;374    					if (TOUCH_InRect(tpX, tpY, BUTTON_RET_X, BUTTON_RET_Y, BUTTON_RET_H, BUTTON_RET_W))
;;;375    					{
;;;376    						tBtn.Font = &tFontBtn;
;;;377    
;;;378    						tBtn.Left = BUTTON_RET_X;
;;;379    						tBtn.Top = BUTTON_RET_Y;
;;;380    						tBtn.Height = BUTTON_RET_H;
;;;381    						tBtn.Width = BUTTON_RET_W;
;;;382    						tBtn.Focus = 1;	/* 焦点 */
;;;383    						tBtn.pCaption = BUTTON_RET_TEXT;
;;;384    						LCD_DrawButton(&tBtn);
;;;385    
;;;386    						fQuit = 1;	/* 返回 */
;;;387    					}
;;;388    					else if (TOUCH_InRect(tpX, tpY, BUTTON_REC_X, BUTTON_REC_Y, BUTTON_REC_H, BUTTON_REC_W))
;;;389    					{
;;;390    						tBtn.Font = &tFontBtn;
;;;391    
;;;392    						tBtn.Left = BUTTON_REC_X;
;;;393    						tBtn.Top = BUTTON_REC_Y;
;;;394    						tBtn.Height = BUTTON_REC_H;
;;;395    						tBtn.Width = BUTTON_REC_W;
;;;396    						tBtn.Focus = 0;		/* 失去焦点 */
;;;397    						tBtn.pCaption = BUTTON_REC_TEXT;
;;;398    						LCD_DrawButton(&tBtn);
;;;399    
;;;400    						StartRecord();	/* 开始录音 */
;;;401    						fRefresh = 1;
;;;402    					}
;;;403    					else if (TOUCH_InRect(tpX, tpY, BUTTON_PLAY_X, BUTTON_PLAY_Y, BUTTON_PLAY_H, BUTTON_PLAY_W))
;;;404    					{
;;;405    						tBtn.Font = &tFontBtn;
;;;406    
;;;407    						tBtn.Left = BUTTON_PLAY_X;
;;;408    						tBtn.Top = BUTTON_PLAY_Y;
;;;409    						tBtn.Height = BUTTON_PLAY_H;
;;;410    						tBtn.Width = BUTTON_PLAY_W;
;;;411    						tBtn.Focus = 0;		/* 失去焦点 */
;;;412    						tBtn.pCaption = BUTTON_PLAY_TEXT;
;;;413    						LCD_DrawButton(&tBtn);
;;;414    
;;;415    						StartPlay();	/* 开始放音 */
;;;416    						fRefresh = 1;
;;;417    					}
;;;418    					else if (TOUCH_InRect(tpX, tpY, BUTTON_STOP_X, BUTTON_STOP_Y, BUTTON_STOP_H, BUTTON_STOP_W))
;;;419    					{
;;;420    						tBtn.Left = BUTTON_STOP_X;
;;;421    						tBtn.Top = BUTTON_STOP_Y;
;;;422    						tBtn.Height = BUTTON_STOP_H;
;;;423    						tBtn.Width = BUTTON_STOP_W;
;;;424    						tBtn.Focus = 0;		/* 失去焦点 */
;;;425    						tBtn.pCaption = BUTTON_STOP_TEXT;
;;;426    						LCD_DrawButton(&tBtn);
;;;427    
;;;428    						StopRec();		/* 停止录音和放音 */
;;;429    						fRefresh = 1;
;;;430    					}
;;;431    					else	/* 按钮失去焦点 */
;;;432    					{
;;;433    						tBtn.Font = &tFontBtn;
;;;434    
;;;435    						tBtn.Focus = 0;		/* 未选中 */
;;;436    
;;;437    						tBtn.Left = BUTTON_RET_X;
;;;438    						tBtn.Top = BUTTON_RET_Y;
;;;439    						tBtn.Height = BUTTON_RET_H;
;;;440    						tBtn.Width = BUTTON_RET_W;
;;;441    						tBtn.pCaption = BUTTON_RET_TEXT;
;;;442    						LCD_DrawButton(&tBtn);
;;;443    
;;;444    						tBtn.Left = BUTTON_REC_X;
;;;445    						tBtn.Top = BUTTON_REC_Y;
;;;446    						tBtn.Height = BUTTON_REC_H;
;;;447    						tBtn.Width = BUTTON_REC_W;
;;;448    						tBtn.pCaption = BUTTON_REC_TEXT;
;;;449    						LCD_DrawButton(&tBtn);
;;;450    
;;;451    						tBtn.Left = BUTTON_PLAY_X;
;;;452    						tBtn.Top = BUTTON_PLAY_Y;
;;;453    						tBtn.Height = BUTTON_PLAY_H;
;;;454    						tBtn.Width = BUTTON_PLAY_W;
;;;455    						tBtn.pCaption = BUTTON_PLAY_TEXT;
;;;456    						LCD_DrawButton(&tBtn);
;;;457    
;;;458    						tBtn.Left = BUTTON_STOP_X;
;;;459    						tBtn.Top = BUTTON_STOP_Y;
;;;460    						tBtn.Height = BUTTON_STOP_H;
;;;461    						tBtn.Width = BUTTON_STOP_W;
;;;462    						tBtn.pCaption = BUTTON_STOP_TEXT;
;;;463    						LCD_DrawButton(&tBtn);
;;;464    					}
;;;465    					break;
;;;466    			}
;;;467    		}
;;;468    
;;;469    		/* 处理按键事件 */
;;;470    		ucKeyCode = bsp_GetKey();
;;;471    		if (ucKeyCode > 0)
;;;472    		{
;;;473    			/* 有键按下 */
;;;474    			switch (ucKeyCode)
;;;475    			{
;;;476    				case KEY_DOWN_K1:		/* K1键切换音频格式，在下次开始录音和放音时有效 */
;;;477    					if (++g_tRec.ucFmtIdx >= FMT_COUNT)
;;;478    					{
;;;479    						g_tRec.ucFmtIdx = 0;
;;;480    					}
;;;481    					fRefresh = 1;
;;;482    					break;
;;;483    
;;;484    				case KEY_DOWN_K2:		/* K2键按下，录音 */
;;;485    					StartRecord();
;;;486    					fRefresh = 1;
;;;487    					break;
;;;488    
;;;489    				case KEY_DOWN_K3:		/* K3键按下，放音 */
;;;490    					StartPlay();
;;;491    					fRefresh = 1;
;;;492    					break;
;;;493    
;;;494    				case JOY_DOWN_U:		/* 摇杆UP键按下 */
;;;495    					if (g_tRec.ucVolume <= VOLUME_MAX - VOLUME_STEP)
;;;496    					{
;;;497    						g_tRec.ucVolume += VOLUME_STEP;
;;;498    						wm8978_SetEarVolume(g_tRec.ucVolume);
;;;499    						wm8978_SetSpkVolume(g_tRec.ucVolume);
;;;500    						fRefresh = 1;
;;;501    					}
;;;502    					break;
;;;503    
;;;504    				case JOY_DOWN_D:		/* 摇杆DOWN键按下 */
;;;505    					if (g_tRec.ucVolume >= VOLUME_STEP)
;;;506    					{
;;;507    						g_tRec.ucVolume -= VOLUME_STEP;
;;;508    						wm8978_SetEarVolume(g_tRec.ucVolume);
;;;509    						wm8978_SetSpkVolume(g_tRec.ucVolume);
;;;510    						fRefresh = 1;
;;;511    					}
;;;512    					break;
;;;513    
;;;514    				case JOY_DOWN_L:		/* 摇杆LEFT键按下 */
;;;515    					if (g_tRec.ucMicGain >= GAIN_STEP)
;;;516    					{
;;;517    						g_tRec.ucMicGain -= GAIN_STEP;
;;;518    						wm8978_SetMicGain(g_tRec.ucMicGain);
;;;519    						fRefresh = 1;
;;;520    					}
;;;521    					break;
;;;522    
;;;523    				case JOY_DOWN_R:	/* 摇杆RIGHT键按下 */
;;;524    					if (g_tRec.ucMicGain <= GAIN_MAX - GAIN_STEP)
;;;525    					{
;;;526    						g_tRec.ucMicGain += GAIN_STEP;
;;;527    						wm8978_SetMicGain(g_tRec.ucMicGain);
;;;528    						fRefresh = 1;
;;;529    					}
;;;530    					break;
;;;531    
;;;532    				case JOY_DOWN_OK:		/* 摇杆OK键按下 */
;;;533    					StopRec();		/* 停止录音和放音 */
;;;534    					fRefresh = 1;
;;;535    					break;
;;;536    
;;;537    				default:
;;;538    					break;
;;;539    			}
;;;540    		}
;;;541    	}
;;;542    
;;;543    	StopRec();		/* 停止录音和放音 */
;;;544    }
0001fc  b03d              ADD      sp,sp,#0xf4
0001fe  e8bd8ff0          POP      {r4-r11,pc}
                  |L3.514|
000202  f88d50c4          STRB     r5,[sp,#0xc4]         ;256
000206  e7cd              B        |L3.420|
                  |L3.520|
000208  f7fffffe          BL       bsp_Idle
00020c  2e01              CMP      r6,#1                 ;295
00020e  d002              BEQ      |L3.534|
000210  e004              B        |L3.540|
                  |L3.530|
000212  f7fffffe          BL       bsp_Idle
                  |L3.534|
000216  2600              MOVS     r6,#0                 ;297
000218  f7fffffe          BL       DispStatus
                  |L3.540|
00021c  a929              ADD      r1,sp,#0xa4           ;301
00021e  a838              ADD      r0,sp,#0xe0           ;301
000220  f7fffffe          BL       TOUCH_GetKey
000224  2800              CMP      r0,#0                 ;302
000226  d049              BEQ      |L3.700|
000228  2801              CMP      r0,#1                 ;304
00022a  d002              BEQ      |L3.562|
00022c  2803              CMP      r0,#3                 ;304
00022e  d145              BNE      |L3.700|
000230  e0aa              B        |L3.904|
                  |L3.562|
000232  e9cd8b00          STRD     r8,r11,[sp,#0]        ;304
000236  f8ba0000          LDRH     r0,[r10,#0]           ;307  ; g_LcdHeight
00023a  3824              SUBS     r0,r0,#0x24           ;307
00023c  b283              UXTH     r3,r0                 ;307
00023e  f8b90000          LDRH     r0,[r9,#0]            ;307  ; g_LcdWidth
000242  3840              SUBS     r0,r0,#0x40           ;307
000244  b282              UXTH     r2,r0                 ;307
000246  f8bd00a4          LDRH     r0,[sp,#0xa4]         ;307
00024a  b281              UXTH     r1,r0                 ;307
00024c  f8bd00e0          LDRH     r0,[sp,#0xe0]         ;307
000250  b280              UXTH     r0,r0                 ;307
000252  f7fffffe          BL       TOUCH_InRect
000256  b188              CBZ      r0,|L3.636|
000258  f8b90000          LDRH     r0,[r9,#0]            ;309  ; g_LcdWidth
00025c  3840              SUBS     r0,r0,#0x40           ;309
00025e  f8ad000a          STRH     r0,[sp,#0xa]          ;309
000262  f8ba0000          LDRH     r0,[r10,#0]           ;310  ; g_LcdHeight
000266  f8adb010          STRH     r11,[sp,#0x10]        ;312
00026a  3824              SUBS     r0,r0,#0x24           ;310
00026c  f8ad000c          STRH     r0,[sp,#0xc]          ;310
000270  f8ad800e          STRH     r8,[sp,#0xe]          ;311
000274  f88d501c          STRB     r5,[sp,#0x1c]         ;313
000278  a08e              ADR      r0,|L3.1204|
00027a  e01b              B        |L3.692|
                  |L3.636|
00027c  204a              MOVS     r0,#0x4a              ;317
00027e  e9cd8000          STRD     r8,r0,[sp,#0]         ;317
000282  f8bd00a4          LDRH     r0,[sp,#0xa4]         ;317
000286  23b4              MOVS     r3,#0xb4              ;317
000288  b281              UXTH     r1,r0                 ;317
00028a  f8bd00e0          LDRH     r0,[sp,#0xe0]         ;317
00028e  2205              MOVS     r2,#5                 ;317
000290  b280              UXTH     r0,r0                 ;317
000292  f7fffffe          BL       TOUCH_InRect
000296  b190              CBZ      r0,|L3.702|
000298  2005              MOVS     r0,#5                 ;319
00029a  f8ad000a          STRH     r0,[sp,#0xa]          ;319
00029e  20b4              MOVS     r0,#0xb4              ;320
0002a0  f8ad000c          STRH     r0,[sp,#0xc]          ;320
0002a4  204a              MOVS     r0,#0x4a              ;322
0002a6  f8ad0010          STRH     r0,[sp,#0x10]         ;322
0002aa  f8ad800e          STRH     r8,[sp,#0xe]          ;321
0002ae  f88d501c          STRB     r5,[sp,#0x1c]         ;323
0002b2  a082              ADR      r0,|L3.1212|
                  |L3.692|
0002b4  9006              STR      r0,[sp,#0x18]         ;315
0002b6  a802              ADD      r0,sp,#8              ;315
0002b8  f7fffffe          BL       LCD_DrawButton
                  |L3.700|
0002bc  e147              B        |L3.1358|
                  |L3.702|
0002be  204a              MOVS     r0,#0x4a              ;327
0002c0  e9cd8000          STRD     r8,r0,[sp,#0]         ;327
0002c4  f8bd00a4          LDRH     r0,[sp,#0xa4]         ;327
0002c8  23b4              MOVS     r3,#0xb4              ;327
0002ca  b281              UXTH     r1,r0                 ;327
0002cc  f8bd00e0          LDRH     r0,[sp,#0xe0]         ;327
0002d0  2259              MOVS     r2,#0x59              ;327
0002d2  b280              UXTH     r0,r0                 ;327
0002d4  f7fffffe          BL       TOUCH_InRect
0002d8  b170              CBZ      r0,|L3.760|
0002da  2059              MOVS     r0,#0x59              ;329
0002dc  f8ad000a          STRH     r0,[sp,#0xa]          ;329
0002e0  20b4              MOVS     r0,#0xb4              ;330
0002e2  f8ad000c          STRH     r0,[sp,#0xc]          ;330
0002e6  204a              MOVS     r0,#0x4a              ;332
0002e8  f8ad0010          STRH     r0,[sp,#0x10]         ;332
0002ec  f8ad800e          STRH     r8,[sp,#0xe]          ;331
0002f0  f88d501c          STRB     r5,[sp,#0x1c]         ;333
0002f4  a074              ADR      r0,|L3.1224|
0002f6  e7dd              B        |L3.692|
                  |L3.760|
0002f8  204a              MOVS     r0,#0x4a              ;337
0002fa  e9cd8000          STRD     r8,r0,[sp,#0]         ;337
0002fe  f8bd00a4          LDRH     r0,[sp,#0xa4]         ;337
000302  23b4              MOVS     r3,#0xb4              ;337
000304  b281              UXTH     r1,r0                 ;337
000306  f8bd00e0          LDRH     r0,[sp,#0xe0]         ;337
00030a  22ad              MOVS     r2,#0xad              ;337
00030c  b280              UXTH     r0,r0                 ;337
00030e  f7fffffe          BL       TOUCH_InRect
000312  b168              CBZ      r0,|L3.816|
000314  20ad              MOVS     r0,#0xad              ;339
000316  f8ad000a          STRH     r0,[sp,#0xa]          ;339
00031a  20b4              MOVS     r0,#0xb4              ;340
00031c  f8ad000c          STRH     r0,[sp,#0xc]          ;340
000320  204a              MOVS     r0,#0x4a              ;342
000322  f8ad800e          STRH     r8,[sp,#0xe]          ;341
000326  f8ad0010          STRH     r0,[sp,#0x10]         ;342
00032a  f88d501c          STRB     r5,[sp,#0x1c]         ;343
00032e  e189              B        |L3.1604|
                  |L3.816|
000330  2168              MOVS     r1,#0x68              ;347
000332  2018              MOVS     r0,#0x18              ;347
000334  e9cd0100          STRD     r0,r1,[sp,#0]         ;347
000338  f8bd00a4          LDRH     r0,[sp,#0xa4]         ;347
00033c  23d9              MOVS     r3,#0xd9              ;347
00033e  b281              UXTH     r1,r0                 ;347
000340  f8bd00e0          LDRH     r0,[sp,#0xe0]         ;347
000344  2205              MOVS     r2,#5                 ;347
000346  b280              UXTH     r0,r0                 ;347
000348  f7fffffe          BL       TOUCH_InRect
00034c  2800              CMP      r0,#0                 ;347
00034e  d01a              BEQ      |L3.902|
000350  7b20              LDRB     r0,[r4,#0xc]          ;349  ; g_tRec
000352  b120              CBZ      r0,|L3.862|
000354  2000              MOVS     r0,#0                 ;351
000356  7320              STRB     r0,[r4,#0xc]          ;351
000358  f88d00c4          STRB     r0,[sp,#0xc4]         ;352
00035c  e002              B        |L3.868|
                  |L3.862|
00035e  7325              STRB     r5,[r4,#0xc]          ;358
000360  f88d50c4          STRB     r5,[sp,#0xc4]         ;359
                  |L3.868|
000364  2005              MOVS     r0,#5                 ;364
000366  f8ad00b2          STRH     r0,[sp,#0xb2]         ;364
00036a  20d9              MOVS     r0,#0xd9              ;365
00036c  f8ad00b4          STRH     r0,[sp,#0xb4]         ;365
000370  2018              MOVS     r0,#0x18              ;366
000372  f8ad00b6          STRH     r0,[sp,#0xb6]         ;366
000376  2068              MOVS     r0,#0x68              ;367
000378  f8ad00b8          STRH     r0,[sp,#0xb8]         ;367
00037c  a058              ADR      r0,|L3.1248|
00037e  9030              STR      r0,[sp,#0xc0]         ;369
000380  a82c              ADD      r0,sp,#0xb0           ;369
000382  f7fffffe          BL       LCD_DrawCheckBox
                  |L3.902|
000386  e0e2              B        |L3.1358|
                  |L3.904|
000388  e9cd8b00          STRD     r8,r11,[sp,#0]        ;369
00038c  f8ba0000          LDRH     r0,[r10,#0]           ;374  ; g_LcdHeight
000390  3824              SUBS     r0,r0,#0x24           ;374
000392  b283              UXTH     r3,r0                 ;374
000394  f8b90000          LDRH     r0,[r9,#0]            ;374  ; g_LcdWidth
000398  3840              SUBS     r0,r0,#0x40           ;374
00039a  b282              UXTH     r2,r0                 ;374
00039c  f8bd00a4          LDRH     r0,[sp,#0xa4]         ;374
0003a0  b281              UXTH     r1,r0                 ;374
0003a2  f8bd00e0          LDRH     r0,[sp,#0xe0]         ;374
0003a6  b280              UXTH     r0,r0                 ;374
0003a8  f7fffffe          BL       TOUCH_InRect
0003ac  b1c0              CBZ      r0,|L3.992|
0003ae  a832              ADD      r0,sp,#0xc8           ;376
0003b0  9005              STR      r0,[sp,#0x14]         ;378
0003b2  f8b90000          LDRH     r0,[r9,#0]            ;378  ; g_LcdWidth
0003b6  3840              SUBS     r0,r0,#0x40           ;378
0003b8  f8ad000a          STRH     r0,[sp,#0xa]          ;378
0003bc  f8ba0000          LDRH     r0,[r10,#0]           ;379  ; g_LcdHeight
0003c0  f8adb010          STRH     r11,[sp,#0x10]        ;381
0003c4  3824              SUBS     r0,r0,#0x24           ;379
0003c6  f8ad000c          STRH     r0,[sp,#0xc]          ;379
0003ca  a03a              ADR      r0,|L3.1204|
0003cc  9006              STR      r0,[sp,#0x18]         ;384
0003ce  f8ad800e          STRH     r8,[sp,#0xe]          ;380
0003d2  f88d501c          STRB     r5,[sp,#0x1c]         ;382
0003d6  a802              ADD      r0,sp,#8              ;384
0003d8  f7fffffe          BL       LCD_DrawButton
0003dc  2701              MOVS     r7,#1                 ;386
0003de  e0b6              B        |L3.1358|
                  |L3.992|
0003e0  214a              MOVS     r1,#0x4a              ;388
0003e2  e9cd8100          STRD     r8,r1,[sp,#0]         ;388
0003e6  f8bd00a4          LDRH     r0,[sp,#0xa4]         ;388
0003ea  23b4              MOVS     r3,#0xb4              ;388
0003ec  b281              UXTH     r1,r0                 ;388
0003ee  f8bd00e0          LDRH     r0,[sp,#0xe0]         ;388
0003f2  2205              MOVS     r2,#5                 ;388
0003f4  b280              UXTH     r0,r0                 ;388
0003f6  f7fffffe          BL       TOUCH_InRect
0003fa  b1b8              CBZ      r0,|L3.1068|
0003fc  a832              ADD      r0,sp,#0xc8           ;390
0003fe  9005              STR      r0,[sp,#0x14]         ;392
000400  2005              MOVS     r0,#5                 ;392
000402  f8ad000a          STRH     r0,[sp,#0xa]          ;392
000406  20b4              MOVS     r0,#0xb4              ;393
000408  f8ad000c          STRH     r0,[sp,#0xc]          ;393
00040c  204a              MOVS     r0,#0x4a              ;395
00040e  f8ad0010          STRH     r0,[sp,#0x10]         ;395
000412  2000              MOVS     r0,#0                 ;396
000414  f88d001c          STRB     r0,[sp,#0x1c]         ;396
000418  a028              ADR      r0,|L3.1212|
00041a  9006              STR      r0,[sp,#0x18]         ;398
00041c  f8ad800e          STRH     r8,[sp,#0xe]          ;394
000420  a802              ADD      r0,sp,#8              ;398
000422  f7fffffe          BL       LCD_DrawButton
000426  f7fffffe          BL       StartRecord
00042a  e08f              B        |L3.1356|
                  |L3.1068|
00042c  e068              B        |L3.1280|
00042e  0000              DCW      0x0000
                  |L3.1072|
000430  574d3839          DCB      "WM8978",194,188,210,244,187,250,0
000434  3738c2bc
000438  d2f4bbfa
00043c  00      
00043d  00                DCB      0
00043e  00                DCB      0
00043f  00                DCB      0
                  |L3.1088|
000440  574d3839          DCB      "WM8978 Err (0x%02X)",0
000444  37382045
000448  72722028
00044c  30782530
000450  32582900
                  |L3.1108|
000454  d2a1b8cb          DCB      210,161,184,203,201,207,"/",207,194,188,252," = ",181,247
000458  c9cf2fcf
00045c  c2bcfc20
000460  3d20b5f7
000464  bddab6fa          DCB      189,218,182,250,187,250,210,244,193,191,0
000468  bbfad2f4
00046c  c1bf00  
00046f  00                DCB      0
                  |L3.1136|
000470  d2a1b8cb          DCB      210,161,184,203,215,243,"/",211,210,188,252," = ",181,247
000474  d7f32fd3
000478  d2bcfc20
00047c  3d20b5f7
000480  bddac2f3          DCB      189,218,194,243,191,203,183,231,212,246,210,230,0
000484  bfcbb7e7
000488  d4f6d2e6
00048c  00      
00048d  00                DCB      0
00048e  00                DCB      0
00048f  00                DCB      0
                  |L3.1168|
000490  4b31bcfc          DCB      "K1",188,252,"       = ",209,161,212,241,210,244,198,181
000494  20202020
000498  2020203d
00049c  20d1a1d4
0004a0  f1d2f4c6
0004a4  b5      
0004a5  b8f1cabd          DCB      184,241,202,189,0
0004a9  00      
0004aa  00                DCB      0
0004ab  00                DCB      0
                  |L3.1196|
                          DCD      g_LcdWidth
                  |L3.1200|
                          DCD      g_LcdHeight
                  |L3.1204|
0004b4  b7b5bbd8          DCB      183,181,187,216,0
0004b8  00      
0004b9  00                DCB      0
0004ba  00                DCB      0
0004bb  00                DCB      0
                  |L3.1212|
0004bc  bfaacabc          DCB      191,170,202,188,194,188,210,244,0
0004c0  c2bcd2f4
0004c4  00      
0004c5  00                DCB      0
0004c6  00                DCB      0
0004c7  00                DCB      0
                  |L3.1224|
0004c8  bfaacabc          DCB      191,170,202,188,183,197,210,244,0
0004cc  b7c5d2f4
0004d0  00      
0004d1  00                DCB      0
0004d2  00                DCB      0
0004d3  00                DCB      0
                  |L3.1236|
0004d4  cda3d6b9          DCB      205,163,214,185,0
0004d8  00      
0004d9  00                DCB      0
0004da  00                DCB      0
0004db  00                DCB      0
                  |L3.1244|
                          DCD      ||.bss||
                  |L3.1248|
0004e0  b4f2bfaa          DCB      180,242,191,170,209,239,201,249,198,247,0
0004e4  d1efc9f9
0004e8  c6f700  
0004eb  00                DCB      0
                  |L3.1260|
0004ec  574d3839          DCB      "WM8978 Ok (0x%02X)",0
0004f0  3738204f
0004f4  6b202830
0004f8  78253032
0004fc  582900  
0004ff  00                DCB      0
                  |L3.1280|
000500  204a              MOVS     r0,#0x4a              ;403
000502  e9cd8000          STRD     r8,r0,[sp,#0]         ;403
000506  f8bd00a4          LDRH     r0,[sp,#0xa4]         ;403
00050a  23b4              MOVS     r3,#0xb4              ;403
00050c  b281              UXTH     r1,r0                 ;403
00050e  f8bd00e0          LDRH     r0,[sp,#0xe0]         ;403
000512  2259              MOVS     r2,#0x59              ;403
000514  b280              UXTH     r0,r0                 ;403
000516  f7fffffe          BL       TOUCH_InRect
00051a  b340              CBZ      r0,|L3.1390|
00051c  a832              ADD      r0,sp,#0xc8           ;405
00051e  9005              STR      r0,[sp,#0x14]         ;407
000520  2059              MOVS     r0,#0x59              ;407
000522  f8ad000a          STRH     r0,[sp,#0xa]          ;407
000526  20b4              MOVS     r0,#0xb4              ;408
000528  f8ad000c          STRH     r0,[sp,#0xc]          ;408
00052c  204a              MOVS     r0,#0x4a              ;410
00052e  f8ad0010          STRH     r0,[sp,#0x10]         ;410
000532  2000              MOVS     r0,#0                 ;411
000534  f8ad800e          STRH     r8,[sp,#0xe]          ;409
000538  f88d001c          STRB     r0,[sp,#0x1c]         ;411
00053c  f2af0078          ADR      r0,|L3.1224|
000540  9006              STR      r0,[sp,#0x18]         ;413
000542  a802              ADD      r0,sp,#8              ;413
000544  f7fffffe          BL       LCD_DrawButton
000548  f7fffffe          BL       StartPlay
                  |L3.1356|
00054c  2601              MOVS     r6,#1                 ;401
                  |L3.1358|
00054e  f7fffffe          BL       bsp_GetKey
000552  2800              CMP      r0,#0                 ;471
000554  d079              BEQ      |L3.1610|
000556  280d              CMP      r0,#0xd               ;474
000558  d078              BEQ      |L3.1612|
00055a  dc7c              BGT      |L3.1622|
00055c  2801              CMP      r0,#1                 ;474
00055e  d077              BEQ      |L3.1616|
000560  2804              CMP      r0,#4                 ;474
000562  d076              BEQ      |L3.1618|
000564  2807              CMP      r0,#7                 ;474
000566  d075              BEQ      |L3.1620|
000568  280a              CMP      r0,#0xa               ;474
00056a  d16e              BNE      |L3.1610|
00056c  e089              B        |L3.1666|
                  |L3.1390|
00056e  204a              MOVS     r0,#0x4a              ;418
000570  e9cd8000          STRD     r8,r0,[sp,#0]         ;418
000574  f8bd00a4          LDRH     r0,[sp,#0xa4]         ;418
000578  23b4              MOVS     r3,#0xb4              ;418
00057a  b281              UXTH     r1,r0                 ;418
00057c  f8bd00e0          LDRH     r0,[sp,#0xe0]         ;418
000580  22ad              MOVS     r2,#0xad              ;418
000582  b280              UXTH     r0,r0                 ;418
000584  f7fffffe          BL       TOUCH_InRect
000588  b1b0              CBZ      r0,|L3.1464|
00058a  20ad              MOVS     r0,#0xad              ;420
00058c  f8ad000a          STRH     r0,[sp,#0xa]          ;420
000590  20b4              MOVS     r0,#0xb4              ;421
000592  f8ad000c          STRH     r0,[sp,#0xc]          ;421
000596  204a              MOVS     r0,#0x4a              ;423
000598  f8ad0010          STRH     r0,[sp,#0x10]         ;423
00059c  2000              MOVS     r0,#0                 ;424
00059e  f8ad800e          STRH     r8,[sp,#0xe]          ;422
0005a2  f88d001c          STRB     r0,[sp,#0x1c]         ;424
0005a6  f2af00d4          ADR      r0,|L3.1236|
0005aa  9006              STR      r0,[sp,#0x18]         ;426
0005ac  a802              ADD      r0,sp,#8              ;426
0005ae  f7fffffe          BL       LCD_DrawButton
0005b2  f7fffffe          BL       StopRec
0005b6  e7c9              B        |L3.1356|
                  |L3.1464|
0005b8  a832              ADD      r0,sp,#0xc8           ;433
0005ba  9005              STR      r0,[sp,#0x14]         ;435
0005bc  2000              MOVS     r0,#0                 ;435
0005be  f88d001c          STRB     r0,[sp,#0x1c]         ;435
0005c2  f8b90000          LDRH     r0,[r9,#0]            ;437  ; g_LcdWidth
0005c6  3840              SUBS     r0,r0,#0x40           ;437
0005c8  f8ad000a          STRH     r0,[sp,#0xa]          ;437
0005cc  f8ba0000          LDRH     r0,[r10,#0]           ;438  ; g_LcdHeight
0005d0  f8adb010          STRH     r11,[sp,#0x10]        ;440
0005d4  3824              SUBS     r0,r0,#0x24           ;438
0005d6  f8ad000c          STRH     r0,[sp,#0xc]          ;438
0005da  f8ad800e          STRH     r8,[sp,#0xe]          ;439
0005de  f2af102c          ADR      r0,|L3.1204|
0005e2  9006              STR      r0,[sp,#0x18]         ;442
0005e4  a802              ADD      r0,sp,#8              ;442
0005e6  f7fffffe          BL       LCD_DrawButton
0005ea  2005              MOVS     r0,#5                 ;444
0005ec  f8ad000a          STRH     r0,[sp,#0xa]          ;444
0005f0  20b4              MOVS     r0,#0xb4              ;445
0005f2  f8ad000c          STRH     r0,[sp,#0xc]          ;445
0005f6  204a              MOVS     r0,#0x4a              ;447
0005f8  f8ad800e          STRH     r8,[sp,#0xe]          ;446
0005fc  f8ad0010          STRH     r0,[sp,#0x10]         ;447
000600  f2af1048          ADR      r0,|L3.1212|
000604  9006              STR      r0,[sp,#0x18]         ;449
000606  a802              ADD      r0,sp,#8              ;449
000608  f7fffffe          BL       LCD_DrawButton
00060c  2059              MOVS     r0,#0x59              ;451
00060e  f8ad000a          STRH     r0,[sp,#0xa]          ;451
000612  20b4              MOVS     r0,#0xb4              ;452
000614  f8ad000c          STRH     r0,[sp,#0xc]          ;452
000618  204a              MOVS     r0,#0x4a              ;454
00061a  f8ad800e          STRH     r8,[sp,#0xe]          ;453
00061e  f8ad0010          STRH     r0,[sp,#0x10]         ;454
000622  f2af105c          ADR      r0,|L3.1224|
000626  9006              STR      r0,[sp,#0x18]         ;456
000628  a802              ADD      r0,sp,#8              ;456
00062a  f7fffffe          BL       LCD_DrawButton
00062e  20ad              MOVS     r0,#0xad              ;458
000630  f8ad000a          STRH     r0,[sp,#0xa]          ;458
000634  20b4              MOVS     r0,#0xb4              ;459
000636  f8ad000c          STRH     r0,[sp,#0xc]          ;459
00063a  204a              MOVS     r0,#0x4a              ;461
00063c  f8ad800e          STRH     r8,[sp,#0xe]          ;460
000640  f8ad0010          STRH     r0,[sp,#0x10]         ;461
                  |L3.1604|
000644  f2af1074          ADR      r0,|L3.1236|
000648  e634              B        |L3.692|
                  |L3.1610|
00064a  e041              B        |L3.1744|
                  |L3.1612|
00064c  e01f              B        |L3.1678|
00064e  e002              B        |L3.1622|
                  |L3.1616|
000650  e008              B        |L3.1636|
                  |L3.1618|
000652  e010              B        |L3.1654|
                  |L3.1620|
000654  e012              B        |L3.1660|
                  |L3.1622|
000656  2810              CMP      r0,#0x10              ;474
000658  d025              BEQ      |L3.1702|
00065a  2813              CMP      r0,#0x13              ;474
00065c  d028              BEQ      |L3.1712|
00065e  2816              CMP      r0,#0x16              ;474
000660  d136              BNE      |L3.1744|
000662  e032              B        |L3.1738|
                  |L3.1636|
000664  7820              LDRB     r0,[r4,#0]            ;477  ; g_tRec
000666  1c40              ADDS     r0,r0,#1              ;477
000668  b2c0              UXTB     r0,r0                 ;477
00066a  7020              STRB     r0,[r4,#0]            ;477
00066c  2806              CMP      r0,#6                 ;477
00066e  d328              BCC      |L3.1730|
000670  2000              MOVS     r0,#0                 ;479
000672  7020              STRB     r0,[r4,#0]            ;479
000674  e025              B        |L3.1730|
                  |L3.1654|
000676  f7fffffe          BL       StartRecord
00067a  e022              B        |L3.1730|
                  |L3.1660|
00067c  f7fffffe          BL       StartPlay
000680  e01f              B        |L3.1730|
                  |L3.1666|
000682  7860              LDRB     r0,[r4,#1]            ;495  ; g_tRec
000684  283e              CMP      r0,#0x3e              ;495
000686  d823              BHI      |L3.1744|
000688  b2c0              UXTB     r0,r0                 ;497
00068a  1c40              ADDS     r0,r0,#1              ;497
00068c  e003              B        |L3.1686|
                  |L3.1678|
00068e  7860              LDRB     r0,[r4,#1]            ;505  ; g_tRec
000690  b1f0              CBZ      r0,|L3.1744|
000692  b2c0              UXTB     r0,r0                 ;507
000694  1e40              SUBS     r0,r0,#1              ;507
                  |L3.1686|
000696  b2c0              UXTB     r0,r0                 ;497
000698  7060              STRB     r0,[r4,#1]            ;497
00069a  f7fffffe          BL       wm8978_SetEarVolume
00069e  7860              LDRB     r0,[r4,#1]            ;499  ; g_tRec
0006a0  f7fffffe          BL       wm8978_SetSpkVolume
0006a4  e00d              B        |L3.1730|
                  |L3.1702|
0006a6  78a0              LDRB     r0,[r4,#2]            ;515  ; g_tRec
0006a8  b190              CBZ      r0,|L3.1744|
0006aa  b2c0              UXTB     r0,r0                 ;517
0006ac  1e40              SUBS     r0,r0,#1              ;517
0006ae  e004              B        |L3.1722|
                  |L3.1712|
0006b0  78a0              LDRB     r0,[r4,#2]            ;524  ; g_tRec
0006b2  283e              CMP      r0,#0x3e              ;524
0006b4  d80c              BHI      |L3.1744|
0006b6  b2c0              UXTB     r0,r0                 ;526
0006b8  1c40              ADDS     r0,r0,#1              ;526
                  |L3.1722|
0006ba  b2c0              UXTB     r0,r0                 ;517
0006bc  70a0              STRB     r0,[r4,#2]            ;517
0006be  f7fffffe          BL       wm8978_SetMicGain
                  |L3.1730|
0006c2  2f00              CMP      r7,#0                 ;518
0006c4  f43fad8a          BEQ      |L3.476|
0006c8  e005              B        |L3.1750|
                  |L3.1738|
0006ca  f7fffffe          BL       StopRec
0006ce  e7f8              B        |L3.1730|
                  |L3.1744|
0006d0  2f00              CMP      r7,#0                 ;290
0006d2  f43fad99          BEQ      |L3.520|
                  |L3.1750|
0006d6  f7fffffe          BL       StopRec
0006da  e58f              B        |L3.508|
;;;545    
                          ENDP


                          AREA ||i.SPI2_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI2_IRQHandler PROC
;;;796    */
;;;797    void SPI2_IRQHandler(void)
000000  f7ffbffe          B.W      I2S_CODEC_DataTransfer
;;;798    {
;;;799    	I2S_CODEC_DataTransfer();
;;;800    }
;;;801    
                          ENDP


                          AREA ||i.StartPlay||, CODE, READONLY, ALIGN=2

                  StartPlay PROC
;;;553    */
;;;554    static void StartPlay(void)
000000  b510              PUSH     {r4,lr}
;;;555    {
;;;556    	/* 如果已经再录音和放音状态，则需要先停止再开启 */
;;;557    	g_tRec.ucStatus = STA_STOP_I2S;
000002  4c17              LDR      r4,|L5.96|
000004  2003              MOVS     r0,#3
000006  7360              STRB     r0,[r4,#0xd]
;;;558    	bsp_DelayMS(10);	/* 延迟一段时间，等待I2S中断结束 */
000008  200a              MOVS     r0,#0xa
00000a  f7fffffe          BL       bsp_DelayMS
;;;559    	wm8978_Init();		/* 复位WM8978到复位状态 */
00000e  f7fffffe          BL       wm8978_Init
;;;560    	I2S_Stop();			/* 停止I2S录音和放音 */
000012  f7fffffe          BL       I2S_Stop
;;;561    
;;;562    	g_tRec.ucStatus = STA_PLAYING;		/* 放音状态 */
000016  2002              MOVS     r0,#2
000018  7360              STRB     r0,[r4,#0xd]
;;;563    
;;;564    	g_tRec.uiCursor = 0;		/* 数据指针复位为0，从头开始放音 */
00001a  2000              MOVS     r0,#0
;;;565    
;;;566    	/* 配置WM8978芯片，输入为DAC，输出为耳机 */
;;;567    	wm8978_CfgAudioPath(DAC_ON, EAR_LEFT_ON | EAR_RIGHT_ON | SPK_ON);
00001c  60a0              STR      r0,[r4,#8]  ; g_tRec
00001e  2107              MOVS     r1,#7
000020  2010              MOVS     r0,#0x10
000022  f7fffffe          BL       wm8978_CfgAudioPath
;;;568    
;;;569    	/* 调节音量，左右相同音量 */
;;;570    	wm8978_SetEarVolume(g_tRec.ucVolume);
000026  7860              LDRB     r0,[r4,#1]  ; g_tRec
000028  f7fffffe          BL       wm8978_SetEarVolume
;;;571    	wm8978_SetSpkVolume(g_tRec.ucVolume);
00002c  7860              LDRB     r0,[r4,#1]  ; g_tRec
00002e  f7fffffe          BL       wm8978_SetSpkVolume
;;;572    
;;;573    	/* 配置WM8978音频接口为飞利浦标准I2S接口，16bit */ 
;;;574    	wm8978_CfgAudioIF(I2S_Standard_Phillips, 16, I2S_Mode_MasterTx);
000032  f44f7200          MOV      r2,#0x200
000036  2110              MOVS     r1,#0x10
000038  2000              MOVS     r0,#0
00003a  f7fffffe          BL       wm8978_CfgAudioIF
;;;575    
;;;576    	/* 配置STM32的I2S音频接口(比如飞利浦标准I2S接口，16bit， 8K采样率), 开始放音*/
;;;577    	I2S_StartPlay(g_FmtList[g_tRec.ucFmtIdx][0], g_FmtList[g_tRec.ucFmtIdx][1], g_FmtList[g_tRec.ucFmtIdx][2]);
00003e  7820              LDRB     r0,[r4,#0]  ; g_tRec
000040  eb000340          ADD      r3,r0,r0,LSL #1
000044  4807              LDR      r0,|L5.100|
000046  eb000183          ADD      r1,r0,r3,LSL #2
00004a  f8300023          LDRH     r0,[r0,r3,LSL #2]
00004e  688a              LDR      r2,[r1,#8]
000050  8889              LDRH     r1,[r1,#4]
000052  e8bd4010          POP      {r4,lr}
000056  b289              UXTH     r1,r1
000058  b280              UXTH     r0,r0
00005a  f7ffbffe          B.W      I2S_StartPlay
;;;578    }
;;;579    
                          ENDP

00005e  0000              DCW      0x0000
                  |L5.96|
                          DCD      ||.bss||
                  |L5.100|
                          DCD      ||.data||

                          AREA ||i.StartRecord||, CODE, READONLY, ALIGN=2

                  StartRecord PROC
;;;587    */
;;;588    static void StartRecord(void)
000000  b510              PUSH     {r4,lr}
;;;589    {
;;;590    	/* 如果已经再录音和放音状态，则需要先停止再开启 */
;;;591    	g_tRec.ucStatus = STA_STOP_I2S;
000002  4c17              LDR      r4,|L6.96|
000004  2003              MOVS     r0,#3
000006  7360              STRB     r0,[r4,#0xd]
;;;592    	bsp_DelayMS(10);	/* 延迟一段时间，等待I2S中断结束 */
000008  200a              MOVS     r0,#0xa
00000a  f7fffffe          BL       bsp_DelayMS
;;;593    	wm8978_Init();		/* 复位WM8978到复位状态 */
00000e  f7fffffe          BL       wm8978_Init
;;;594    	I2S_Stop();			/* 停止I2S录音和放音 */
000012  f7fffffe          BL       I2S_Stop
;;;595    
;;;596    	g_tRec.ucStatus = STA_RECORDING;		/* 录音状态 */
000016  2001              MOVS     r0,#1
000018  7360              STRB     r0,[r4,#0xd]
;;;597    
;;;598    	g_tRec.uiCursor = 0;	/* 数据指针复位为0，从头开始录音 */
00001a  2000              MOVS     r0,#0
;;;599    
;;;600    	/* 配置WM8978芯片，输入为Mic，输出为耳机 */
;;;601    	//wm8978_CfgAudioPath(MIC_LEFT_ON | ADC_ON, EAR_LEFT_ON | EAR_RIGHT_ON);
;;;602    	//wm8978_CfgAudioPath(MIC_RIGHT_ON | ADC_ON, EAR_LEFT_ON | EAR_RIGHT_ON);
;;;603    	wm8978_CfgAudioPath(MIC_LEFT_ON | MIC_RIGHT_ON | ADC_ON, EAR_LEFT_ON | EAR_RIGHT_ON);
00001c  60a0              STR      r0,[r4,#8]  ; g_tRec
00001e  2103              MOVS     r1,#3
000020  2023              MOVS     r0,#0x23
000022  f7fffffe          BL       wm8978_CfgAudioPath
;;;604    
;;;605    	/* 调节放音音量，左右相同音量 */
;;;606    	wm8978_SetEarVolume(g_tRec.ucVolume);
000026  7860              LDRB     r0,[r4,#1]  ; g_tRec
000028  f7fffffe          BL       wm8978_SetEarVolume
;;;607    
;;;608    	/* 设置MIC通道增益 */
;;;609    	wm8978_SetMicGain(g_tRec.ucMicGain);
00002c  78a0              LDRB     r0,[r4,#2]  ; g_tRec
00002e  f7fffffe          BL       wm8978_SetMicGain
;;;610    
;;;611    	/* 配置WM8978音频接口为飞利浦标准I2S接口，16bit */
;;;612    	wm8978_CfgAudioIF(I2S_Standard_Phillips, 16, I2S_Mode_MasterRx);
000032  f44f7240          MOV      r2,#0x300
000036  2110              MOVS     r1,#0x10
000038  2000              MOVS     r0,#0
00003a  f7fffffe          BL       wm8978_CfgAudioIF
;;;613    
;;;614    	/* 配置STM32的I2S音频接口(比如飞利浦标准I2S接口，16bit， 8K采样率), 开始录音 */
;;;615    	I2S_StartRecord(g_FmtList[g_tRec.ucFmtIdx][0], g_FmtList[g_tRec.ucFmtIdx][1], g_FmtList[g_tRec.ucFmtIdx][2]);
00003e  7820              LDRB     r0,[r4,#0]  ; g_tRec
000040  eb000340          ADD      r3,r0,r0,LSL #1
000044  4807              LDR      r0,|L6.100|
000046  eb000183          ADD      r1,r0,r3,LSL #2
00004a  f8300023          LDRH     r0,[r0,r3,LSL #2]
00004e  688a              LDR      r2,[r1,#8]
000050  8889              LDRH     r1,[r1,#4]
000052  e8bd4010          POP      {r4,lr}
000056  b289              UXTH     r1,r1
000058  b280              UXTH     r0,r0
00005a  f7ffbffe          B.W      I2S_StartRecord
;;;616    }
;;;617    
                          ENDP

00005e  0000              DCW      0x0000
                  |L6.96|
                          DCD      ||.bss||
                  |L6.100|
                          DCD      ||.data||

                          AREA ||i.StopRec||, CODE, READONLY, ALIGN=2

                  StopRec PROC
;;;625    */
;;;626    static void StopRec(void)
000000  4904              LDR      r1,|L7.20|
;;;627    {
000002  b510              PUSH     {r4,lr}
;;;628    	g_tRec.ucStatus = STA_IDLE;		/* 待机状态 */
000004  2000              MOVS     r0,#0
000006  7348              STRB     r0,[r1,#0xd]
;;;629    	I2S_Stop();		/* 停止I2S录音和放音 */
000008  f7fffffe          BL       I2S_Stop
;;;630    	wm8978_Init();	/* 复位WM8978到复位状态 */
00000c  e8bd4010          POP      {r4,lr}
000010  f7ffbffe          B.W      wm8978_Init
;;;631    }
;;;632    
                          ENDP

                  |L7.20|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  g_tRec
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  g_FmtList
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00001f40
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00003e80
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00005622
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x0000ac44
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00017700
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x0002ee00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\audio_rec.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_audio_rec_c_08508b5b____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_audio_rec_c_08508b5b____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_audio_rec_c_08508b5b____REVSH|
#line 128
|__asm___11_audio_rec_c_08508b5b____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
