; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\can_network.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\can_network.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\can_network.crf ..\..\User\app\src\can_network.c]
                          THUMB

                          AREA ||i.can_BeepCtrl||, CODE, READONLY, ALIGN=2

                  can_BeepCtrl PROC
;;;116    */
;;;117    void can_BeepCtrl(uint8_t _addr, uint8_t _cmd)
000000  4808              LDR      r0,|L1.36|
;;;118    {		
;;;119    	// 02  00    --- 控制蜂鸣器，第1个字节表示命令代码，第2个字节 00 表示关闭，01表示持续鸣叫， 02表示鸣叫1次
;;;120    	
;;;121    	/* 填充发送参数， 也可以再每次发送的时候填 */
;;;122    	g_tCanTxMsg.StdId = 0x321;
000002  f2403221          MOV      r2,#0x321
;;;123    	g_tCanTxMsg.ExtId = 0x01;
000006  6002              STR      r2,[r0,#0]  ; g_tCanTxMsg
000008  2201              MOVS     r2,#1
;;;124    	g_tCanTxMsg.RTR = CAN_RTR_DATA;
00000a  6042              STR      r2,[r0,#4]  ; g_tCanTxMsg
00000c  2200              MOVS     r2,#0
00000e  7242              STRB     r2,[r0,#9]
;;;125    	g_tCanTxMsg.IDE = CAN_ID_STD;
000010  7202              STRB     r2,[r0,#8]
;;;126    	
;;;127    	g_tCanTxMsg.DLC = 2;
000012  2202              MOVS     r2,#2
000014  7282              STRB     r2,[r0,#0xa]
;;;128    						
;;;129    	g_tCanTxMsg.Data[0] = 0x02;
000016  72c2              STRB     r2,[r0,#0xb]
;;;130    	g_tCanTxMsg.Data[1] = _cmd;		/* 第2个字节 00 表示关闭，01表示持续鸣叫， 02表示鸣叫1次 */
000018  7301              STRB     r1,[r0,#0xc]
;;;131        CAN_Transmit(CAN1, &g_tCanTxMsg);	
00001a  4601              MOV      r1,r0
00001c  4802              LDR      r0,|L1.40|
00001e  f7ffbffe          B.W      CAN_Transmit
;;;132    }
;;;133    
                          ENDP

000022  0000              DCW      0x0000
                  |L1.36|
                          DCD      ||.bss||
                  |L1.40|
                          DCD      0x40006400

                          AREA ||i.can_DeInit||, CODE, READONLY, ALIGN=2

                  can_DeInit PROC
;;;230    */
;;;231    void can_DeInit(void)
000000  b508              PUSH     {r3,lr}
;;;232    {
;;;233    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, DISABLE);	/* 关闭CAN1时钟 */
000002  2100              MOVS     r1,#0
000004  f04f7000          MOV      r0,#0x2000000
000008  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;234    
;;;235    	{
;;;236    		NVIC_InitTypeDef  NVIC_InitStructure;
;;;237    		
;;;238    		NVIC_InitStructure.NVIC_IRQChannel = USB_LP_CAN1_RX0_IRQn;
00000c  2014              MOVS     r0,#0x14
00000e  f88d0000          STRB     r0,[sp,#0]
;;;239    		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0;
000012  2000              MOVS     r0,#0
000014  f88d0001          STRB     r0,[sp,#1]
;;;240    		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x0;
000018  f88d0002          STRB     r0,[sp,#2]
;;;241    		NVIC_InitStructure.NVIC_IRQChannelCmd = DISABLE;
00001c  f88d0003          STRB     r0,[sp,#3]
;;;242    		NVIC_Init(&NVIC_InitStructure);
000020  4668              MOV      r0,sp
000022  f7fffffe          BL       NVIC_Init
;;;243    	
;;;244    		/* CAN FIFO0 消息接收中断使能 */ 
;;;245    		CAN_ITConfig(CAN1, CAN_IT_FMP0, DISABLE);	
000026  2200              MOVS     r2,#0
000028  2102              MOVS     r1,#2
00002a  4802              LDR      r0,|L2.52|
00002c  f7fffffe          BL       CAN_ITConfig
;;;246    	}
;;;247    }
000030  bd08              POP      {r3,pc}
;;;248    
                          ENDP

000032  0000              DCW      0x0000
                  |L2.52|
                          DCD      0x40006400

                          AREA ||i.can_ISR||, CODE, READONLY, ALIGN=2

                  can_ISR PROC
;;;280    */ 
;;;281    void can_ISR(void)
000000  b510              PUSH     {r4,lr}
;;;282    {
;;;283    	CAN_Receive(CAN1, CAN_FIFO0, &g_tCanRxMsg);
000002  4a19              LDR      r2,|L3.104|
000004  2100              MOVS     r1,#0
000006  4819              LDR      r0,|L3.108|
000008  f7fffffe          BL       CAN_Receive
;;;284    	if ((g_tCanRxMsg.StdId == 0x321) && (g_tCanRxMsg.IDE == CAN_ID_STD) && (g_tCanRxMsg.DLC > 0))
00000c  4c16              LDR      r4,|L3.104|
00000e  6820              LDR      r0,[r4,#0]  ; g_tCanRxMsg
000010  f5a07140          SUB      r1,r0,#0x300
000014  3921              SUBS     r1,r1,#0x21
000016  d125              BNE      |L3.100|
000018  7a20              LDRB     r0,[r4,#8]  ; g_tCanRxMsg
00001a  2800              CMP      r0,#0
00001c  d122              BNE      |L3.100|
00001e  7aa0              LDRB     r0,[r4,#0xa]  ; g_tCanRxMsg
000020  2800              CMP      r0,#0
000022  d01f              BEQ      |L3.100|
;;;285    	{
;;;286    		bsp_PutMsg(MSG_CAN_RX, 0);		/* 借用按键FIFO，发送一个收到485数据帧的消息 */
000024  2002              MOVS     r0,#2
000026  f7fffffe          BL       bsp_PutMsg
;;;287    		
;;;288    		/*
;;;289    	01  01 01 --- 控制LED指示灯点亮， 第1个字节是命令代码，第2个字节表示00表示关闭，01表示点亮。
;;;290    			    第3个字节表示指示灯序号(1-4)
;;;291    	02  00    --- 控制蜂鸣器，第1个字节表示命令代码，第2个字节 00 表示关闭，01表示鸣叫1次， 02表示鸣叫1次
;;;292    		*/
;;;293    		switch (g_tCanRxMsg.Data[0])
00002a  7ae0              LDRB     r0,[r4,#0xb]  ; g_tCanRxMsg
00002c  2801              CMP      r0,#1
00002e  d009              BEQ      |L3.68|
000030  2802              CMP      r0,#2
000032  d117              BNE      |L3.100|
;;;294    		{
;;;295    			case 0x01:
;;;296    				if (g_tCanRxMsg.Data[1] == 0)
;;;297    				{
;;;298    					bsp_LedOff(g_tCanRxMsg.Data[2]);	/* 关闭LED */
;;;299    				}
;;;300    				else
;;;301    				{
;;;302    					bsp_LedOn(g_tCanRxMsg.Data[2]);	/* 打开LED */	
;;;303    				}
;;;304    				break;
;;;305    			
;;;306    			case 0x02:	/* 控制蜂鸣器 */
;;;307    				if (g_tCanRxMsg.Data[1] == 0)
000034  7b22              LDRB     r2,[r4,#0xc]  ; g_tCanRxMsg
000036  b18a              CBZ      r2,|L3.92|
;;;308    				{
;;;309    					BEEP_Stop();		/* 关闭蜂鸣器 */
;;;310    				}
;;;311    				else
;;;312    				{
;;;313    					BEEP_Start(8, 8, g_tCanRxMsg.Data[1]);	/* 鸣叫80ms，停80ms， n次 */	
000038  2108              MOVS     r1,#8
00003a  e8bd4010          POP      {r4,lr}
00003e  4608              MOV      r0,r1
000040  f7ffbffe          B.W      BEEP_Start
                  |L3.68|
000044  7b20              LDRB     r0,[r4,#0xc]          ;296  ; g_tCanRxMsg
000046  2800              CMP      r0,#0                 ;296
000048  7b60              LDRB     r0,[r4,#0xd]          ;302  ; g_tCanRxMsg
00004a  d003              BEQ      |L3.84|
00004c  e8bd4010          POP      {r4,lr}               ;302
000050  f7ffbffe          B.W      bsp_LedOn
                  |L3.84|
000054  e8bd4010          POP      {r4,lr}               ;298
000058  f7ffbffe          B.W      bsp_LedOff
                  |L3.92|
00005c  e8bd4010          POP      {r4,lr}               ;309
000060  f7ffbffe          B.W      BEEP_Stop
                  |L3.100|
;;;314    				}	
;;;315    				break;
;;;316    		}
;;;317    	}
;;;318    }
000064  bd10              POP      {r4,pc}
;;;319    
                          ENDP

000066  0000              DCW      0x0000
                  |L3.104|
                          DCD      ||.bss||+0x14
                  |L3.108|
                          DCD      0x40006400

                          AREA ||i.can_Init||, CODE, READONLY, ALIGN=2

                  can_Init PROC
;;;141    */
;;;142    void can_Init(void)
000000  b570              PUSH     {r4-r6,lr}
;;;143    {
;;;144    	GPIO_InitTypeDef GPIO_InitStructure;
;;;145    	CAN_InitTypeDef CAN_InitStructure;
;;;146    	CAN_FilterInitTypeDef CAN_FilterInitStructure;	
;;;147    		
;;;148    	/* PB8，PB9口线设置为AFIO模式, 切换到CAN功能 */
;;;149    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
000002  2101              MOVS     r1,#1
000004  b08a              SUB      sp,sp,#0x28           ;143
000006  4608              MOV      r0,r1
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;150    	
;;;151    	/* 使能GPIO时钟 */
;;;152    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  2008              MOVS     r0,#8
000010  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;153    	
;;;154    	/* 配置CAN信号接收引脚: RX */
;;;155    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
000014  f44f7080          MOV      r0,#0x100
000018  f8ad001c          STRH     r0,[sp,#0x1c]
;;;156    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;	/* GPIO配置为上拉输入模式 */
00001c  2048              MOVS     r0,#0x48
;;;157    	GPIO_Init(GPIOB, &GPIO_InitStructure);
00001e  4c34              LDR      r4,|L4.240|
000020  f88d001f          STRB     r0,[sp,#0x1f]         ;156
000024  a907              ADD      r1,sp,#0x1c
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       GPIO_Init
;;;158    	
;;;159    	/* 配置CAN信号发送引脚: TX */
;;;160    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
00002c  1560              ASRS     r0,r4,#21
00002e  f8ad001c          STRH     r0,[sp,#0x1c]
;;;161    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;		/* 配置为复用推挽输出 */
000032  2018              MOVS     r0,#0x18
000034  f88d001f          STRB     r0,[sp,#0x1f]
;;;162    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;	/* 设置GPIO最大速度 */
000038  2003              MOVS     r0,#3
00003a  f88d001e          STRB     r0,[sp,#0x1e]
;;;163    	GPIO_Init(GPIOB, &GPIO_InitStructure);
00003e  a907              ADD      r1,sp,#0x1c
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       GPIO_Init
;;;164    	
;;;165    	/* 原生的CAN引脚和USB引脚是相同的口线，安富莱开发板使用引脚的重映射功能将CAN引脚切换到PB8，PB9 */
;;;166    	GPIO_PinRemapConfig(GPIO_Remap1_CAN1 , ENABLE);	/* 使能CAN1的重映射 */
000046  2101              MOVS     r1,#1
000048  f44f10ea          MOV      r0,#0x1d4000
00004c  f7fffffe          BL       GPIO_PinRemapConfig
;;;167    	
;;;168    	/* 使能CAN外设时钟 */
;;;169    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);
000050  2101              MOVS     r1,#1
000052  0648              LSLS     r0,r1,#25
000054  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;170    	
;;;171    	CAN_DeInit(CAN1);						/* 复位CAN寄存器 */
000058  4e26              LDR      r6,|L4.244|
00005a  4630              MOV      r0,r6
00005c  f7fffffe          BL       CAN_DeInit
;;;172    	CAN_StructInit(&CAN_InitStructure);		/* 填充CAN参数结构体成员为缺省值 */
000060  4668              MOV      r0,sp
000062  f7fffffe          BL       CAN_StructInit
;;;173    	
;;;174    	/*
;;;175    		TTCM = time triggered communication mode
;;;176    		ABOM = automatic bus-off management 
;;;177    		AWUM = automatic wake-up mode
;;;178    		NART = no automatic retransmission
;;;179    		RFLM = receive FIFO locked mode 
;;;180    		TXFP = transmit FIFO priority		
;;;181    	*/
;;;182    	CAN_InitStructure.CAN_TTCM = DISABLE;			/* 禁止时间触发模式（不生成时间戳), T  */
000066  2400              MOVS     r4,#0
000068  f88d4006          STRB     r4,[sp,#6]
;;;183    	CAN_InitStructure.CAN_ABOM = DISABLE;			/* 禁止自动总线关闭管理 */
00006c  f88d4007          STRB     r4,[sp,#7]
;;;184    	CAN_InitStructure.CAN_AWUM = DISABLE;			/* 禁止自动唤醒模式 */
;;;185    	CAN_InitStructure.CAN_NART = DISABLE;			/* 禁止仲裁丢失或出错后的自动重传功能 */
;;;186    	CAN_InitStructure.CAN_RFLM = DISABLE;			/* 禁止接收FIFO加锁模式 */
;;;187    	CAN_InitStructure.CAN_TXFP = DISABLE;			/* 禁止传输FIFO优先级 */
;;;188    	CAN_InitStructure.CAN_Mode = CAN_Mode_Normal;	/* 设置CAN为正常工作模式 */
;;;189    	
;;;190    	/* 
;;;191    		CAN 波特率 = RCC_APB1Periph_CAN / Prescaler / (SJW + BS1 + BS2);
;;;192    		
;;;193    		SJW = synchronisation_jump_width 
;;;194    		BS = bit_segment
;;;195    		
;;;196    		本例中，设置CAN波特率为500Kbps		
;;;197    		CAN 波特率 = 360000000 / 6 / (1 + 6 + 5) / = 500kHz		
;;;198    	*/
;;;199    	
;;;200    	CAN_InitStructure.CAN_SJW = CAN_SJW_1tq;
;;;201    	CAN_InitStructure.CAN_BS1 = CAN_BS1_6tq;
000070  2005              MOVS     r0,#5
000072  f88d0004          STRB     r0,[sp,#4]
;;;202    	CAN_InitStructure.CAN_BS2 = CAN_BS2_5tq;
000076  2004              MOVS     r0,#4
000078  f88d4002          STRB     r4,[sp,#2]            ;188
00007c  f88d0005          STRB     r0,[sp,#5]
000080  f88d4003          STRB     r4,[sp,#3]            ;200
;;;203    	CAN_InitStructure.CAN_Prescaler = 6;
000084  2006              MOVS     r0,#6
000086  f8ad0000          STRH     r0,[sp,#0]
00008a  9402              STR      r4,[sp,#8]            ;188
;;;204    	CAN_Init(CAN1, &CAN_InitStructure);
00008c  4669              MOV      r1,sp
00008e  4630              MOV      r0,r6
000090  f7fffffe          BL       CAN_Init
;;;205    	
;;;206    	/* 设置CAN滤波器0 */
;;;207    	CAN_FilterInitStructure.CAN_FilterNumber = 0;		/* 滤波器序号，0-13，共14个滤波器 */
000094  f88d4016          STRB     r4,[sp,#0x16]
;;;208    	CAN_FilterInitStructure.CAN_FilterMode = CAN_FilterMode_IdMask;		/* 滤波器模式，设置ID掩码模式 */
;;;209    	CAN_FilterInitStructure.CAN_FilterScale = CAN_FilterScale_32bit;	/* 32位滤波 */
000098  2501              MOVS     r5,#1
00009a  f88d4017          STRB     r4,[sp,#0x17]         ;208
00009e  f88d5018          STRB     r5,[sp,#0x18]
;;;210    	CAN_FilterInitStructure.CAN_FilterIdHigh = 0x0000;					/* 掩码后ID的高16bit */
0000a2  f8ad400c          STRH     r4,[sp,#0xc]
;;;211    	CAN_FilterInitStructure.CAN_FilterIdLow = 0x0000;					/* 掩码后ID的低16bit */
;;;212    	CAN_FilterInitStructure.CAN_FilterMaskIdHigh = 0x0000;				/* ID掩码值高16bit */
0000a6  f8ad4010          STRH     r4,[sp,#0x10]
0000aa  f8ad400e          STRH     r4,[sp,#0xe]          ;211
;;;213    	CAN_FilterInitStructure.CAN_FilterMaskIdLow = 0x0000;				/* ID掩码值低16bit */
0000ae  f8ad4012          STRH     r4,[sp,#0x12]
;;;214    	CAN_FilterInitStructure.CAN_FilterFIFOAssignment = CAN_FIFO0;		/* 滤波器绑定FIFO 0 */
0000b2  f8ad4014          STRH     r4,[sp,#0x14]
;;;215    	CAN_FilterInitStructure.CAN_FilterActivation = ENABLE;				/* 使能滤波器 */
0000b6  f88d5019          STRB     r5,[sp,#0x19]
;;;216    	CAN_FilterInit(&CAN_FilterInitStructure);
0000ba  a803              ADD      r0,sp,#0xc
0000bc  f7fffffe          BL       CAN_FilterInit
0000c0  f44f60e0          MOV      r0,#0x700
0000c4  f7fffffe          BL       NVIC_PriorityGroupConfig
0000c8  2014              MOVS     r0,#0x14
0000ca  f88d0020          STRB     r0,[sp,#0x20]
0000ce  f88d4021          STRB     r4,[sp,#0x21]
0000d2  f88d4022          STRB     r4,[sp,#0x22]
0000d6  f88d5023          STRB     r5,[sp,#0x23]
0000da  a808              ADD      r0,sp,#0x20
0000dc  f7fffffe          BL       NVIC_Init
0000e0  2201              MOVS     r2,#1
0000e2  2102              MOVS     r1,#2
0000e4  4630              MOV      r0,r6
0000e6  f7fffffe          BL       CAN_ITConfig
;;;217    	
;;;218    	/* 此处暂时不发送 */	
;;;219    
;;;220    	can_NVIC_Config();		/* 配置CAN中断 */	
;;;221    }     
0000ea  b00a              ADD      sp,sp,#0x28
0000ec  bd70              POP      {r4-r6,pc}
;;;222    
                          ENDP

0000ee  0000              DCW      0x0000
                  |L4.240|
                          DCD      0x40010c00
                  |L4.244|
                          DCD      0x40006400

                          AREA ||i.can_LedOff||, CODE, READONLY, ALIGN=2

                  can_LedOff PROC
;;;90     */
;;;91     void can_LedOff(uint8_t _addr, uint8_t _led_no)
000000  4809              LDR      r0,|L5.40|
;;;92     {		
000002  b430              PUSH     {r4,r5}
;;;93     	/* 填充发送参数， 也可以再每次发送的时候填 */
;;;94     	g_tCanTxMsg.StdId = 0x321;
000004  f2403221          MOV      r2,#0x321
;;;95     	g_tCanTxMsg.ExtId = 0x01;
000008  2301              MOVS     r3,#1
00000a  e9c02300          STRD     r2,r3,[r0,#0]
;;;96     	g_tCanTxMsg.RTR = CAN_RTR_DATA;
00000e  2200              MOVS     r2,#0
000010  7242              STRB     r2,[r0,#9]
;;;97     	g_tCanTxMsg.IDE = CAN_ID_STD;
000012  7202              STRB     r2,[r0,#8]
;;;98     	
;;;99     	g_tCanTxMsg.DLC = 3;
000014  2403              MOVS     r4,#3
000016  7284              STRB     r4,[r0,#0xa]
;;;100    						
;;;101    	g_tCanTxMsg.Data[0] = 0x01;
000018  72c3              STRB     r3,[r0,#0xb]
;;;102    	g_tCanTxMsg.Data[1] = 0x00;		/* 0x00 表示关闭 */
00001a  7302              STRB     r2,[r0,#0xc]
;;;103    	g_tCanTxMsg.Data[2] = _led_no;
00001c  7341              STRB     r1,[r0,#0xd]
;;;104        CAN_Transmit(CAN1, &g_tCanTxMsg);	
00001e  4601              MOV      r1,r0
000020  bc30              POP      {r4,r5}
000022  4802              LDR      r0,|L5.44|
000024  f7ffbffe          B.W      CAN_Transmit
;;;105    }
;;;106    
                          ENDP

                  |L5.40|
                          DCD      ||.bss||
                  |L5.44|
                          DCD      0x40006400

                          AREA ||i.can_LedOn||, CODE, READONLY, ALIGN=2

                  can_LedOn PROC
;;;65     */
;;;66     void can_LedOn(uint8_t _addr, uint8_t _led_no)
000000  4808              LDR      r0,|L6.36|
;;;67     {		
;;;68     	/* 填充发送参数， 也可以再每次发送的时候填 */
;;;69     	g_tCanTxMsg.StdId = 0x321;
000002  f2403221          MOV      r2,#0x321
;;;70     	g_tCanTxMsg.ExtId = 0x01;
;;;71     	g_tCanTxMsg.RTR = CAN_RTR_DATA;
000006  2300              MOVS     r3,#0
000008  6002              STR      r2,[r0,#0]            ;70  ; g_tCanTxMsg
00000a  2201              MOVS     r2,#1                 ;70
00000c  6042              STR      r2,[r0,#4]  ; g_tCanTxMsg
00000e  7243              STRB     r3,[r0,#9]
;;;72     	g_tCanTxMsg.IDE = CAN_ID_STD;
000010  7203              STRB     r3,[r0,#8]
;;;73     	
;;;74     	g_tCanTxMsg.DLC = 3;
000012  2303              MOVS     r3,#3
000014  7283              STRB     r3,[r0,#0xa]
;;;75     						
;;;76     	g_tCanTxMsg.Data[0] = 0x01;
000016  72c2              STRB     r2,[r0,#0xb]
;;;77     	g_tCanTxMsg.Data[1] = 0x01;
000018  7302              STRB     r2,[r0,#0xc]
;;;78     	g_tCanTxMsg.Data[2] = _led_no;
00001a  7341              STRB     r1,[r0,#0xd]
;;;79         CAN_Transmit(CAN1, &g_tCanTxMsg);	
00001c  4601              MOV      r1,r0
00001e  4802              LDR      r0,|L6.40|
000020  f7ffbffe          B.W      CAN_Transmit
;;;80     }
;;;81     
                          ENDP

                  |L6.36|
                          DCD      ||.bss||
                  |L6.40|
                          DCD      0x40006400

                          AREA ||i.can_SendPacket||, CODE, READONLY, ALIGN=2

                  can_SendPacket PROC
;;;43     */
;;;44     void can_SendPacket(uint8_t *_DataBuf, uint8_t _Len)
000000  460a              MOV      r2,r1
;;;45     {		
;;;46     	/* 填充发送参数， 也可以再每次发送的时候填 */
;;;47     	g_tCanTxMsg.StdId = 0x321;
000002  490b              LDR      r1,|L7.48|
000004  b510              PUSH     {r4,lr}               ;45
000006  f2403321          MOV      r3,#0x321
;;;48     	g_tCanTxMsg.ExtId = 0x01;
00000a  600b              STR      r3,[r1,#0]  ; g_tCanTxMsg
00000c  2301              MOVS     r3,#1
;;;49     	g_tCanTxMsg.RTR = CAN_RTR_DATA;
00000e  604b              STR      r3,[r1,#4]  ; g_tCanTxMsg
000010  2300              MOVS     r3,#0
000012  724b              STRB     r3,[r1,#9]
;;;50     	g_tCanTxMsg.IDE = CAN_ID_STD;
000014  720b              STRB     r3,[r1,#8]
;;;51     	g_tCanTxMsg.DLC = _Len;
000016  728a              STRB     r2,[r1,#0xa]
;;;52     						
;;;53         memcpy(g_tCanTxMsg.Data, _DataBuf, _Len);
000018  4601              MOV      r1,r0
00001a  4805              LDR      r0,|L7.48|
00001c  300b              ADDS     r0,r0,#0xb
00001e  f7fffffe          BL       __aeabi_memcpy
;;;54         CAN_Transmit(CAN1, &g_tCanTxMsg);	
000022  e8bd4010          POP      {r4,lr}
000026  4902              LDR      r1,|L7.48|
000028  4802              LDR      r0,|L7.52|
00002a  f7ffbffe          B.W      CAN_Transmit
;;;55     }
;;;56     
                          ENDP

00002e  0000              DCW      0x0000
                  |L7.48|
                          DCD      ||.bss||
                  |L7.52|
                          DCD      0x40006400

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  g_tCanTxMsg
                          %        20
                  g_tCanRxMsg
                          %        20

                          AREA ||.data||, DATA, ALIGN=0

                  g_ucLedNo
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\can_network.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_can_network_c_0fef5416____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_can_network_c_0fef5416____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_can_network_c_0fef5416____REVSH|
#line 128
|__asm___13_can_network_c_0fef5416____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
