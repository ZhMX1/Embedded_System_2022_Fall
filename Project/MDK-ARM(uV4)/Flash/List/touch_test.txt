; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\touch_test.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\touch_test.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\touch_test.crf ..\..\User\app\src\touch_test.c]
                          THUMB

                          AREA ||i.DispPic||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  DispPic PROC
;;;802    */
;;;803    static void DispPic(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;804    {
000004  f2ad6dec          SUB      sp,sp,#0x6ec
;;;805    	char buf[64];
;;;806    
;;;807    	int32_t time1, time2;
;;;808    	FONT_T tFont;
;;;809    
;;;810    	/* 设置字体参数 */
;;;811    	{
;;;812    		tFont.FontCode = FC_ST_16;	/* 字体代码 16点阵 */
000008  2001              MOVS     r0,#1
00000a  f88d0688          STRB     r0,[sp,#0x688]
;;;813    		tFont.FrontColor = CL_WHITE;	/* 字体颜色 */
00000e  f64f70ff          MOV      r0,#0xffff
000012  f8ad068a          STRH     r0,[sp,#0x68a]
;;;814    		tFont.BackColor = CL_BLUE;	/* 文字背景颜色 */
000016  201f              MOVS     r0,#0x1f
;;;815    		tFont.Space = 0;				/* 文字间距，单位 = 像素 */
;;;816    	}
;;;817    
;;;818    	/* K1键切换背景图片 */
;;;819    	if (s_pic < 3)	/* RA8875 图库芯片3张图片 */
000018  4ef0              LDR      r6,|L1.988|
00001a  f8ad068c          STRH     r0,[sp,#0x68c]        ;814
00001e  2700              MOVS     r7,#0                 ;815
000020  f8ad768e          STRH     r7,[sp,#0x68e]        ;815
000024  7830              LDRB     r0,[r6,#0]  ; s_pic
;;;820    	{
;;;821    		/*  显示RA8875外挂图库芯片中的图像使用下面的函数
;;;822    		void RA8875_DispBmpInFlash(uint16_t _usX, uint16_t _usY, uint16_t _usHeight, uint16_t _usWidth,
;;;823    				uint32_t _uiFlashAddr);
;;;824    		*/
;;;825    		time1 = bsp_GetRunTime();
;;;826    		if (LCD_GetWidth() == 480)	/* 4.3寸屏 480x272 */
;;;827    		{
;;;828    			RA8875_DispBmpInFlash(0, 0, 272, 480, g_RA8875Addr_480x272[s_pic]);
;;;829    		}
;;;830    		else	/* 5寸和7寸 800*480 屏 */
;;;831    		{
;;;832    			RA8875_DispBmpInFlash(0, 0, 480, 800, g_RA8875Addr_800x480[s_pic]);
;;;833    		}
;;;834    		time2 = bsp_GetRunTime();
;;;835    		sprintf(buf, "图片%d RA8875    , 显示时间: %4dms", s_pic + 1, time2 - time1);
;;;836    		LCD_DispStrEx(5, 5, buf, &tFont, 300, ALIGN_LEFT);
000026  f44f7996          MOV      r9,#0x12c
00002a  f44f78f0          MOV      r8,#0x1e0             ;826
00002e  2803              CMP      r0,#3                 ;819
000030  d222              BCS      |L1.120|
000032  f7fffffe          BL       bsp_GetRunTime
000036  4604              MOV      r4,r0                 ;825
000038  f7fffffe          BL       LCD_GetWidth
00003c  4642              MOV      r2,r8                 ;826
00003e  4290              CMP      r0,r2                 ;826
000040  d108              BNE      |L1.84|
000042  48e7              LDR      r0,|L1.992|
000044  7831              LDRB     r1,[r6,#0]            ;828  ; s_pic
000046  4643              MOV      r3,r8                 ;828
000048  f44f7288          MOV      r2,#0x110             ;828
00004c  f8500021          LDR      r0,[r0,r1,LSL #2]     ;828
000050  9000              STR      r0,[sp,#0]            ;828
000052  e007              B        |L1.100|
                  |L1.84|
000054  48e2              LDR      r0,|L1.992|
000056  7831              LDRB     r1,[r6,#0]            ;832  ; s_pic
000058  300c              ADDS     r0,r0,#0xc            ;832
00005a  f44f7348          MOV      r3,#0x320             ;832
00005e  f8500021          LDR      r0,[r0,r1,LSL #2]     ;832
000062  9000              STR      r0,[sp,#0]            ;832
                  |L1.100|
000064  2100              MOVS     r1,#0                 ;832
000066  4608              MOV      r0,r1                 ;832
000068  f7fffffe          BL       RA8875_DispBmpInFlash
00006c  f7fffffe          BL       bsp_GetRunTime
000070  1b03              SUBS     r3,r0,r4              ;835
000072  7832              LDRB     r2,[r6,#0]            ;835  ; s_pic
000074  a1db              ADR      r1,|L1.996|
000076  e071              B        |L1.348|
                  |L1.120|
;;;837    	}
;;;838    	else if (s_pic < 5)	/* NOR FLASH 中图片2张 */
;;;839    	{
;;;840    		time1 = bsp_GetRunTime();
;;;841    		if (LCD_GetWidth() == 480)	/* 4.3寸屏 480x272 */
;;;842    		{
;;;843    			LCD_DrawBMP(0, 0, g_LcdHeight, g_LcdWidth, (uint16_t *)g_NorAddr_480x272[s_pic - 3]);
000078  4ce3              LDR      r4,|L1.1032|
00007a  4de4              LDR      r5,|L1.1036|
;;;844    		}
;;;845    		else	/* 5寸和7寸 800*480 屏 */
;;;846    		{
;;;847    			LCD_DrawBMP(0, 0, g_LcdHeight, g_LcdWidth, (uint16_t *)g_NorAddr_800x480[s_pic - 3]);
;;;848    		}
;;;849    		time2 = bsp_GetRunTime();
;;;850    		sprintf(buf, "图片%d NOR FLASH, 显示时间: %4dms", s_pic +1 , time2 - time1);
;;;851    		LCD_DispStrEx(5, 5, buf, &tFont, 300, ALIGN_LEFT);
;;;852    
;;;853    		/*	将NOR中第3张图片复制到外部SRAM， 准备测试SRAM中图片刷新时间 */
;;;854    		{
;;;855    			/* 外部SRAM只能存储2副800*480的图片 */
;;;856    			uint16_t *p1 = (uint16_t *)EXT_SRAM_ADDR;
00007c  f04f4ad0          MOV      r10,#0x68000000
000080  2805              CMP      r0,#5                 ;838
000082  d254              BCS      |L1.302|
000084  f7fffffe          BL       bsp_GetRunTime
000088  4683              MOV      r11,r0                ;840
00008a  f7fffffe          BL       LCD_GetWidth
00008e  4540              CMP      r0,r8                 ;841
000090  d102              BNE      |L1.152|
000092  48d3              LDR      r0,|L1.992|
000094  3018              ADDS     r0,r0,#0x18           ;843
000096  e001              B        |L1.156|
                  |L1.152|
000098  48d1              LDR      r0,|L1.992|
00009a  3024              ADDS     r0,r0,#0x24           ;847
                  |L1.156|
00009c  7831              LDRB     r1,[r6,#0]            ;847  ; s_pic
00009e  eb000081          ADD      r0,r0,r1,LSL #2       ;847
0000a2  2100              MOVS     r1,#0                 ;847
0000a4  f8500c0c          LDR      r0,[r0,#-0xc]         ;847
0000a8  9000              STR      r0,[sp,#0]            ;847
0000aa  8823              LDRH     r3,[r4,#0]            ;847  ; g_LcdWidth
0000ac  882a              LDRH     r2,[r5,#0]            ;847  ; g_LcdHeight
0000ae  4608              MOV      r0,r1                 ;847
0000b0  f7fffffe          BL       LCD_DrawBMP
0000b4  f7fffffe          BL       bsp_GetRunTime
0000b8  7832              LDRB     r2,[r6,#0]            ;850  ; s_pic
0000ba  eba0030b          SUB      r3,r0,r11             ;850
0000be  a1d4              ADR      r1,|L1.1040|
0000c0  f50d60c9          ADD      r0,sp,#0x648          ;850
0000c4  1c52              ADDS     r2,r2,#1              ;850
0000c6  f7fffffe          BL       __2sprintf
0000ca  e9cd9700          STRD     r9,r7,[sp,#0]         ;851
0000ce  2105              MOVS     r1,#5                 ;851
0000d0  f50d63d1          ADD      r3,sp,#0x688          ;851
0000d4  f50d62c9          ADD      r2,sp,#0x648          ;851
0000d8  4608              MOV      r0,r1                 ;851
0000da  f7fffffe          BL       LCD_DispStrEx
0000de  4656              MOV      r6,r10
;;;857    			uint32_t i;
;;;858    
;;;859    			if (LCD_GetWidth() == 480)	/* 4.3寸屏 480x272 */
0000e0  f7fffffe          BL       LCD_GetWidth
0000e4  4540              CMP      r0,r8
;;;860    			{
;;;861    				for (i = 0; i < g_LcdHeight * g_LcdWidth; i++)
;;;862    				{
;;;863    					p1[i] = ((uint16_t *)g_NorAddr_480x272[2])[i];
;;;864    				}
;;;865    			}
;;;866    			else	/* 5寸和7寸 800*480 屏 */
;;;867    			{
;;;868    				for (i = 0; i < g_LcdHeight * g_LcdWidth; i++)
0000e6  f04f0000          MOV      r0,#0
0000ea  d111              BNE      |L1.272|
0000ec  49d1              LDR      r1,|L1.1076|
0000ee  e006              B        |L1.254|
                  |L1.240|
0000f0  eb010240          ADD      r2,r1,r0,LSL #1       ;863
0000f4  f8b22800          LDRH     r2,[r2,#0x800]        ;863
0000f8  f8262010          STRH     r2,[r6,r0,LSL #1]     ;863
0000fc  1c40              ADDS     r0,r0,#1              ;863
                  |L1.254|
0000fe  882a              LDRH     r2,[r5,#0]            ;861  ; g_LcdHeight
000100  8823              LDRH     r3,[r4,#0]            ;861  ; g_LcdWidth
000102  435a              MULS     r2,r3,r2              ;861
000104  4282              CMP      r2,r0                 ;861
000106  d8f3              BHI      |L1.240|
                  |L1.264|
;;;869    				{
;;;870    					p1[i] = ((uint16_t *)g_NorAddr_800x480[2])[i];
;;;871    				}
;;;872    			}
;;;873    		}
;;;874    	}
;;;875    	else if (s_pic < 6)	/* SRAM 中图片1张 */
;;;876    	{
;;;877    		uint16_t *p1 = (uint16_t *)EXT_SRAM_ADDR;
;;;878    
;;;879    		time1 = bsp_GetRunTime();
;;;880    		if (LCD_GetWidth() == 480)	/* 4.3寸屏 480x272 */
;;;881    		{
;;;882    			LCD_DrawBMP(0, 0, g_LcdHeight, g_LcdWidth, p1);
;;;883    		}
;;;884    		else	/* 5寸和7寸 800*480 屏 */
;;;885    		{
;;;886    			LCD_DrawBMP(0, 0, g_LcdHeight, g_LcdWidth, p1);
;;;887    		}
;;;888    		time2 = bsp_GetRunTime();
;;;889    		sprintf(buf, "图片%d SRAM, 显示时间: %4dms", s_pic + 1, time2 - time1);
;;;890    		LCD_DispStrEx(5, 5, buf, &tFont, 300, ALIGN_LEFT);
;;;891    	}
;;;892    	else if (s_pic < 9)			/* NAND FLASH 中的图片3张 */
;;;893    	{
;;;894    		/* 访问Fatfs用到的全局变量 */
;;;895    		FATFS   fs;
;;;896    		char FileName[64];
;;;897    		uint8_t err = 0;
;;;898    
;;;899    		/* 每次读1行 */
;;;900    		if (f_mount(&fs, FS_VOLUME_NAND, 0) != FR_OK)
;;;901    		{
;;;902    			printf("f_mount文件系统失败");
;;;903    		}
;;;904    
;;;905    		time1 = bsp_GetRunTime();
;;;906    
;;;907    		if (LCD_GetWidth() == 480)	/* 4.3寸屏 480x272 */
;;;908    		{
;;;909    			sprintf(FileName, "%d:%s/%s", PIC_DISK, PIC_PATH, g_NandFileName_480x272[s_pic - 6]);
;;;910    		}
;;;911    		else
;;;912    		{
;;;913    			sprintf(FileName, "%d:%s/%s", PIC_DISK, PIC_PATH, g_NandFileName_800x480[s_pic - 6]);
;;;914    		}
;;;915    
;;;916    		/* 读磁盘中的图片文件并送显示 */
;;;917    		if (ReadFileDispPic(FileName, 0, 0, g_LcdHeight, g_LcdWidth) == 0)
;;;918    		{
;;;919    			err = 1;
;;;920    		}
;;;921    
;;;922    		time2 = bsp_GetRunTime();
;;;923    
;;;924    		if (err == 1)
;;;925    		{
;;;926    			LCD_ClrScr(CL_BLUE);
;;;927    			sprintf(buf, "图片%d NAND FLASH, 文件错误: %dms", s_pic + 1, 0);
;;;928    		}
;;;929    		else
;;;930    		{
;;;931    			sprintf(buf, "图片%d NAND FLASH, 显示时间: %dms", s_pic + 1, time2 - time1);
;;;932    		}
;;;933    		LCD_DispStrEx(5, 5, buf, &tFont, 300, ALIGN_LEFT);
;;;934    
;;;935    		/* 卸载文件系统 */
;;;936    		f_mount(NULL, FS_VOLUME_NAND, 0);
;;;937    	}
;;;938    	else if (s_pic < 12)			/* SD卡中的图片3张 */
;;;939    	{
;;;940    		/* 访问Fatfs用到的全局变量 */
;;;941    		FATFS   fs;
;;;942    		char FileName[64];
;;;943    		uint8_t err = 0;
;;;944    
;;;945    		/* 每次读1行 */
;;;946    		if (f_mount(&fs, FS_VOLUME_SD, 0) == FR_OK)
;;;947    		{
;;;948    			time1 = bsp_GetRunTime();
;;;949    
;;;950    			if (LCD_GetWidth() == 480)	/* 4.3寸屏 480x272 */
;;;951    			{
;;;952    				sprintf(FileName, "%d:Pic/%s", FS_SD, g_NandFileName_480x272[s_pic - 9]);
;;;953    			}
;;;954    			else
;;;955    			{
;;;956    				sprintf(FileName, "%d:Pic/%s", FS_SD, g_NandFileName_800x480[s_pic - 9]);
;;;957    			}
;;;958    			if (ReadFileDispPic(FileName, 0, 0, g_LcdHeight, g_LcdWidth) == 0)
;;;959    			{
;;;960    				err = 1;
;;;961    			}
;;;962    
;;;963    			time2 = bsp_GetRunTime();
;;;964    		}
;;;965    		else
;;;966    		{
;;;967    			err = 1;
;;;968    		}
;;;969    
;;;970    
;;;971    		if (err == 1)
;;;972    		{
;;;973    			LCD_ClrScr(CL_BLUE);
;;;974    			sprintf(buf, "图片%d SD卡文件错误: %s", s_pic + 1, FileName);
;;;975    		}
;;;976    		else
;;;977    		{
;;;978    			sprintf(buf, "图片%d SD卡, 显示时间: %dms", s_pic + 1, time2 - time1);
;;;979    		}
;;;980    		LCD_DispStrEx(5, 5, buf, &tFont, 300, ALIGN_LEFT);
;;;981    
;;;982    		/* 卸载文件系统 */
;;;983    		f_mount(NULL, FS_VOLUME_SD, 0);
;;;984    	}
;;;985    	else if (s_pic < 15)			/* ch376  U盘中的图片3张 */
;;;986    	{
;;;987    		uint8_t err = 0;
;;;988    		uint8_t err_376 = 0;
;;;989    		char FileName[64];
;;;990    		uint16_t data[800];
;;;991    		
;;;992    		err_376 = CH376DiskConnect();
;;;993    		if (err_376 != USB_INT_SUCCESS)
;;;994    		{
;;;995    			err = 1;
;;;996    		}
;;;997    		
;;;998    		err_376 = CH376DiskMount();  /* 初始化磁盘并测试磁盘是否就绪 */
;;;999    		if (err_376 != USB_INT_SUCCESS)
;;;1000   		{
;;;1001   			err = 1;
;;;1002   		}
;;;1003   	
;;;1004   		if (err == 0)
;;;1005   		{
;;;1006   			time1 = bsp_GetRunTime();
;;;1007   
;;;1008   			if (LCD_GetWidth() == 480)	/* 4.3寸屏 480x272 */
;;;1009   			{
;;;1010   				sprintf(FileName, "/PIC/%s", g_NandFileName_480x272[s_pic - 12]);
;;;1011   			}
;;;1012   			else
;;;1013   			{
;;;1014   				sprintf(FileName, "/PIC/%s", g_NandFileName_800x480[s_pic - 12]);
;;;1015   			}
;;;1016   			
;;;1017   			/* 每次读1行 */
;;;1018   			err_376 = CH376FileOpenPath((uint8_t *)FileName );  /* 打开文件,该文件在C51子目录下 */
;;;1019   			if (err_376 == ERR_MISS_DIR ||err_376 == ERR_MISS_FILE)
;;;1020   			{
;;;1021   				/* 没有找到文件 */
;;;1022   				err = 1;
;;;1023   			}
;;;1024   			else	
;;;1025   			{
;;;1026   				uint16_t i, k;
;;;1027   				uint16_t RealCount;
;;;1028   				uint16_t x, y;
;;;1029   				uint16_t width;
;;;1030   				
;;;1031   				x = 0;
;;;1032   				y = 0;
;;;1033   				width = LCD_GetWidth();
;;;1034   				for (i = 0; i < LCD_GetHeight(); i++)
;;;1035   				{
;;;1036   					for (k = 0; k < width / 40; k++)
;;;1037   					{
;;;1038   						CH376ByteRead((uint8_t *)&data[40 * k], 80, &RealCount);  /* 以字节为单位从当前位置读取数据块 */					
;;;1039   						if (RealCount != 80)
;;;1040   						{
;;;1041   							err = 1;
;;;1042   							break;
;;;1043   						}
;;;1044   					}
;;;1045   					
;;;1046   					LCD_DrawBMP(x, y + i, 1, width, data);
;;;1047   				}
;;;1048   			}
;;;1049   			
;;;1050   			time2 = bsp_GetRunTime();
;;;1051   		}
;;;1052   		if (err == 1)
;;;1053   		{
;;;1054   			LCD_ClrScr(CL_BLUE);
;;;1055   			sprintf(buf, "图片%d U盘文件错误:%s", s_pic + 1, FileName);
;;;1056   		}
;;;1057   		else
;;;1058   		{
;;;1059   			sprintf(buf, "图片%d U盘, 显示时间: %dms", s_pic + 1, time2 - time1);
;;;1060   		}
;;;1061   		LCD_DispStrEx(5, 5, buf, &tFont, 300, ALIGN_LEFT);
;;;1062   
;;;1063   		/* 卸载文件系统 */
;;;1064   		f_mount(NULL, FS_VOLUME_USB, 0);
;;;1065   	}
;;;1066   }
000108  f20d6dec          ADD      sp,sp,#0x6ec
00010c  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.272|
000110  4ac9              LDR      r2,|L1.1080|
000112  e006              B        |L1.290|
                  |L1.276|
000114  eb020140          ADD      r1,r2,r0,LSL #1       ;870
000118  f8b11400          LDRH     r1,[r1,#0x400]        ;870
00011c  f8261010          STRH     r1,[r6,r0,LSL #1]     ;870
000120  1c40              ADDS     r0,r0,#1              ;870
                  |L1.290|
000122  8829              LDRH     r1,[r5,#0]            ;868  ; g_LcdHeight
000124  8823              LDRH     r3,[r4,#0]            ;868  ; g_LcdWidth
000126  4359              MULS     r1,r3,r1              ;868
000128  4281              CMP      r1,r0                 ;868
00012a  d8f3              BHI      |L1.276|
00012c  e7ec              B        |L1.264|
                  |L1.302|
00012e  46b3              MOV      r11,r6                ;875
000130  2806              CMP      r0,#6                 ;875
000132  d223              BCS      |L1.380|
000134  4656              MOV      r6,r10                ;877
000136  f7fffffe          BL       bsp_GetRunTime
00013a  4682              MOV      r10,r0                ;879
00013c  f7fffffe          BL       LCD_GetWidth
000140  9600              STR      r6,[sp,#0]            ;886
000142  2100              MOVS     r1,#0                 ;886
000144  8823              LDRH     r3,[r4,#0]            ;886  ; g_LcdWidth
000146  882a              LDRH     r2,[r5,#0]            ;886  ; g_LcdHeight
000148  4608              MOV      r0,r1                 ;886
00014a  f7fffffe          BL       LCD_DrawBMP
00014e  f7fffffe          BL       bsp_GetRunTime
000152  f89b2000          LDRB     r2,[r11,#0]           ;889  ; s_pic
000156  eba0030a          SUB      r3,r0,r10             ;889
00015a  a1b8              ADR      r1,|L1.1084|
                  |L1.348|
00015c  f50d60c9          ADD      r0,sp,#0x648          ;835
000160  1c52              ADDS     r2,r2,#1              ;835
000162  f7fffffe          BL       __2sprintf
000166  e9cd9700          STRD     r9,r7,[sp,#0]         ;836
00016a  2105              MOVS     r1,#5                 ;836
00016c  f50d63d1          ADD      r3,sp,#0x688          ;836
000170  f50d62c9          ADD      r2,sp,#0x648          ;836
000174  4608              MOV      r0,r1                 ;836
000176  f7fffffe          BL       LCD_DispStrEx
00017a  e7c5              B        |L1.264|
                  |L1.380|
00017c  f8dfb25c          LDR      r11,|L1.988|
000180  2809              CMP      r0,#9                 ;892
000182  f10b0b0c          ADD      r11,r11,#0xc          ;909
000186  d24c              BCS      |L1.546|
000188  2200              MOVS     r2,#0                 ;900
00018a  a1b4              ADR      r1,|L1.1116|
00018c  a802              ADD      r0,sp,#8              ;900
00018e  f7fffffe          BL       f_mount
000192  b110              CBZ      r0,|L1.410|
000194  a0b2              ADR      r0,|L1.1120|
000196  f7fffffe          BL       __2printf
                  |L1.410|
00019a  f7fffffe          BL       bsp_GetRunTime
00019e  4682              MOV      r10,r0                ;905
0001a0  f7fffffe          BL       LCD_GetWidth
0001a4  4540              CMP      r0,r8                 ;907
0001a6  d103              BNE      |L1.432|
0001a8  7831              LDRB     r1,[r6,#0]            ;909  ; s_pic
0001aa  eb0b0081          ADD      r0,r11,r1,LSL #2      ;909
0001ae  e004              B        |L1.442|
                  |L1.432|
0001b0  488a              LDR      r0,|L1.988|
0001b2  7831              LDRB     r1,[r6,#0]            ;913  ; s_pic
0001b4  3018              ADDS     r0,r0,#0x18           ;913
0001b6  eb000081          ADD      r0,r0,r1,LSL #2       ;913
                  |L1.442|
0001ba  a3ae              ADR      r3,|L1.1140|
0001bc  f8500c18          LDR      r0,[r0,#-0x18]        ;913
0001c0  9000              STR      r0,[sp,#0]            ;913
0001c2  2201              MOVS     r2,#1                 ;913
0001c4  a1ad              ADR      r1,|L1.1148|
0001c6  a88e              ADD      r0,sp,#0x238          ;913
0001c8  f7fffffe          BL       __2sprintf
0001cc  8820              LDRH     r0,[r4,#0]            ;917  ; g_LcdWidth
0001ce  9000              STR      r0,[sp,#0]            ;917
0001d0  2200              MOVS     r2,#0                 ;917
0001d2  882b              LDRH     r3,[r5,#0]            ;917  ; g_LcdHeight
0001d4  4611              MOV      r1,r2                 ;917
0001d6  a88e              ADD      r0,sp,#0x238          ;917
0001d8  f7fffffe          BL       ReadFileDispPic
0001dc  b1c0              CBZ      r0,|L1.528|
0001de  f7fffffe          BL       bsp_GetRunTime
0001e2  7832              LDRB     r2,[r6,#0]            ;931  ; s_pic
0001e4  eba0030a          SUB      r3,r0,r10             ;931
0001e8  a1a7              ADR      r1,|L1.1160|
0001ea  bf00              NOP                            ;931
                  |L1.492|
0001ec  f50d60c9          ADD      r0,sp,#0x648          ;931
0001f0  1c52              ADDS     r2,r2,#1              ;931
0001f2  f7fffffe          BL       __2sprintf
0001f6  e9cd9700          STRD     r9,r7,[sp,#0]         ;933
0001fa  2105              MOVS     r1,#5                 ;933
0001fc  f50d63d1          ADD      r3,sp,#0x688          ;933
000200  f50d62c9          ADD      r2,sp,#0x648          ;933
000204  4608              MOV      r0,r1                 ;933
000206  f7fffffe          BL       LCD_DispStrEx
00020a  2200              MOVS     r2,#0                 ;936
00020c  a193              ADR      r1,|L1.1116|
00020e  e050              B        |L1.690|
                  |L1.528|
000210  f7fffffe          BL       bsp_GetRunTime
000214  201f              MOVS     r0,#0x1f              ;926
000216  f7fffffe          BL       LCD_ClrScr
00021a  2300              MOVS     r3,#0                 ;927
00021c  7832              LDRB     r2,[r6,#0]            ;927  ; s_pic
00021e  a1a3              ADR      r1,|L1.1196|
000220  e7e4              B        |L1.492|
                  |L1.546|
000222  280c              CMP      r0,#0xc               ;938
000224  d249              BCS      |L1.698|
000226  2200              MOVS     r2,#0                 ;946
000228  a1a9              ADR      r1,|L1.1232|
00022a  a802              ADD      r0,sp,#8              ;946
00022c  f7fffffe          BL       f_mount
000230  bb40              CBNZ     r0,|L1.644|
000232  f7fffffe          BL       bsp_GetRunTime
000236  4682              MOV      r10,r0                ;948
000238  f7fffffe          BL       LCD_GetWidth
00023c  4540              CMP      r0,r8                 ;950
00023e  d103              BNE      |L1.584|
000240  7831              LDRB     r1,[r6,#0]            ;952  ; s_pic
000242  eb0b0081          ADD      r0,r11,r1,LSL #2      ;952
000246  e004              B        |L1.594|
                  |L1.584|
000248  4864              LDR      r0,|L1.988|
00024a  7831              LDRB     r1,[r6,#0]            ;956  ; s_pic
00024c  3018              ADDS     r0,r0,#0x18           ;956
00024e  eb000081          ADD      r0,r0,r1,LSL #2       ;956
                  |L1.594|
000252  2200              MOVS     r2,#0                 ;956
000254  f8503c24          LDR      r3,[r0,#-0x24]        ;956
000258  a19e              ADR      r1,|L1.1236|
00025a  a88e              ADD      r0,sp,#0x238          ;956
00025c  f7fffffe          BL       __2sprintf
000260  8820              LDRH     r0,[r4,#0]            ;958  ; g_LcdWidth
000262  9000              STR      r0,[sp,#0]            ;958
000264  2200              MOVS     r2,#0                 ;958
000266  882b              LDRH     r3,[r5,#0]            ;958  ; g_LcdHeight
000268  4611              MOV      r1,r2                 ;958
00026a  a88e              ADD      r0,sp,#0x238          ;958
00026c  f7fffffe          BL       ReadFileDispPic
000270  b130              CBZ      r0,|L1.640|
000272  f7fffffe          BL       bsp_GetRunTime
000276  eba0030a          SUB      r3,r0,r10             ;978
00027a  7832              LDRB     r2,[r6,#0]            ;978  ; s_pic
00027c  a198              ADR      r1,|L1.1248|
00027e  e007              B        |L1.656|
                  |L1.640|
000280  f7fffffe          BL       bsp_GetRunTime
                  |L1.644|
000284  201f              MOVS     r0,#0x1f              ;973
000286  f7fffffe          BL       LCD_ClrScr
00028a  7832              LDRB     r2,[r6,#0]            ;974  ; s_pic
00028c  ab8e              ADD      r3,sp,#0x238          ;974
00028e  a19b              ADR      r1,|L1.1276|
                  |L1.656|
000290  f50d60c9          ADD      r0,sp,#0x648          ;978
000294  1c52              ADDS     r2,r2,#1              ;978
000296  f7fffffe          BL       __2sprintf
00029a  e9cd9700          STRD     r9,r7,[sp,#0]         ;980
00029e  2105              MOVS     r1,#5                 ;980
0002a0  f50d63d1          ADD      r3,sp,#0x688          ;980
0002a4  f50d62c9          ADD      r2,sp,#0x648          ;980
0002a8  4608              MOV      r0,r1                 ;980
0002aa  f7fffffe          BL       LCD_DispStrEx
0002ae  2200              MOVS     r2,#0                 ;983
0002b0  a187              ADR      r1,|L1.1232|
                  |L1.690|
0002b2  2000              MOVS     r0,#0                 ;936
0002b4  f7fffffe          BL       f_mount
                  |L1.696|
0002b8  e726              B        |L1.264|
                  |L1.698|
0002ba  46b2              MOV      r10,r6                ;985
0002bc  280f              CMP      r0,#0xf               ;985
0002be  d2fb              BCS      |L1.696|
0002c0  2600              MOVS     r6,#0                 ;987
0002c2  f7fffffe          BL       CH376DiskConnect
0002c6  2814              CMP      r0,#0x14              ;993
0002c8  d000              BEQ      |L1.716|
0002ca  2601              MOVS     r6,#1                 ;995
                  |L1.716|
0002cc  f7fffffe          BL       CH376DiskMount
0002d0  2814              CMP      r0,#0x14              ;999
0002d2  d179              BNE      |L1.968|
0002d4  bb8e              CBNZ     r6,|L1.826|
0002d6  f7fffffe          BL       bsp_GetRunTime
0002da  9001              STR      r0,[sp,#4]            ;1008
0002dc  f7fffffe          BL       LCD_GetWidth
0002e0  4540              CMP      r0,r8                 ;1008
0002e2  d104              BNE      |L1.750|
0002e4  f89a1000          LDRB     r1,[r10,#0]           ;1010  ; s_pic
0002e8  eb0b0081          ADD      r0,r11,r1,LSL #2      ;1010
0002ec  e005              B        |L1.762|
                  |L1.750|
0002ee  483b              LDR      r0,|L1.988|
0002f0  f89a1000          LDRB     r1,[r10,#0]           ;1014  ; s_pic
0002f4  3018              ADDS     r0,r0,#0x18           ;1014
0002f6  eb000081          ADD      r0,r0,r1,LSL #2       ;1014
                  |L1.762|
0002fa  a186              ADR      r1,|L1.1300|
0002fc  f8502c30          LDR      r2,[r0,#-0x30]        ;1014
000300  f50d60d2          ADD      r0,sp,#0x690          ;1014
000304  f7fffffe          BL       __2sprintf
000308  f50d60d2          ADD      r0,sp,#0x690          ;1018
00030c  f7fffffe          BL       CH376FileOpenPath
000310  28b3              CMP      r0,#0xb3              ;1019
000312  d00b              BEQ      |L1.812|
000314  2842              CMP      r0,#0x42              ;1019
000316  d009              BEQ      |L1.812|
000318  2000              MOVS     r0,#0                 ;1031
00031a  f8cd06dc          STR      r0,[sp,#0x6dc]        ;1032
00031e  f8cd06d8          STR      r0,[sp,#0x6d8]        ;1033
000322  f7fffffe          BL       LCD_GetWidth
000326  4680              MOV      r8,r0                 ;1033
000328  2500              MOVS     r5,#0                 ;1034
00032a  e02b              B        |L1.900|
                  |L1.812|
00032c  f7fffffe          BL       bsp_GetRunTime
000330  e04a              B        |L1.968|
                  |L1.818|
000332  2400              MOVS     r4,#0                 ;1036
000334  f04f0b28          MOV      r11,#0x28             ;1036
000338  e012              B        |L1.864|
                  |L1.826|
00033a  e02a              B        |L1.914|
                  |L1.828|
00033c  eb040184          ADD      r1,r4,r4,LSL #2       ;1038
000340  a802              ADD      r0,sp,#8              ;1038
000342  eb001001          ADD      r0,r0,r1,LSL #4       ;1038
000346  f50d62dd          ADD      r2,sp,#0x6e8          ;1038
00034a  2150              MOVS     r1,#0x50              ;1038
00034c  f7fffffe          BL       CH376ByteRead
000350  f8bd06e8          LDRH     r0,[sp,#0x6e8]        ;1039
000354  2850              CMP      r0,#0x50              ;1039
000356  d001              BEQ      |L1.860|
000358  2601              MOVS     r6,#1                 ;1041
00035a  e005              B        |L1.872|
                  |L1.860|
00035c  1c64              ADDS     r4,r4,#1              ;1042
00035e  b2a4              UXTH     r4,r4                 ;1036
                  |L1.864|
000360  fbb8f0fb          UDIV     r0,r8,r11             ;1036
000364  42a0              CMP      r0,r4                 ;1036
000366  d8e9              BHI      |L1.828|
                  |L1.872|
000368  a802              ADD      r0,sp,#8              ;1046
00036a  9000              STR      r0,[sp,#0]            ;1046
00036c  f8dd06d8          LDR      r0,[sp,#0x6d8]        ;1046
000370  4643              MOV      r3,r8                 ;1046
000372  4428              ADD      r0,r0,r5              ;1046
000374  b281              UXTH     r1,r0                 ;1046
000376  2201              MOVS     r2,#1                 ;1046
000378  f8dd06dc          LDR      r0,[sp,#0x6dc]        ;1046
00037c  f7fffffe          BL       LCD_DrawBMP
000380  1c6d              ADDS     r5,r5,#1              ;1046
000382  b2ad              UXTH     r5,r5                 ;1034
                  |L1.900|
000384  f7fffffe          BL       LCD_GetHeight
000388  42a8              CMP      r0,r5                 ;1034
00038a  d8d2              BHI      |L1.818|
00038c  f7fffffe          BL       bsp_GetRunTime
000390  9000              STR      r0,[sp,#0]            ;1050
                  |L1.914|
000392  2e01              CMP      r6,#1                 ;1052
000394  d018              BEQ      |L1.968|
000396  e9dd0100          LDRD     r0,r1,[sp,#0]         ;1052
00039a  1a43              SUBS     r3,r0,r1              ;1059
00039c  f89a2000          LDRB     r2,[r10,#0]           ;1059  ; s_pic
0003a0  a15e              ADR      r1,|L1.1308|
0003a2  bf00              NOP                            ;1059
                  |L1.932|
0003a4  f50d60c9          ADD      r0,sp,#0x648          ;1059
0003a8  1c52              ADDS     r2,r2,#1              ;1059
0003aa  f7fffffe          BL       __2sprintf
0003ae  e9cd9700          STRD     r9,r7,[sp,#0]         ;1061
0003b2  2105              MOVS     r1,#5                 ;1061
0003b4  f50d63d1          ADD      r3,sp,#0x688          ;1061
0003b8  f50d62c9          ADD      r2,sp,#0x648          ;1061
0003bc  4608              MOV      r0,r1                 ;1061
0003be  f7fffffe          BL       LCD_DispStrEx
0003c2  2200              MOVS     r2,#0                 ;1064
0003c4  a15c              ADR      r1,|L1.1336|
0003c6  e774              B        |L1.690|
                  |L1.968|
0003c8  201f              MOVS     r0,#0x1f              ;1054
0003ca  f7fffffe          BL       LCD_ClrScr
0003ce  f50d63d2          ADD      r3,sp,#0x690          ;1055
0003d2  f89a2000          LDRB     r2,[r10,#0]           ;1055  ; s_pic
0003d6  a159              ADR      r1,|L1.1340|
0003d8  e7e4              B        |L1.932|
;;;1067   
                          ENDP

0003da  0000              DCW      0x0000
                  |L1.988|
                          DCD      ||.data||
                  |L1.992|
                          DCD      ||.constdata||
                  |L1.996|
0003e4  cdbcc6ac          DCB      205,188,198,172,"%d RA8875    , ",207,212,202,190,202,177
0003e8  25642052
0003ec  41383837
0003f0  35202020
0003f4  202c20cf
0003f8  d4cabeca
0003fc  b1      
0003fd  bce43a20          DCB      188,228,": %4dms",0
000401  2534646d
000405  7300    
000407  00                DCB      0
                  |L1.1032|
                          DCD      g_LcdWidth
                  |L1.1036|
                          DCD      g_LcdHeight
                  |L1.1040|
000410  cdbcc6ac          DCB      205,188,198,172,"%d NOR FLASH, ",207,212,202,190,202,177
000414  2564204e
000418  4f522046
00041c  4c415348
000420  2c20cfd4
000424  cabecab1
000428  bce43a20          DCB      188,228,": %4dms",0
00042c  2534646d
000430  7300    
000432  00                DCB      0
000433  00                DCB      0
                  |L1.1076|
                          DCD      0x6427f000
                  |L1.1080|
                          DCD      0x64436000
                  |L1.1084|
00043c  cdbcc6ac          DCB      205,188,198,172,"%d SRAM, ",207,212,202,190,202,177,188,228
000440  25642053
000444  52414d2c
000448  20cfd4ca
00044c  becab1bc
000450  e4      
000451  3a202534          DCB      ": %4dms",0
000455  646d7300
000459  00                DCB      0
00045a  00                DCB      0
00045b  00                DCB      0
                  |L1.1116|
00045c  313a00            DCB      "1:",0
00045f  00                DCB      0
                  |L1.1120|
000460  665f6d6f          DCB      "f_mount",206,196,188,254,207,181,205,179,202,167,176,220
000464  756e74ce
000468  c4bcfecf
00046c  b5cdb3ca
000470  a7b0dc  
000473  00                DCB      0
                  |L1.1140|
000474  2f506963          DCB      "/Pic",0
000478  00      
000479  00                DCB      0
00047a  00                DCB      0
00047b  00                DCB      0
                  |L1.1148|
00047c  25643a25          DCB      "%d:%s/%s",0
000480  732f2573
000484  00      
000485  00                DCB      0
000486  00                DCB      0
000487  00                DCB      0
                  |L1.1160|
000488  cdbcc6ac          DCB      205,188,198,172,"%d NAND FLASH, ",207,212,202,190,202,177
00048c  2564204e
000490  414e4420
000494  464c4153
000498  482c20cf
00049c  d4cabeca
0004a0  b1      
0004a1  bce43a20          DCB      188,228,": %dms",0
0004a5  25646d73
0004a9  00      
0004aa  00                DCB      0
0004ab  00                DCB      0
                  |L1.1196|
0004ac  cdbcc6ac          DCB      205,188,198,172,"%d NAND FLASH, ",206,196,188,254,180,237
0004b0  2564204e
0004b4  414e4420
0004b8  464c4153
0004bc  482c20ce
0004c0  c4bcfeb4
0004c4  ed      
0004c5  cef33a20          DCB      206,243,": %dms",0
0004c9  25646d73
0004cd  00      
0004ce  00                DCB      0
0004cf  00                DCB      0
                  |L1.1232|
0004d0  303a00            DCB      "0:",0
0004d3  00                DCB      0
                  |L1.1236|
0004d4  25643a50          DCB      "%d:Pic/%s",0
0004d8  69632f25
0004dc  7300    
0004de  00                DCB      0
0004df  00                DCB      0
                  |L1.1248|
0004e0  cdbcc6ac          DCB      205,188,198,172,"%d SD",191,168,", ",207,212,202,190,202
0004e4  25642053
0004e8  44bfa82c
0004ec  20cfd4ca
0004f0  beca    
0004f2  b1bce43a          DCB      177,188,228,": %dms",0
0004f6  2025646d
0004fa  7300    
                  |L1.1276|
0004fc  cdbcc6ac          DCB      205,188,198,172,"%d SD",191,168,206,196,188,254,180,237,206
000500  25642053
000504  44bfa8ce
000508  c4bcfeb4
00050c  edce    
00050e  f33a2025          DCB      243,": %s",0
000512  7300    
                  |L1.1300|
000514  2f504943          DCB      "/PIC/%s",0
000518  2f257300
                  |L1.1308|
00051c  cdbcc6ac          DCB      205,188,198,172,"%d U",197,204,", ",207,212,202,190,202,177
000520  25642055
000524  c5cc2c20
000528  cfd4cabe
00052c  cab1    
00052e  bce43a20          DCB      188,228,": %dms",0
000532  25646d73
000536  00      
000537  00                DCB      0
                  |L1.1336|
000538  323a00            DCB      "2:",0
00053b  00                DCB      0
                  |L1.1340|
00053c  cdbcc6ac          DCB      205,188,198,172,"%d U",197,204,206,196,188,254,180,237,206
000540  25642055
000544  c5cccec4
000548  bcfeb4ed
00054c  ce      
00054d  f33a2573          DCB      243,":%s",0
000551  00      
000552  00                DCB      0
000553  00                DCB      0

                          AREA ||i.InitFormTouch||, CODE, READONLY, ALIGN=2

                  InitFormTouch PROC
;;;1167   */
;;;1168   static void InitFormTouch(void)
000000  4812              LDR      r0,|L2.76|
;;;1169   {
000002  b510              PUSH     {r4,lr}
;;;1170   	FontLabel.FontCode = FC_ST_16;
000004  2101              MOVS     r1,#1
000006  7001              STRB     r1,[r0,#0]
;;;1171   	FontLabel.BackColor = CL_BLUE;
000008  211f              MOVS     r1,#0x1f
00000a  8081              STRH     r1,[r0,#4]
;;;1172   	FontLabel.FrontColor = CL_WHITE;
00000c  f64f71ff          MOV      r1,#0xffff
000010  8041              STRH     r1,[r0,#2]
;;;1173   	FontLabel.Space = 0;
;;;1174   
;;;1175   	Label3.Left = 5;
000012  490f              LDR      r1,|L2.80|
000014  2200              MOVS     r2,#0                 ;1173
000016  80c2              STRH     r2,[r0,#6]            ;1173
000018  2305              MOVS     r3,#5
00001a  804b              STRH     r3,[r1,#2]
;;;1176   	Label3.Top = 110;
00001c  246e              MOVS     r4,#0x6e
00001e  808c              STRH     r4,[r1,#4]
;;;1177   	Label3.MaxLen = 0;
;;;1178   	Label3.pCaption = "";
000020  4c0c              LDR      r4,|L2.84|
000022  814a              STRH     r2,[r1,#0xa]          ;1177
000024  e9c10403          STRD     r0,r4,[r1,#0xc]
;;;1179   	Label3.Font = &FontLabel;
;;;1180   
;;;1181   	Label1.Left = 5;
000028  3928              SUBS     r1,r1,#0x28
;;;1182   	Label1.Top = 150;
00002a  2496              MOVS     r4,#0x96
00002c  804b              STRH     r3,[r1,#2]            ;1181
00002e  808c              STRH     r4,[r1,#4]
;;;1183   	Label1.MaxLen = 0;
;;;1184   	Label1.pCaption = "";
000030  4c08              LDR      r4,|L2.84|
000032  814a              STRH     r2,[r1,#0xa]          ;1183
000034  e9c10403          STRD     r0,r4,[r1,#0xc]
;;;1185   	Label1.Font = &FontLabel;
;;;1186   
;;;1187   	Label2.Left = 5;
000038  3114              ADDS     r1,r1,#0x14
00003a  804b              STRH     r3,[r1,#2]
;;;1188   	Label2.Top = 170;
00003c  23aa              MOVS     r3,#0xaa
00003e  808b              STRH     r3,[r1,#4]
;;;1189   	Label2.MaxLen = 0;
000040  814a              STRH     r2,[r1,#0xa]
;;;1190   	Label2.pCaption = "";
000042  4622              MOV      r2,r4
000044  e9c10203          STRD     r0,r2,[r1,#0xc]
;;;1191   	Label2.Font = &FontLabel;
;;;1192   }
000048  bd10              POP      {r4,pc}
;;;1193   
                          ENDP

00004a  0000              DCW      0x0000
                  |L2.76|
                          DCD      ||.data||+0x2
                  |L2.80|
                          DCD      ||.bss||+0x28
                  |L2.84|
                          DCD      ||i.TestTouch||+0x948

                          AREA ||i.ReadFileDispPic||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  ReadFileDispPic PROC
;;;1075   */
;;;1076   uint8_t  ReadFileDispPic(char *_strFileName, uint16_t _usX, uint16_t _usY, uint16_t usHeight, uint16_t usWidth)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;1077   {
000004  f5ad6d07          SUB      sp,sp,#0x870
000008  461e              MOV      r6,r3
;;;1078   	/* 访问Fatfs用到的全局变量 */
;;;1079   //	FATFS   fs;
;;;1080   	FIL 	file;
;;;1081   	uint32_t bw;
;;;1082   #if 1	
;;;1083   	uint16_t data[800];  	// <---- 内存不足，使用外部sram
;;;1084   #else
;;;1085   	uint16_t *data = (uint16_t *)EXT_SRAM_ADDR;
;;;1086   #endif
;;;1087   	
;;;1088   	if (usWidth > 800)
00000a  f8dd5890          LDR      r5,[sp,#0x890]
00000e  4691              MOV      r9,r2                 ;1077
000010  468a              MOV      r10,r1                ;1077
000012  4604              MOV      r4,r0                 ;1077
000014  f5b57f48          CMP      r5,#0x320
000018  d904              BLS      |L3.36|
                  |L3.26|
;;;1089   	{
;;;1090   		return 0;
00001a  2000              MOVS     r0,#0
                  |L3.28|
;;;1091   	}
;;;1092   
;;;1093   	/* 打开文件 */
;;;1094   	{
;;;1095   		FRESULT result;
;;;1096   		uint16_t i;
;;;1097   
;;;1098   		result = f_open(&file, _strFileName, FA_OPEN_EXISTING | FA_READ);
;;;1099   		if (result !=  FR_OK)
;;;1100   		{
;;;1101   			printf("Open file Error, %s\r\n", _strFileName);
;;;1102   			goto err_ret;
;;;1103   		}
;;;1104   
;;;1105   		// f_lseek(&file, 0);	/* 修改文件当前指针到文件头, 从头开始读。 可以不做，缺省就是0 */
;;;1106   
;;;1107   		for (i = 0; i < usHeight; i++)
;;;1108   		{
;;;1109   			f_read(&file, &data, usWidth * 2, &bw);
;;;1110   			if (bw <= 0)
;;;1111   			{
;;;1112   				goto err_ret;
;;;1113   			}
;;;1114   
;;;1115   			//LCD_DrawBMP(_usX, _usY, usHeight, usWidth, data);
;;;1116   			LCD_DrawBMP(_usX, _usY + i, 1, usWidth, data);
;;;1117   		}
;;;1118   	}
;;;1119   
;;;1120   	/* 关闭文件*/
;;;1121   	f_close(&file);
;;;1122   	return 1;	/* 返回OK */
;;;1123   
;;;1124   err_ret:
;;;1125   	/* 关闭文件*/
;;;1126   	f_close(&file);
;;;1127   	return 0;
;;;1128   }
00001c  f50d6d07          ADD      sp,sp,#0x870
000020  e8bd87f0          POP      {r4-r10,pc}
                  |L3.36|
000024  4601              MOV      r1,r0                 ;1098
000026  2201              MOVS     r2,#1                 ;1098
000028  f20d6044          ADD      r0,sp,#0x644          ;1098
00002c  f7fffffe          BL       f_open
000030  b120              CBZ      r0,|L3.60|
000032  4621              MOV      r1,r4                 ;1101
000034  a016              ADR      r0,|L3.144|
000036  f7fffffe          BL       __2printf
00003a  e023              B        |L3.132|
                  |L3.60|
00003c  2400              MOVS     r4,#0                 ;1107
00003e  af01              ADD      r7,sp,#4              ;1083
000040  ea4f0845          LSL      r8,r5,#1              ;1109
000044  e016              B        |L3.116|
000046  bf00              NOP                            ;1109
                  |L3.72|
000048  f60d036c          ADD      r3,sp,#0x86c          ;1109
00004c  4642              MOV      r2,r8                 ;1109
00004e  a901              ADD      r1,sp,#4              ;1109
000050  f20d6044          ADD      r0,sp,#0x644          ;1109
000054  f7fffffe          BL       f_read
000058  f8dd086c          LDR      r0,[sp,#0x86c]        ;1110
00005c  b190              CBZ      r0,|L3.132|
00005e  eb090004          ADD      r0,r9,r4              ;1116
000062  b281              UXTH     r1,r0                 ;1116
000064  462b              MOV      r3,r5                 ;1116
000066  2201              MOVS     r2,#1                 ;1116
000068  4650              MOV      r0,r10                ;1116
00006a  9700              STR      r7,[sp,#0]            ;1116
00006c  f7fffffe          BL       LCD_DrawBMP
000070  1c64              ADDS     r4,r4,#1              ;1116
000072  b2a4              UXTH     r4,r4                 ;1107
                  |L3.116|
000074  42b4              CMP      r4,r6                 ;1107
000076  d3e7              BCC      |L3.72|
000078  f20d6044          ADD      r0,sp,#0x644          ;1121
00007c  f7fffffe          BL       f_close
000080  2001              MOVS     r0,#1                 ;1122
000082  e7cb              B        |L3.28|
                  |L3.132|
000084  f20d6044          ADD      r0,sp,#0x644          ;1126
000088  f7fffffe          BL       f_close
00008c  e7c5              B        |L3.26|
;;;1129   
                          ENDP

00008e  0000              DCW      0x0000
                  |L3.144|
000090  4f70656e          DCB      "Open file Error, %s\r\n",0
000094  2066696c
000098  65204572
00009c  726f722c
0000a0  2025730d
0000a4  0a00    
0000a6  00                DCB      0
0000a7  00                DCB      0

                          AREA ||i.TestTouch||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  TestTouch PROC
;;;246    */
;;;247    void TestTouch(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;248    {
000004  b0a9              SUB      sp,sp,#0xa4
;;;249    	uint8_t ucKeyCode;		/* 按键代码 */
;;;250    	uint32_t uiPS2Msg;		/* PS2键盘鼠标消息 */
;;;251    	uint8_t ucTouch;		/* 触摸事件 */
;;;252    	uint8_t fRefresh;		/* 刷屏请求标志,1表示需要刷新 */
;;;253    	FONT_T tFont, tFontBtn;	/* 定义一个字体结构体变量，用于设置字体参数 */
;;;254    	char buf[64];
;;;255    	uint16_t usAdcX, usAdcY;
;;;256    	int16_t tpX, tpY;
;;;257    	uint8_t fQuit = 0;
000006  2000              MOVS     r0,#0
;;;258    	uint8_t err_376;
;;;259    
;;;260    	BUTTON_T tBtn;
;;;261    
;;;262    	s_pic = 100;
000008  9026              STR      r0,[sp,#0x98]
00000a  48ff              LDR      r0,|L4.1032|
00000c  2164              MOVS     r1,#0x64
00000e  7001              STRB     r1,[r0,#0]
;;;263    
;;;264    	LCD_ClrScr(CL_BLUE);  	/* 清屏，背景蓝色 */
000010  201f              MOVS     r0,#0x1f
000012  f7fffffe          BL       LCD_ClrScr
;;;265    
;;;266    	/* 设置字体参数 */
;;;267    	{
;;;268    		tFont.FontCode = FC_ST_16;	/* 字体代码 16点阵 */
000016  2001              MOVS     r0,#1
000018  f88d0070          STRB     r0,[sp,#0x70]
;;;269    		tFont.FrontColor = CL_WHITE;	/* 字体颜色 */
;;;270    		tFont.BackColor = CL_BLUE;	/* 文字背景颜色 */
;;;271    		tFont.Space = 0;				/* 文字间距，单位 = 像素 */
;;;272    	}
;;;273    
;;;274    	{
;;;275    		tFontBtn.FontCode = FC_ST_16;
00001c  f88d0090          STRB     r0,[sp,#0x90]
000020  2500              MOVS     r5,#0                 ;271
000022  211f              MOVS     r1,#0x1f              ;270
;;;276    		tFontBtn.BackColor = CL_MASK;		/* 背景透明 */
000024  f6491099          MOV      r0,#0x9999
;;;277    		tFontBtn.FrontColor = CL_BLACK;
;;;278    		tFontBtn.Space = 0;
;;;279    	}
;;;280    
;;;281    	LCD_SetBackLight(g_tParam.ucBackLight);			/* 设置背光亮度 */
000028  4ef8              LDR      r6,|L4.1036|
00002a  f64f77ff          MOV      r7,#0xffff            ;269
00002e  f8ad1074          STRH     r1,[sp,#0x74]         ;270
000032  f8ad0094          STRH     r0,[sp,#0x94]         ;276
000036  f8ad7072          STRH     r7,[sp,#0x72]         ;269
00003a  f8ad5076          STRH     r5,[sp,#0x76]         ;271
00003e  f8ad5092          STRH     r5,[sp,#0x92]         ;277
000042  f8ad5096          STRH     r5,[sp,#0x96]         ;278
000046  7930              LDRB     r0,[r6,#4]  ; g_tParam
000048  f7fffffe          BL       LCD_SetBackLight
;;;282    
;;;283    	InitFormTouch();
00004c  f7fffffe          BL       InitFormTouch
;;;284    
;;;285    #if 1
;;;286    	bsp_InitPS2();
000050  f7fffffe          BL       bsp_InitPS2
;;;287    	PS2_StartWork();
000054  f7fffffe          BL       PS2_StartWork
;;;288    
;;;289    	/* 初始化PS2设备. 键盘可以不配置. 鼠标必须配置后才会输出数据包 */
;;;290    	{
;;;291    		uint8_t ucDevType;
;;;292    
;;;293    		ucDevType = PS2_GetDevceType();
000058  f7fffffe          BL       PS2_GetDevceType
;;;294    		if (ucDevType  == PS2_MOUSE)
00005c  2801              CMP      r0,#1
00005e  d01c              BEQ      |L4.154|
;;;295    		{
;;;296    			Label1.pCaption = "检测到PS2鼠标";
;;;297    			LCD_DrawLabel(&Label1);
;;;298    
;;;299    			PS2_InitMouse();
;;;300    		}
;;;301    		else if (ucDevType == PS2_KEYBOARD)
000060  2802              CMP      r0,#2
000062  d022              BEQ      |L4.170|
;;;302    		{
;;;303    			Label1.pCaption = "检测到PS2键盘";
;;;304    			LCD_DrawLabel(&Label1);
;;;305    
;;;306    			PS2_InitKeyboard();
;;;307    		}
;;;308    		else
;;;309    		{
;;;310    			Label1.pCaption = "未检测到PS2设备";
000064  48ee              LDR      r0,|L4.1056|
000066  a1ea              ADR      r1,|L4.1040|
;;;311    			LCD_DrawLabel(&Label1);
000068  6101              STR      r1,[r0,#0x10]  ; Label1
00006a  f7fffffe          BL       LCD_DrawLabel
;;;312    		}
;;;313    	}
;;;314    #endif
;;;315    
;;;316    	IRD_StartWork();	/* 开始红外解码 */
00006e  bf00              NOP      
                  |L4.112|
000070  f7fffffe          BL       IRD_StartWork
;;;317    
;;;318    	err_376 = mInitCH376Host( );  /* 初始化CH376 */
000074  f7fffffe          BL       mInitCH376Host
000078  4601              MOV      r1,r0
;;;319    	if (err_376 != USB_INT_SUCCESS)
00007a  2814              CMP      r0,#0x14
00007c  d002              BEQ      |L4.132|
;;;320    	{
;;;321    		printf("CH376 Error: %02X\n", err_376 );  /* 显示错误 */
00007e  a0e9              ADR      r0,|L4.1060|
000080  f7fffffe          BL       __2printf
                  |L4.132|
;;;322    	}
;;;323    	
;;;324    	fRefresh = 1;	/* 1表示需要刷新LCD */
;;;325    	while (fQuit == 0)
;;;326    	{
;;;327    		bsp_Idle();
000084  f7fffffe          BL       bsp_Idle
000088  f10d0a90          ADD      r10,sp,#0x90          ;253
;;;328    
;;;329    		if (fRefresh)
;;;330    		{
;;;331    			fRefresh = 0;
;;;332    
;;;333    			/* 实时刷新触摸ADC采样值和转换后的坐标 */
;;;334    			{
;;;335    				LCD_DispStr(5, 3, "测试触摸屏、按键、摇杆、LED灯", &tFont);			/* 在(8,3)坐标处显示一串汉字 */
;;;336    
;;;337    				/* 显示TFT控制器型号和屏幕分辨率 */
;;;338    				LCD_GetChipDescribe(buf);	/* 读取TFT驱动芯片型号 */
;;;339    				sprintf(&buf[strlen(buf)], "   %d x %d", LCD_GetWidth(), LCD_GetHeight());
;;;340    				LCD_DispStr(5, 23, buf, &tFont);			/* 在(8,3)坐标处显示一串汉字 */
;;;341    
;;;342    				if (g_ChipID == IC_8875)
;;;343    				{
;;;344    					/* 设置颜色，绿底红字 */
;;;345    					RA8875_SetFrontColor(CL_RED);
;;;346    					RA8875_SetBackColor(CL_GREEN);
;;;347    
;;;348    					/* RA8875_DispStr 函数是利用RA8875外部字库芯片显示字符串，支持ASCII和汉字 */
;;;349    
;;;350    					/* 原生16点阵 */
;;;351    					RA8875_SetFont(RA_FONT_16, 0, 0);
;;;352    					RA8875_SetTextZoom(RA_SIZE_X1, RA_SIZE_X1);
;;;353    					RA8875_DispStr(5, 40, "RA8875外置字库芯片OK");
;;;354    				}
;;;355    
;;;356    				/* 读取并显示当前X轴和Y轴的ADC采样值 */
;;;357    				usAdcX = TOUCH_ReadAdcX();
;;;358    				usAdcY = TOUCH_ReadAdcY();
;;;359    				sprintf(buf, "触摸ADC值 X = %4d, Y = %4d   ", usAdcX, usAdcY);
;;;360    				LCD_DispStr(5, 60, buf, &tFont);
00008c  f04f093c          MOV      r9,#0x3c
;;;361    
;;;362    				/* 读取并显示当前触摸坐标 */
;;;363    				tpX = TOUCH_GetX();
;;;364    				tpY = TOUCH_GetY();
;;;365    				sprintf(buf, "触摸坐标  X = %4d, Y = %4d   ", tpX, tpY);
;;;366    				LCD_DispStr(5, 80, buf, &tFont);
;;;367    
;;;368    				/* 在触笔所在位置显示一个小圈 */
;;;369    				if ((tpX > 0) && (tpY > 0))
;;;370    				{
;;;371    					LCD_DrawCircle(tpX, tpY, 2, CL_YELLOW);
;;;372    				}
;;;373    			}
;;;374    
;;;375    			/* 显示图标阵列 */
;;;376    			{
;;;377    				tBtn.Font = &tFontBtn;
;;;378    
;;;379    				tBtn.Left = BUTTON_RET_X;
;;;380    				tBtn.Top = BUTTON_RET_Y;
000090  4ce9              LDR      r4,|L4.1080|
;;;381    				tBtn.Height = BUTTON_RET_H;
000092  f04f0820          MOV      r8,#0x20
000096  46ab              MOV      r11,r5
000098  e015              B        |L4.198|
                  |L4.154|
00009a  48e1              LDR      r0,|L4.1056|
00009c  a1e7              ADR      r1,|L4.1084|
00009e  6101              STR      r1,[r0,#0x10]         ;297  ; Label1
0000a0  f7fffffe          BL       LCD_DrawLabel
0000a4  f7fffffe          BL       PS2_InitMouse
0000a8  e7e2              B        |L4.112|
                  |L4.170|
0000aa  48dd              LDR      r0,|L4.1056|
0000ac  a1e7              ADR      r1,|L4.1100|
0000ae  6101              STR      r1,[r0,#0x10]         ;304  ; Label1
0000b0  f7fffffe          BL       LCD_DrawLabel
0000b4  f7fffffe          BL       PS2_InitKeyboard
0000b8  e7da              B        |L4.112|
0000ba  bf00              NOP                            ;327
                  |L4.188|
0000bc  f7fffffe          BL       bsp_Idle
0000c0  9827              LDR      r0,[sp,#0x9c]         ;329
0000c2  2800              CMP      r0,#0                 ;329
0000c4  d07d              BEQ      |L4.450|
                  |L4.198|
0000c6  2000              MOVS     r0,#0                 ;331
0000c8  9027              STR      r0,[sp,#0x9c]         ;335
0000ca  ab1c              ADD      r3,sp,#0x70           ;335
0000cc  a2e3              ADR      r2,|L4.1116|
0000ce  2103              MOVS     r1,#3                 ;335
0000d0  2005              MOVS     r0,#5                 ;335
0000d2  f7fffffe          BL       LCD_DispStr
0000d6  a804              ADD      r0,sp,#0x10           ;338
0000d8  f7fffffe          BL       LCD_GetChipDescribe
0000dc  f7fffffe          BL       LCD_GetHeight
0000e0  4606              MOV      r6,r0                 ;339
0000e2  f7fffffe          BL       LCD_GetWidth
0000e6  4605              MOV      r5,r0                 ;339
0000e8  a804              ADD      r0,sp,#0x10           ;339
0000ea  f7fffffe          BL       strlen
0000ee  a904              ADD      r1,sp,#0x10           ;339
0000f0  4408              ADD      r0,r0,r1              ;339
0000f2  4633              MOV      r3,r6                 ;339
0000f4  462a              MOV      r2,r5                 ;339
0000f6  a1e1              ADR      r1,|L4.1148|
0000f8  f7fffffe          BL       __2sprintf
0000fc  ab1c              ADD      r3,sp,#0x70           ;340
0000fe  aa04              ADD      r2,sp,#0x10           ;340
000100  2117              MOVS     r1,#0x17              ;340
000102  2005              MOVS     r0,#5                 ;340
000104  f7fffffe          BL       LCD_DispStr
000108  4edf              LDR      r6,|L4.1160|
00010a  8830              LDRH     r0,[r6,#0]            ;342  ; g_ChipID
00010c  2875              CMP      r0,#0x75              ;342
00010e  d115              BNE      |L4.316|
000110  f44f4078          MOV      r0,#0xf800            ;345
000114  f7fffffe          BL       RA8875_SetFrontColor
000118  f44f60fc          MOV      r0,#0x7e0             ;346
00011c  f7fffffe          BL       RA8875_SetBackColor
000120  2200              MOVS     r2,#0                 ;351
000122  4611              MOV      r1,r2                 ;351
000124  4610              MOV      r0,r2                 ;351
000126  f7fffffe          BL       RA8875_SetFont
00012a  2100              MOVS     r1,#0                 ;352
00012c  4608              MOV      r0,r1                 ;352
00012e  f7fffffe          BL       RA8875_SetTextZoom
000132  a2d6              ADR      r2,|L4.1164|
000134  2128              MOVS     r1,#0x28              ;353
000136  2005              MOVS     r0,#5                 ;353
000138  f7fffffe          BL       RA8875_DispStr
                  |L4.316|
00013c  f7fffffe          BL       TOUCH_ReadAdcX
000140  4605              MOV      r5,r0                 ;357
000142  f7fffffe          BL       TOUCH_ReadAdcY
000146  4603              MOV      r3,r0                 ;358
000148  462a              MOV      r2,r5                 ;359
00014a  a1d6              ADR      r1,|L4.1188|
00014c  a804              ADD      r0,sp,#0x10           ;359
00014e  f7fffffe          BL       __2sprintf
000152  ab1c              ADD      r3,sp,#0x70           ;360
000154  aa04              ADD      r2,sp,#0x10           ;360
000156  213c              MOVS     r1,#0x3c              ;360
000158  2005              MOVS     r0,#5                 ;360
00015a  f7fffffe          BL       LCD_DispStr
00015e  f7fffffe          BL       TOUCH_GetX
000162  f8ad0050          STRH     r0,[sp,#0x50]         ;363
000166  f7fffffe          BL       TOUCH_GetY
00016a  f8ad0054          STRH     r0,[sp,#0x54]         ;364
00016e  4603              MOV      r3,r0                 ;364
000170  f9bd2050          LDRSH    r2,[sp,#0x50]         ;365
000174  a1d3              ADR      r1,|L4.1220|
000176  a804              ADD      r0,sp,#0x10           ;365
000178  f7fffffe          BL       __2sprintf
00017c  ab1c              ADD      r3,sp,#0x70           ;366
00017e  aa04              ADD      r2,sp,#0x10           ;366
000180  2150              MOVS     r1,#0x50              ;366
000182  2005              MOVS     r0,#5                 ;366
000184  f7fffffe          BL       LCD_DispStr
000188  f9bd0050          LDRSH    r0,[sp,#0x50]         ;369
00018c  2800              CMP      r0,#0                 ;369
00018e  dd0a              BLE      |L4.422|
000190  f9bd1054          LDRSH    r1,[sp,#0x54]         ;369
000194  2900              CMP      r1,#0                 ;369
000196  dd06              BLE      |L4.422|
000198  b289              UXTH     r1,r1                 ;371
00019a  b280              UXTH     r0,r0                 ;371
00019c  f64f73e0          MOV      r3,#0xffe0            ;371
0001a0  2202              MOVS     r2,#2                 ;371
0001a2  f7fffffe          BL       LCD_DrawCircle
                  |L4.422|
0001a6  4dcf              LDR      r5,|L4.1252|
0001a8  f8cda064          STR      r10,[sp,#0x64]        ;379
0001ac  8828              LDRH     r0,[r5,#0]            ;379  ; g_LcdWidth
0001ae  3840              SUBS     r0,r0,#0x40           ;379
0001b0  f8ad005a          STRH     r0,[sp,#0x5a]         ;379
0001b4  8820              LDRH     r0,[r4,#0]            ;380  ; g_LcdHeight
0001b6  3824              SUBS     r0,r0,#0x24           ;380
0001b8  f8ad005c          STRH     r0,[sp,#0x5c]         ;380
0001bc  f8ad805e          STRH     r8,[sp,#0x5e]
;;;382    				tBtn.Width = BUTTON_RET_W;
0001c0  e000              B        |L4.452|
                  |L4.450|
0001c2  e03e              B        |L4.578|
                  |L4.452|
;;;383    				tBtn.Focus = 0;	/* 失去焦点 */
;;;384    				tBtn.pCaption = "返回";
0001c4  a0c8              ADR      r0,|L4.1256|
;;;385    				LCD_DrawButton(&tBtn);
0001c6  901a              STR      r0,[sp,#0x68]
0001c8  f8ad9060          STRH     r9,[sp,#0x60]         ;382
0001cc  f88db06c          STRB     r11,[sp,#0x6c]        ;383
0001d0  a816              ADD      r0,sp,#0x58
0001d2  f7fffffe          BL       LCD_DrawButton
;;;386    			}
;;;387    
;;;388    			/* 在屏幕边沿绘制2个矩形框(用于检测面板边缘像素是否正常) */
;;;389    			LCD_DrawRect(0, 0, LCD_GetHeight(), LCD_GetWidth(), CL_WHITE);
0001d6  f7fffffe          BL       LCD_GetWidth
0001da  4607              MOV      r7,r0
0001dc  f7fffffe          BL       LCD_GetHeight
0001e0  4602              MOV      r2,r0
0001e2  f64f70ff          MOV      r0,#0xffff
0001e6  2100              MOVS     r1,#0
0001e8  9000              STR      r0,[sp,#0]
0001ea  463b              MOV      r3,r7
0001ec  4608              MOV      r0,r1
0001ee  f7fffffe          BL       LCD_DrawRect
;;;390    			LCD_DrawRect(2, 2, LCD_GetHeight() - 4, LCD_GetWidth() - 4, CL_YELLOW);
0001f2  f7fffffe          BL       LCD_GetWidth
0001f6  1f00              SUBS     r0,r0,#4
0001f8  b287              UXTH     r7,r0
0001fa  f7fffffe          BL       LCD_GetHeight
0001fe  1f00              SUBS     r0,r0,#4
000200  b282              UXTH     r2,r0
000202  f64f70e0          MOV      r0,#0xffe0
000206  2102              MOVS     r1,#2
000208  9000              STR      r0,[sp,#0]
00020a  463b              MOV      r3,r7
00020c  4608              MOV      r0,r1
00020e  f7fffffe          BL       LCD_DrawRect
;;;391    
;;;392    			/* 显示背光值 */
;;;393    			sprintf(buf, "当前背光亮度: %3d", g_tParam.ucBackLight);
000212  487e              LDR      r0,|L4.1036|
000214  a1b6              ADR      r1,|L4.1264|
000216  7902              LDRB     r2,[r0,#4]  ; g_tParam
000218  a804              ADD      r0,sp,#0x10
00021a  f7fffffe          BL       __2sprintf
;;;394    			LCD_DispStr(5, 130, buf, &tFont);
00021e  ab1c              ADD      r3,sp,#0x70
000220  aa04              ADD      r2,sp,#0x10
000222  2182              MOVS     r1,#0x82
000224  2005              MOVS     r0,#5
000226  f7fffffe          BL       LCD_DispStr
;;;395    
;;;396    			if (g_ChipID == IC_8875)
00022a  8830              LDRH     r0,[r6,#0]  ; g_ChipID
00022c  2875              CMP      r0,#0x75
00022e  d108              BNE      |L4.578|
;;;397    			{
;;;398    				/* 3.5寸屏不支持 */
;;;399    				LCD_DispStr(5, LCD_GetHeight() - 20, "按K1 K2 键显示图片", &tFont);
000230  f7fffffe          BL       LCD_GetHeight
000234  3814              SUBS     r0,r0,#0x14
000236  b281              UXTH     r1,r0
000238  ab1c              ADD      r3,sp,#0x70
00023a  a2b2              ADR      r2,|L4.1284|
00023c  2005              MOVS     r0,#5
00023e  f7fffffe          BL       LCD_DispStr
                  |L4.578|
;;;400    			}
;;;401    		}
;;;402    
;;;403    		ucTouch = TOUCH_GetKey(&tpX, &tpY);	/* 读取触摸事件 */
000242  a915              ADD      r1,sp,#0x54
000244  a814              ADD      r0,sp,#0x50
000246  f7fffffe          BL       TOUCH_GetKey
;;;404    		if (ucTouch != TOUCH_NONE)
00024a  2800              CMP      r0,#0
00024c  d03f              BEQ      |L4.718|
;;;405    		{
;;;406    			switch (ucTouch)
00024e  2801              CMP      r0,#1
000250  d004              BEQ      |L4.604|
000252  2802              CMP      r0,#2
000254  d03c              BEQ      |L4.720|
000256  2803              CMP      r0,#3
000258  d139              BNE      |L4.718|
00025a  e068              B        |L4.814|
                  |L4.604|
;;;407    			{
;;;408    				case TOUCH_DOWN:		/* 触笔按下事件 */
;;;409    					if (TOUCH_InRect(tpX, tpY, BUTTON_RET_X, BUTTON_RET_Y, BUTTON_RET_H, BUTTON_RET_W))
00025c  e9cd8900          STRD     r8,r9,[sp,#0]
000260  8820              LDRH     r0,[r4,#0]  ; g_LcdHeight
000262  464f              MOV      r7,r9
000264  3824              SUBS     r0,r0,#0x24
000266  b283              UXTH     r3,r0
000268  8828              LDRH     r0,[r5,#0]  ; g_LcdWidth
00026a  3840              SUBS     r0,r0,#0x40
00026c  b282              UXTH     r2,r0
00026e  f8bd0054          LDRH     r0,[sp,#0x54]
000272  b281              UXTH     r1,r0
000274  f8bd0050          LDRH     r0,[sp,#0x50]
000278  b280              UXTH     r0,r0
00027a  f7fffffe          BL       TOUCH_InRect
00027e  b1a8              CBZ      r0,|L4.684|
;;;410    					{
;;;411    					    tBtn.Font = &tFontBtn;
;;;412    
;;;413    						tBtn.Left = BUTTON_RET_X;
000280  f8cda064          STR      r10,[sp,#0x64]
000284  8828              LDRH     r0,[r5,#0]  ; g_LcdWidth
000286  3840              SUBS     r0,r0,#0x40
000288  f8ad005a          STRH     r0,[sp,#0x5a]
;;;414    						tBtn.Top = BUTTON_RET_Y;
00028c  8820              LDRH     r0,[r4,#0]  ; g_LcdHeight
;;;415    						tBtn.Height = BUTTON_RET_H;
;;;416    						tBtn.Width = BUTTON_RET_W;
00028e  f8ad7060          STRH     r7,[sp,#0x60]
000292  3824              SUBS     r0,r0,#0x24           ;414
000294  f8ad005c          STRH     r0,[sp,#0x5c]         ;414
;;;417    						tBtn.Focus = 1;	/* 焦点 */
000298  2001              MOVS     r0,#1
00029a  f88d006c          STRB     r0,[sp,#0x6c]
;;;418    						tBtn.pCaption = "返回";
00029e  a092              ADR      r0,|L4.1256|
;;;419    						LCD_DrawButton(&tBtn);
0002a0  901a              STR      r0,[sp,#0x68]
0002a2  f8ad805e          STRH     r8,[sp,#0x5e]         ;415
0002a6  a816              ADD      r0,sp,#0x58
0002a8  f7fffffe          BL       LCD_DrawButton
                  |L4.684|
;;;420    					}
;;;421    
;;;422    					/* 在触笔所在位置显示一个小圈 */
;;;423    					if ((tpX > 0) && (tpY > 0))
0002ac  f9bd0050          LDRSH    r0,[sp,#0x50]
0002b0  2800              CMP      r0,#0
0002b2  dd0c              BLE      |L4.718|
0002b4  f9bd1054          LDRSH    r1,[sp,#0x54]
0002b8  2900              CMP      r1,#0
0002ba  dd7e              BLE      |L4.954|
;;;424    					{
;;;425    						LCD_DrawCircle(tpX, tpY, 3, CL_RED);
0002bc  b289              UXTH     r1,r1
0002be  b280              UXTH     r0,r0
0002c0  f44f4378          MOV      r3,#0xf800
0002c4  2203              MOVS     r2,#3
0002c6  f7fffffe          BL       LCD_DrawCircle
;;;426    						BUTTON_BEEP();	/* 按键提示音 */
0002ca  f7fffffe          BL       BEEP_KeyTone
                  |L4.718|
0002ce  e074              B        |L4.954|
                  |L4.720|
;;;427    					}
;;;428    					break;
;;;429    
;;;430    				case TOUCH_MOVE:		/* 触笔移动事件 */
;;;431    					/* 实时刷新触摸ADC采样值和转换后的坐标 */
;;;432    					{
;;;433    						/* 读取并显示当前X轴和Y轴的ADC采样值 */
;;;434    						usAdcX = TOUCH_ReadAdcX();
0002d0  f7fffffe          BL       TOUCH_ReadAdcX
0002d4  4607              MOV      r7,r0
;;;435    						usAdcY = TOUCH_ReadAdcY();
0002d6  f7fffffe          BL       TOUCH_ReadAdcY
;;;436    						sprintf(buf, "触摸ADC值 X = %4d, Y = %4d   ", usAdcX, usAdcY);
0002da  4603              MOV      r3,r0
0002dc  463a              MOV      r2,r7
0002de  a171              ADR      r1,|L4.1188|
0002e0  a804              ADD      r0,sp,#0x10
0002e2  f7fffffe          BL       __2sprintf
;;;437    						LCD_DispStr(5, 60, buf, &tFont);
0002e6  ab1c              ADD      r3,sp,#0x70
0002e8  aa04              ADD      r2,sp,#0x10
0002ea  213c              MOVS     r1,#0x3c
0002ec  2005              MOVS     r0,#5
0002ee  f7fffffe          BL       LCD_DispStr
;;;438    
;;;439    						/* 读取并显示当前触摸坐标 */
;;;440    						//tpX = TOUCH_GetX();
;;;441    						//tpY = TOUCH_GetY();
;;;442    						sprintf(buf, "触摸坐标  X = %4d, Y = %4d   ", tpX, tpY);
0002f2  f9bd3054          LDRSH    r3,[sp,#0x54]
0002f6  f9bd2050          LDRSH    r2,[sp,#0x50]
0002fa  a172              ADR      r1,|L4.1220|
0002fc  a804              ADD      r0,sp,#0x10
0002fe  f7fffffe          BL       __2sprintf
;;;443    						LCD_DispStr(5, 80, buf, &tFont);
000302  ab1c              ADD      r3,sp,#0x70
000304  aa04              ADD      r2,sp,#0x10
000306  2150              MOVS     r1,#0x50
000308  2005              MOVS     r0,#5
00030a  f7fffffe          BL       LCD_DispStr
;;;444    
;;;445    						/* 在触笔所在位置显示一个小圈 */
;;;446    						if ((tpX > 0) && (tpY > 0))
00030e  f9bd0050          LDRSH    r0,[sp,#0x50]
000312  2800              CMP      r0,#0
000314  dd51              BLE      |L4.954|
000316  f9bd1054          LDRSH    r1,[sp,#0x54]
00031a  2900              CMP      r1,#0
00031c  dd4d              BLE      |L4.954|
;;;447    						{
;;;448    							LCD_DrawCircle(tpX, tpY, 2, CL_YELLOW);
00031e  b289              UXTH     r1,r1
000320  b280              UXTH     r0,r0
000322  f64f73e0          MOV      r3,#0xffe0
000326  2202              MOVS     r2,#2
000328  f7fffffe          BL       LCD_DrawCircle
00032c  e045              B        |L4.954|
                  |L4.814|
;;;449    						}
;;;450    					}
;;;451    					break;
;;;452    
;;;453    				case TOUCH_RELEASE:		/* 触笔释放事件 */
;;;454    					/* 在触笔所在位置显示一个小圈 */
;;;455    					if ((tpX > 0) && (tpY > 0))
00032e  f9bd0050          LDRSH    r0,[sp,#0x50]
000332  2800              CMP      r0,#0
000334  dd0a              BLE      |L4.844|
000336  f9bd1054          LDRSH    r1,[sp,#0x54]
00033a  2900              CMP      r1,#0
00033c  dd06              BLE      |L4.844|
;;;456    					{
;;;457    						LCD_DrawCircle(tpX, tpY, 4, CL_WHITE);
00033e  b289              UXTH     r1,r1
000340  b280              UXTH     r0,r0
000342  f64f73ff          MOV      r3,#0xffff
000346  2204              MOVS     r2,#4
000348  f7fffffe          BL       LCD_DrawCircle
                  |L4.844|
;;;458    					}
;;;459    
;;;460    					if (TOUCH_InRect(tpX, tpY, BUTTON_RET_X, BUTTON_RET_Y, BUTTON_RET_H, BUTTON_RET_W))
00034c  e9cd8900          STRD     r8,r9,[sp,#0]
000350  8820              LDRH     r0,[r4,#0]  ; g_LcdHeight
000352  464f              MOV      r7,r9
000354  3824              SUBS     r0,r0,#0x24
000356  b283              UXTH     r3,r0
000358  8828              LDRH     r0,[r5,#0]  ; g_LcdWidth
00035a  3840              SUBS     r0,r0,#0x40
00035c  b282              UXTH     r2,r0
00035e  f8bd0054          LDRH     r0,[sp,#0x54]
000362  b281              UXTH     r1,r0
000364  f8bd0050          LDRH     r0,[sp,#0x50]
000368  b280              UXTH     r0,r0
00036a  f7fffffe          BL       TOUCH_InRect
00036e  2800              CMP      r0,#0
;;;461    					{
;;;462    						tBtn.Font = &tFontBtn;
;;;463    
;;;464    						tBtn.Left = BUTTON_RET_X;
;;;465    						tBtn.Top = BUTTON_RET_Y;
;;;466    						tBtn.Height = BUTTON_RET_H;
;;;467    						tBtn.Width = BUTTON_RET_W;
;;;468    						tBtn.Focus = 1;	/* 焦点 */
;;;469    						tBtn.pCaption = "返回";
;;;470    						LCD_DrawButton(&tBtn);
;;;471    
;;;472    						SaveParam();	/* 保存参数 */
;;;473    						fQuit = 1;
;;;474    						break;		/* 返回 */
;;;475    					}
;;;476    					else	/* 按钮失去焦点 */
;;;477    					{
;;;478    						tBtn.Font = &tFontBtn;
;;;479    
;;;480    						tBtn.Left = BUTTON_RET_X;
000370  f8cda064          STR      r10,[sp,#0x64]
000374  8828              LDRH     r0,[r5,#0]  ; g_LcdWidth
000376  f1a00040          SUB      r0,r0,#0x40
00037a  f8ad005a          STRH     r0,[sp,#0x5a]
;;;481    						tBtn.Top = BUTTON_RET_Y;
00037e  8820              LDRH     r0,[r4,#0]  ; g_LcdHeight
;;;482    						tBtn.Height = BUTTON_RET_H;
;;;483    						tBtn.Width = BUTTON_RET_W;
000380  f8ad7060          STRH     r7,[sp,#0x60]
000384  f1a00024          SUB      r0,r0,#0x24           ;481
000388  f8ad005c          STRH     r0,[sp,#0x5c]         ;481
00038c  f8ad805e          STRH     r8,[sp,#0x5e]         ;482
000390  d00c              BEQ      |L4.940|
000392  2001              MOVS     r0,#1                 ;468
000394  f88d006c          STRB     r0,[sp,#0x6c]         ;468
000398  a053              ADR      r0,|L4.1256|
00039a  901a              STR      r0,[sp,#0x68]         ;470
00039c  a816              ADD      r0,sp,#0x58           ;470
00039e  f7fffffe          BL       LCD_DrawButton
0003a2  f7fffffe          BL       SaveParam
0003a6  2001              MOVS     r0,#1                 ;473
0003a8  9026              STR      r0,[sp,#0x98]         ;474
0003aa  e006              B        |L4.954|
                  |L4.940|
;;;484    						tBtn.Focus = 0;	/* 焦点 */
;;;485    						tBtn.pCaption = "返回";
0003ac  a04e              ADR      r0,|L4.1256|
;;;486    						LCD_DrawButton(&tBtn);
0003ae  901a              STR      r0,[sp,#0x68]
0003b0  f88db06c          STRB     r11,[sp,#0x6c]        ;484
0003b4  a816              ADD      r0,sp,#0x58
0003b6  f7fffffe          BL       LCD_DrawButton
                  |L4.954|
;;;487    
;;;488    					}
;;;489    			}
;;;490    		}
;;;491    
;;;492    		ucKeyCode = bsp_GetKey();	/* 读取键值, 无键按下时返回 KEY_NONE = 0 */
0003ba  f7fffffe          BL       bsp_GetKey
;;;493    		if (ucKeyCode != KEY_NONE)
0003be  2800              CMP      r0,#0
0003c0  d019              BEQ      |L4.1014|
;;;494    		{
;;;495    			/* 有键按下 */
;;;496    			switch (ucKeyCode)
0003c2  288d              CMP      r0,#0x8d
0003c4  d018              BEQ      |L4.1016|
0003c6  dc18              BGT      |L4.1018|
0003c8  2810              CMP      r0,#0x10
0003ca  d017              BEQ      |L4.1020|
0003cc  dc0a              BGT      |L4.996|
0003ce  280e              CMP      r0,#0xe
0003d0  d211              BCS      |L4.1014|
0003d2  e8dff000          TBB      [pc,r0]
0003d6  10cf              DCB      0x10,0xcf
0003d8  e210e4fb          DCB      0xe2,0x10,0xe4,0xfb
0003dc  10fdf810          DCB      0x10,0xfd,0xf8,0x10
0003e0  f71010f6          DCB      0xf7,0x10,0x10,0xf6
                  |L4.996|
0003e4  2887              CMP      r0,#0x87
0003e6  d00a              BEQ      |L4.1022|
0003e8  dc0a              BGT      |L4.1024|
0003ea  2813              CMP      r0,#0x13
0003ec  d009              BEQ      |L4.1026|
0003ee  2816              CMP      r0,#0x16
0003f0  d008              BEQ      |L4.1028|
0003f2  2817              CMP      r0,#0x17
0003f4  e090              B        |L4.1304|
                  |L4.1014|
0003f6  e0cf              B        |L4.1432|
                  |L4.1016|
0003f8  e16a              B        |L4.1744|
                  |L4.1018|
0003fa  e096              B        |L4.1322|
                  |L4.1020|
0003fc  e120              B        |L4.1600|
                  |L4.1022|
0003fe  e153              B        |L4.1704|
                  |L4.1024|
000400  e08c              B        |L4.1308|
                  |L4.1026|
000402  e11f              B        |L4.1604|
                  |L4.1028|
000404  e12a              B        |L4.1628|
000406  0000              DCW      0x0000
                  |L4.1032|
                          DCD      ||.data||
                  |L4.1036|
                          DCD      g_tParam
                  |L4.1040|
000410  ceb4bcec          DCB      206,180,188,236,178,226,181,189,"PS2",201,232,177,184,0
000414  b2e2b5bd
000418  505332c9
00041c  e8b1b800
                  |L4.1056|
                          DCD      ||.bss||
                  |L4.1060|
000424  43483337          DCB      "CH376 Error: %02X\n",0
000428  36204572
00042c  726f723a
000430  20253032
000434  580a00  
000437  00                DCB      0
                  |L4.1080|
                          DCD      g_LcdHeight
                  |L4.1084|
00043c  bcecb2e2          DCB      188,236,178,226,181,189,"PS2",202,243,177,234,0
000440  b5bd5053
000444  32caf3b1
000448  ea00    
00044a  00                DCB      0
00044b  00                DCB      0
                  |L4.1100|
00044c  bcecb2e2          DCB      188,236,178,226,181,189,"PS2",188,252,197,204,0
000450  b5bd5053
000454  32bcfcc5
000458  cc00    
00045a  00                DCB      0
00045b  00                DCB      0
                  |L4.1116|
00045c  b2e2cad4          DCB      178,226,202,212,180,165,195,254,198,193,161,162,176,180,188
000460  b4a5c3fe
000464  c6c1a1a2
000468  b0b4bc  
00046b  fca1a2d2          DCB      252,161,162,210,161,184,203,161,162,"LED",181,198,0
00046f  a1b8cba1
000473  a24c4544
000477  b5c600  
00047a  00                DCB      0
00047b  00                DCB      0
                  |L4.1148|
00047c  20202025          DCB      "   %d x %d",0
000480  64207820
000484  256400  
000487  00                DCB      0
                  |L4.1160|
                          DCD      g_ChipID
                  |L4.1164|
00048c  52413838          DCB      "RA8875",205,226,214,195,215,214,191,226,208,190,198,172
000490  3735cde2
000494  d6c3d7d6
000498  bfe2d0be
00049c  c6ac    
00049e  4f4b00            DCB      "OK",0
0004a1  00                DCB      0
0004a2  00                DCB      0
0004a3  00                DCB      0
                  |L4.1188|
0004a4  b4a5c3fe          DCB      180,165,195,254,"ADC",214,181," X = %4d, Y = %4d   ",0
0004a8  414443d6
0004ac  b5205820
0004b0  3d202534
0004b4  642c2059
0004b8  203d2025
0004bc  34642020
0004c0  2000    
0004c2  00                DCB      0
0004c3  00                DCB      0
                  |L4.1220|
0004c4  b4a5c3fe          DCB      180,165,195,254,215,248,177,234,"  X = %4d, Y = %4d   ",0
0004c8  d7f8b1ea
0004cc  20205820
0004d0  3d202534
0004d4  642c2059
0004d8  203d2025
0004dc  34642020
0004e0  2000    
0004e2  00                DCB      0
0004e3  00                DCB      0
                  |L4.1252|
                          DCD      g_LcdWidth
                  |L4.1256|
0004e8  b7b5bbd8          DCB      183,181,187,216,0
0004ec  00      
0004ed  00                DCB      0
0004ee  00                DCB      0
0004ef  00                DCB      0
                  |L4.1264|
0004f0  b5b1c7b0          DCB      181,177,199,176,177,179,185,226,193,193,182,200,": %3d",0
0004f4  b1b3b9e2
0004f8  c1c1b6c8
0004fc  3a202533
000500  6400    
000502  00                DCB      0
000503  00                DCB      0
                  |L4.1284|
000504  b0b44b31          DCB      176,180,"K1 K2 ",188,252,207,212,202,190,205,188,198,172
000508  204b3220
00050c  bcfccfd4
000510  cabecdbc
000514  c6ac    
000516  00                DCB      0
000517  00                DCB      0
                  |L4.1304|
000518  d13e              BNE      |L4.1432|
00051a  e0a8              B        |L4.1646|
                  |L4.1308|
00051c  2888              CMP      r0,#0x88
00051e  d072              BEQ      |L4.1542|
000520  2889              CMP      r0,#0x89
000522  d071              BEQ      |L4.1544|
000524  288c              CMP      r0,#0x8c
000526  d1f7              BNE      |L4.1304|
000528  e0d6              B        |L4.1752|
                  |L4.1322|
00052a  28c3              CMP      r0,#0xc3
00052c  d06d              BEQ      |L4.1546|
00052e  dc10              BGT      |L4.1362|
000530  2899              CMP      r0,#0x99
000532  d06b              BEQ      |L4.1548|
000534  dc06              BGT      |L4.1348|
000536  2895              CMP      r0,#0x95
000538  d069              BEQ      |L4.1550|
00053a  2896              CMP      r0,#0x96
00053c  d068              BEQ      |L4.1552|
00053e  2898              CMP      r0,#0x98
000540  d1ea              BNE      |L4.1304|
000542  e0cd              B        |L4.1760|
                  |L4.1348|
000544  289c              CMP      r0,#0x9c
000546  d074              BEQ      |L4.1586|
000548  28c0              CMP      r0,#0xc0
00054a  d073              BEQ      |L4.1588|
00054c  28c2              CMP      r0,#0xc2
00054e  d1e3              BNE      |L4.1304|
000550  e0da              B        |L4.1800|
                  |L4.1362|
000552  28ca              CMP      r0,#0xca
000554  d06f              BEQ      |L4.1590|
000556  dc06              BGT      |L4.1382|
000558  28c4              CMP      r0,#0xc4
00055a  d06d              BEQ      |L4.1592|
00055c  28c5              CMP      r0,#0xc5
00055e  d06c              BEQ      |L4.1594|
000560  28c7              CMP      r0,#0xc7
000562  d1d9              BNE      |L4.1304|
000564  e090              B        |L4.1672|
                  |L4.1382|
000566  28d2              CMP      r0,#0xd2
000568  d068              BEQ      |L4.1596|
00056a  28da              CMP      r0,#0xda
00056c  d067              BEQ      |L4.1598|
00056e  28de              CMP      r0,#0xde
000570  d1d2              BNE      |L4.1304|
000572  e0b9              B        |L4.1768|
;;;497    			{
;;;498    				case KEY_DOWN_K1:			/* K1键按下 */
;;;499    					bsp_LedOn(1);	/* 点亮LED1 */
000574  2001              MOVS     r0,#1
000576  f7fffffe          BL       bsp_LedOn
;;;500    
;;;501    					if (g_ChipID == IC_8875)
00057a  8830              LDRH     r0,[r6,#0]  ; g_ChipID
00057c  2875              CMP      r0,#0x75
00057e  d1cb              BNE      |L4.1304|
;;;502    					{
;;;503    						if (s_pic == 100)
000580  4998              LDR      r1,|L4.2020|
000582  7808              LDRB     r0,[r1,#0]  ; s_pic
000584  2864              CMP      r0,#0x64
000586  d019              BEQ      |L4.1468|
;;;504    						{
;;;505    							s_pic = 0;
;;;506    						}
;;;507    						else if (s_pic > 0)
000588  b108              CBZ      r0,|L4.1422|
00058a  1e40              SUBS     r0,r0,#1
;;;508    						{
;;;509    							s_pic--;
00058c  e000              B        |L4.1424|
                  |L4.1422|
;;;510    						}
;;;511    						else
;;;512    						{
;;;513    							s_pic = 14;
00058e  200e              MOVS     r0,#0xe
                  |L4.1424|
000590  f8810000          STRB.W   r0,[r1,#0]            ;509
                  |L4.1428|
;;;514    						}
;;;515    						DispPic();		/* 显示图片 */
000594  f7fffffe          BL       DispPic
                  |L4.1432|
000598  e0c5              B        |L4.1830|
;;;516    					}
;;;517    					break;
;;;518    
;;;519    				case KEY_UP_K1:				/* K1键松开 */
;;;520    					//Label3.pCaption = "K1键松开";
;;;521    					//LCD_DrawLabel(&Label3);
;;;522    					bsp_LedOff(1);	/* 熄灭LED1 */
00059a  2001              MOVS     r0,#1
;;;523    					break;
00059c  e06d              B        |L4.1658|
;;;524    
;;;525    				case KEY_DOWN_K2:			/* K2键按下 */
;;;526    					//Label3.pCaption = "K2键按下";
;;;527    					//LCD_DrawLabel(&Label3);
;;;528    					bsp_LedOn(2);	/* 点亮LED2 */
00059e  2002              MOVS     r0,#2
0005a0  f7fffffe          BL       bsp_LedOn
;;;529    					if (g_ChipID == IC_8875)
0005a4  8830              LDRH     r0,[r6,#0]  ; g_ChipID
0005a6  2875              CMP      r0,#0x75
0005a8  d1f6              BNE      |L4.1432|
;;;530    					{
;;;531    						if (s_pic == 100)
0005aa  498e              LDR      r1,|L4.2020|
0005ac  7808              LDRB     r0,[r1,#0]  ; s_pic
0005ae  2864              CMP      r0,#0x64
0005b0  d004              BEQ      |L4.1468|
0005b2  1c40              ADDS     r0,r0,#1
;;;532    						{
;;;533    							s_pic = 0;
;;;534    						}
;;;535    						else if (++s_pic > 14)
0005b4  b2c0              UXTB     r0,r0
0005b6  7008              STRB     r0,[r1,#0]
0005b8  280e              CMP      r0,#0xe
0005ba  d9eb              BLS      |L4.1428|
                  |L4.1468|
;;;536    						{
;;;537    							s_pic = 0;
0005bc  f881b000          STRB     r11,[r1,#0]
0005c0  e7e8              B        |L4.1428|
0005c2  e026              B        |L4.1554|
0005c4  e012              B        |L4.1516|
0005c6  e00a              B        |L4.1502|
0005c8  e002              B        |L4.1488|
0005ca  e7ff              B        |L4.1484|
                  |L4.1484|
;;;538    						}
;;;539    						DispPic();		/* 显示上一张图片 */
;;;540    					}
;;;541    					break;
;;;542    
;;;543    				case KEY_UP_K2:				/* K2键松开 */
;;;544    					//Label3.pCaption = "K2键松开";
;;;545    					//LCD_DrawLabel(&Label3);
;;;546    					bsp_LedOff(2);	/* 熄灭LED2 */
0005cc  2002              MOVS     r0,#2
;;;547    					break;
0005ce  e054              B        |L4.1658|
                  |L4.1488|
;;;548    
;;;549    				case KEY_DOWN_K3:			/* K3键按下 */
;;;550    					Label3.pCaption = "K3键按下";
0005d0  4888              LDR      r0,|L4.2036|
0005d2  a185              ADR      r1,|L4.2024|
;;;551    					LCD_DrawLabel(&Label3);
0005d4  6101              STR      r1,[r0,#0x10]  ; Label3
0005d6  f7fffffe          BL       LCD_DrawLabel
;;;552    					bsp_LedOn(3);	/* 点亮LED3 */
0005da  2003              MOVS     r0,#3
;;;553    					break;
0005dc  e044              B        |L4.1640|
                  |L4.1502|
;;;554    
;;;555    				case KEY_UP_K3:				/* K3键松开 */
;;;556    					Label3.pCaption = "K3键松开";
0005de  4885              LDR      r0,|L4.2036|
0005e0  a185              ADR      r1,|L4.2040|
;;;557    					LCD_DrawLabel(&Label3);
0005e2  6101              STR      r1,[r0,#0x10]  ; Label3
0005e4  f7fffffe          BL       LCD_DrawLabel
;;;558    					bsp_LedOff(3);	/* 熄灭LED3 */
0005e8  2003              MOVS     r0,#3
;;;559    					break;
0005ea  e046              B        |L4.1658|
                  |L4.1516|
;;;560    
;;;561    				case JOY_DOWN_U:			/* 摇杆UP键按下 */
;;;562    					Label3.pCaption = "摇杆上键按下";
0005ec  4881              LDR      r0,|L4.2036|
0005ee  a185              ADR      r1,|L4.2052|
;;;563    					LCD_DrawLabel(&Label3);
0005f0  6101              STR      r1,[r0,#0x10]  ; Label3
0005f2  f7fffffe          BL       LCD_DrawLabel
;;;564    
;;;565    					if (g_tParam.ucBackLight < 255)
0005f6  4887              LDR      r0,|L4.2068|
0005f8  7901              LDRB     r1,[r0,#4]  ; g_tParam
0005fa  29ff              CMP      r1,#0xff
0005fc  d201              BCS      |L4.1538|
0005fe  1c49              ADDS     r1,r1,#1
;;;566    					{
;;;567    						g_tParam.ucBackLight++;
000600  7101              STRB     r1,[r0,#4]
                  |L4.1538|
;;;568    					}
;;;569    					LCD_SetBackLight(g_tParam.ucBackLight);		/* 设置背光亮度 */
000602  b2c8              UXTB     r0,r1
;;;570    					fRefresh = 1;
;;;571    					break;
000604  e010              B        |L4.1576|
                  |L4.1542|
000606  e073              B        |L4.1776|
                  |L4.1544|
000608  e056              B        |L4.1720|
                  |L4.1546|
00060a  e049              B        |L4.1696|
                  |L4.1548|
00060c  e05c              B        |L4.1736|
                  |L4.1550|
00060e  e04f              B        |L4.1712|
                  |L4.1552|
000610  e056              B        |L4.1728|
                  |L4.1554|
;;;572    
;;;573    				case JOY_DOWN_D:			/* 摇杆DOWN键按下 */
;;;574    					Label3.pCaption = "摇杆下键按下";
000612  4878              LDR      r0,|L4.2036|
000614  a180              ADR      r1,|L4.2072|
;;;575    					LCD_DrawLabel(&Label3);
000616  6101              STR      r1,[r0,#0x10]  ; Label3
000618  f7fffffe          BL       LCD_DrawLabel
;;;576    					if (g_tParam.ucBackLight > 0)
00061c  497d              LDR      r1,|L4.2068|
00061e  7908              LDRB     r0,[r1,#4]  ; g_tParam
000620  b108              CBZ      r0,|L4.1574|
000622  1e40              SUBS     r0,r0,#1
;;;577    					{
;;;578    						g_tParam.ucBackLight--;
000624  7108              STRB     r0,[r1,#4]
                  |L4.1574|
;;;579    					}
;;;580    					LCD_SetBackLight(g_tParam.ucBackLight);		/* 设置背光亮度 */
000626  b2c0              UXTB     r0,r0
                  |L4.1576|
000628  f7fffffe          BL       LCD_SetBackLight
;;;581    					fRefresh = 1;
00062c  2001              MOVS     r0,#1
00062e  9027              STR      r0,[sp,#0x9c]
000630  e079              B        |L4.1830|
                  |L4.1586|
000632  e061              B        |L4.1784|
                  |L4.1588|
000634  e030              B        |L4.1688|
                  |L4.1590|
000636  e06f              B        |L4.1816|
                  |L4.1592|
000638  e02a              B        |L4.1680|
                  |L4.1594|
00063a  e021              B        |L4.1664|
                  |L4.1596|
00063c  e068              B        |L4.1808|
                  |L4.1598|
00063e  e05f              B        |L4.1792|
                  |L4.1600|
;;;582    					break;
;;;583    
;;;584    				case JOY_DOWN_L:			/* 摇杆LEFT键按下 */
;;;585    					Label3.pCaption = "摇杆左键按下";
000640  a179              ADR      r1,|L4.2088|
;;;586    					LCD_DrawLabel(&Label3);
;;;587    					break;
000642  e06c              B        |L4.1822|
                  |L4.1604|
;;;588    
;;;589    				case JOY_DOWN_R:			/* 摇杆RIGHT键按下 */
;;;590    					Label3.pCaption = "摇杆右键按下";
000644  486b              LDR      r0,|L4.2036|
000646  a17c              ADR      r1,|L4.2104|
;;;591    					LCD_DrawLabel(&Label3);
000648  6101              STR      r1,[r0,#0x10]  ; Label3
00064a  f7fffffe          BL       LCD_DrawLabel
;;;592    					bsp_DelayMS(500);
00064e  f44f70fa          MOV      r0,#0x1f4
000652  f7fffffe          BL       bsp_DelayMS
;;;593    					fQuit = 1;
000656  2001              MOVS     r0,#1
;;;594    					break;
000658  9026              STR      r0,[sp,#0x98]
00065a  e064              B        |L4.1830|
                  |L4.1628|
;;;595    
;;;596    				case JOY_DOWN_OK:			/* 摇杆OK键按下 */
;;;597    					Label3.pCaption = "摇杆OK键按下";
00065c  4865              LDR      r0,|L4.2036|
00065e  a17a              ADR      r1,|L4.2120|
;;;598    					LCD_DrawLabel(&Label3);
000660  6101              STR      r1,[r0,#0x10]  ; Label3
000662  f7fffffe          BL       LCD_DrawLabel
;;;599    					bsp_LedOn(4);	/* 点亮LED4 */
000666  2004              MOVS     r0,#4
                  |L4.1640|
000668  f7fffffe          BL       bsp_LedOn
00066c  e05b              B        |L4.1830|
                  |L4.1646|
;;;600    					break;
;;;601    
;;;602    				case JOY_UP_OK:				/* 摇杆OK键松开 */
;;;603    					Label3.pCaption = "摇杆OK键松开";
00066e  4861              LDR      r0,|L4.2036|
000670  a179              ADR      r1,|L4.2136|
;;;604    					LCD_DrawLabel(&Label3);
000672  6101              STR      r1,[r0,#0x10]  ; Label3
000674  f7fffffe          BL       LCD_DrawLabel
;;;605    					bsp_LedOff(4);	/* 熄灭LED4 */
000678  2004              MOVS     r0,#4
                  |L4.1658|
00067a  f7fffffe          BL       bsp_LedOff
00067e  e052              B        |L4.1830|
                  |L4.1664|
;;;606    					break;
;;;607    
;;;608    				/* 下面是红外遥控器的事件 */
;;;609    				case IR_KEY_POWER:
;;;610    					BUTTON_BEEP();	/* 按键提示音 */
000680  f7fffffe          BL       BEEP_KeyTone
;;;611    					Label3.pCaption = "IR Power";
000684  a178              ADR      r1,|L4.2152|
;;;612    					LCD_DrawLabel(&Label3);
;;;613    					break;
000686  e04a              B        |L4.1822|
                  |L4.1672|
;;;614    
;;;615    				case IR_KEY_MENU:
;;;616    					BUTTON_BEEP();	/* 按键提示音 */
000688  f7fffffe          BL       BEEP_KeyTone
;;;617    					Label3.pCaption = "IR Menu";
00068c  a179              ADR      r1,|L4.2164|
;;;618    					LCD_DrawLabel(&Label3);
;;;619    					break;
00068e  e046              B        |L4.1822|
                  |L4.1680|
;;;620    
;;;621    				case IR_KEY_TEST:
;;;622    					BUTTON_BEEP();	/* 按键提示音 */
000690  f7fffffe          BL       BEEP_KeyTone
;;;623    					Label3.pCaption = "IR Test";
000694  a179              ADR      r1,|L4.2172|
;;;624    					LCD_DrawLabel(&Label3);
;;;625    					break;
000696  e042              B        |L4.1822|
                  |L4.1688|
;;;626    
;;;627    				case IR_KEY_UP:
;;;628    					BUTTON_BEEP();	/* 按键提示音 */
000698  f7fffffe          BL       BEEP_KeyTone
;;;629    					Label3.pCaption = "IR +";
00069c  a179              ADR      r1,|L4.2180|
;;;630    					LCD_DrawLabel(&Label3);
;;;631    					break;
00069e  e03e              B        |L4.1822|
                  |L4.1696|
;;;632    
;;;633    				case IR_KEY_RETURN:
;;;634    					BUTTON_BEEP();	/* 按键提示音 */
0006a0  f7fffffe          BL       BEEP_KeyTone
;;;635    					Label3.pCaption = "IR Return";
0006a4  a179              ADR      r1,|L4.2188|
;;;636    					LCD_DrawLabel(&Label3);
;;;637    					break;
0006a6  e03a              B        |L4.1822|
                  |L4.1704|
;;;638    
;;;639    				case IR_KEY_LEFT:
;;;640    					BUTTON_BEEP();	/* 按键提示音 */
0006a8  f7fffffe          BL       BEEP_KeyTone
;;;641    					Label3.pCaption = "IR Left";
0006ac  a17a              ADR      r1,|L4.2200|
;;;642    					LCD_DrawLabel(&Label3);
;;;643    					break;
0006ae  e036              B        |L4.1822|
                  |L4.1712|
;;;644    
;;;645    				case IR_KEY_OK:
;;;646    					BUTTON_BEEP();	/* 按键提示音 */
0006b0  f7fffffe          BL       BEEP_KeyTone
;;;647    					Label3.pCaption = "IR Ok";
0006b4  a17a              ADR      r1,|L4.2208|
;;;648    					LCD_DrawLabel(&Label3);
;;;649    					break;
0006b6  e032              B        |L4.1822|
                  |L4.1720|
;;;650    
;;;651    				case IR_KEY_RIGHT:
;;;652    					BUTTON_BEEP();	/* 按键提示音 */
0006b8  f7fffffe          BL       BEEP_KeyTone
;;;653    					Label3.pCaption = "IR Right";
0006bc  a17a              ADR      r1,|L4.2216|
;;;654    					LCD_DrawLabel(&Label3);
;;;655    					break;
0006be  e02e              B        |L4.1822|
                  |L4.1728|
;;;656    
;;;657    				case IR_KEY_0:
;;;658    					BUTTON_BEEP();	/* 按键提示音 */
0006c0  f7fffffe          BL       BEEP_KeyTone
;;;659    					Label3.pCaption = "IR 0";
0006c4  a17b              ADR      r1,|L4.2228|
;;;660    					LCD_DrawLabel(&Label3);
;;;661    					break;
0006c6  e02a              B        |L4.1822|
                  |L4.1736|
;;;662    
;;;663    				case IR_KEY_DOWN:
;;;664    					BUTTON_BEEP();	/* 按键提示音 */
0006c8  f7fffffe          BL       BEEP_KeyTone
;;;665    					Label3.pCaption = "IR -";
0006cc  a17b              ADR      r1,|L4.2236|
;;;666    					LCD_DrawLabel(&Label3);
;;;667    					break;
0006ce  e026              B        |L4.1822|
                  |L4.1744|
;;;668    
;;;669    				case IR_KEY_C:
;;;670    					BUTTON_BEEP();	/* 按键提示音 */
0006d0  f7fffffe          BL       BEEP_KeyTone
;;;671    					Label3.pCaption = "IR C";
0006d4  a17b              ADR      r1,|L4.2244|
;;;672    					LCD_DrawLabel(&Label3);
;;;673    					break;
0006d6  e022              B        |L4.1822|
                  |L4.1752|
;;;674    
;;;675    				case IR_KEY_1:
;;;676    					BUTTON_BEEP();	/* 按键提示音 */
0006d8  f7fffffe          BL       BEEP_KeyTone
;;;677    					Label3.pCaption = "IR 1";
0006dc  a17b              ADR      r1,|L4.2252|
;;;678    					LCD_DrawLabel(&Label3);
;;;679    					break;
0006de  e01e              B        |L4.1822|
                  |L4.1760|
;;;680    
;;;681    				case IR_KEY_2:
;;;682    					BUTTON_BEEP();	/* 按键提示音 */
0006e0  f7fffffe          BL       BEEP_KeyTone
;;;683    					Label3.pCaption = "IR 2";
0006e4  a17b              ADR      r1,|L4.2260|
;;;684    					LCD_DrawLabel(&Label3);
;;;685    					break;
0006e6  e01a              B        |L4.1822|
                  |L4.1768|
;;;686    
;;;687    				case IR_KEY_3:
;;;688    					BUTTON_BEEP();	/* 按键提示音 */
0006e8  f7fffffe          BL       BEEP_KeyTone
;;;689    					Label3.pCaption = "IR 3";
0006ec  a17b              ADR      r1,|L4.2268|
;;;690    					LCD_DrawLabel(&Label3);
;;;691    					break;
0006ee  e016              B        |L4.1822|
                  |L4.1776|
;;;692    
;;;693    				case IR_KEY_4:
;;;694    					BUTTON_BEEP();	/* 按键提示音 */
0006f0  f7fffffe          BL       BEEP_KeyTone
;;;695    					Label3.pCaption = "IR 4";
0006f4  a17b              ADR      r1,|L4.2276|
;;;696    					LCD_DrawLabel(&Label3);
;;;697    					break;
0006f6  e012              B        |L4.1822|
                  |L4.1784|
;;;698    
;;;699    				case IR_KEY_5:
;;;700    					BUTTON_BEEP();	/* 按键提示音 */
0006f8  f7fffffe          BL       BEEP_KeyTone
;;;701    					Label3.pCaption = "IR 5";
0006fc  a17b              ADR      r1,|L4.2284|
;;;702    					LCD_DrawLabel(&Label3);
;;;703    					break;
0006fe  e00e              B        |L4.1822|
                  |L4.1792|
;;;704    
;;;705    				case IR_KEY_6:
;;;706    					BUTTON_BEEP();	/* 按键提示音 */
000700  f7fffffe          BL       BEEP_KeyTone
;;;707    					Label3.pCaption = "IR 6";
000704  a17b              ADR      r1,|L4.2292|
;;;708    					LCD_DrawLabel(&Label3);
;;;709    					break;
000706  e00a              B        |L4.1822|
                  |L4.1800|
;;;710    
;;;711    				case IR_KEY_7:
;;;712    					BUTTON_BEEP();	/* 按键提示音 */
000708  f7fffffe          BL       BEEP_KeyTone
;;;713    					Label3.pCaption = "IR 7";
00070c  a17b              ADR      r1,|L4.2300|
;;;714    					LCD_DrawLabel(&Label3);
;;;715    					break;
00070e  e006              B        |L4.1822|
                  |L4.1808|
;;;716    
;;;717    				case IR_KEY_8:
;;;718    					BUTTON_BEEP();	/* 按键提示音 */
000710  f7fffffe          BL       BEEP_KeyTone
;;;719    					Label3.pCaption = "IR 8";
000714  a17b              ADR      r1,|L4.2308|
;;;720    					LCD_DrawLabel(&Label3);
;;;721    					break;
000716  e002              B        |L4.1822|
                  |L4.1816|
;;;722    
;;;723    				case IR_KEY_9:
;;;724    					BUTTON_BEEP();	/* 按键提示音 */
000718  f7fffffe          BL       BEEP_KeyTone
;;;725    					Label3.pCaption = "IR 9";
00071c  a17b              ADR      r1,|L4.2316|
                  |L4.1822|
00071e  4835              LDR      r0,|L4.2036|
;;;726    					LCD_DrawLabel(&Label3);
000720  6101              STR      r1,[r0,#0x10]  ; Label3
000722  f7fffffe          BL       LCD_DrawLabel
                  |L4.1830|
;;;727    					break;
;;;728    
;;;729    				default:
;;;730    					#if 0
;;;731    					if (ucKeyCode >= IR_KEY_STRAT)
;;;732    					{
;;;733    						sprintf(buf, "IR 无法识别 %02X %02X %02X %02X", g_tIR.RxBuf[0], g_tIR.RxBuf[1],
;;;734    							g_tIR.RxBuf[2], g_tIR.RxBuf[3]);
;;;735    
;;;736    						Label3.pCaption = buf;
;;;737    						LCD_DrawLabel(&Label3);
;;;738    					}
;;;739    					#endif
;;;740    					break;
;;;741    
;;;742    			}
;;;743    		}
;;;744    
;;;745    		/* PS2按键检测由中断服务程序实现，我们只需要调用PS2_GetMsg读取键值即可。 */
;;;746    		uiPS2Msg = PS2_GetMsg();
000726  f7fffffe          BL       PS2_GetMsg
00072a  0007              MOVS     r7,r0
;;;747    		if (uiPS2Msg != PS2_NONE)
00072c  d04e              BEQ      |L4.1996|
;;;748    		{
;;;749    			//sprintf(buf, "%X\r\n", uiPS2Msg);
;;;750    			//Label1.pCaption = buf;
;;;751    			//LCD_DrawLabel(&Label1);
;;;752    
;;;753    			if (uiPS2Msg == 0xAA)
00072e  2faa              CMP      r7,#0xaa
000730  d003              BEQ      |L4.1850|
;;;754    			{
;;;755    				Label1.pCaption = "检测到PS2键盘";
;;;756    				LCD_DrawLabel(&Label1);
;;;757    
;;;758    				PS2_InitKeyboard();
;;;759    			}
;;;760    			if (uiPS2Msg == 0xAA00)
000732  f5b74f2a          CMP      r7,#0xaa00
000736  d00a              BEQ      |L4.1870|
000738  e012              B        |L4.1888|
                  |L4.1850|
00073a  f2af21f0          ADR      r1,|L4.1100|
00073e  482d              LDR      r0,|L4.2036|
000740  3828              SUBS     r0,r0,#0x28           ;755
000742  6101              STR      r1,[r0,#0x10]         ;756  ; Label1
000744  f7fffffe          BL       LCD_DrawLabel
000748  f7fffffe          BL       PS2_InitKeyboard
00074c  e008              B        |L4.1888|
                  |L4.1870|
;;;761    			{
;;;762    				Label1.pCaption = "检测到PS2鼠标";
00074e  f2af3114          ADR      r1,|L4.1084|
000752  4828              LDR      r0,|L4.2036|
000754  3828              SUBS     r0,r0,#0x28
;;;763    				LCD_DrawLabel(&Label1);
000756  6101              STR      r1,[r0,#0x10]  ; Label1
000758  f7fffffe          BL       LCD_DrawLabel
;;;764    
;;;765    				PS2_InitMouse();
00075c  f7fffffe          BL       PS2_InitMouse
                  |L4.1888|
;;;766    			}
;;;767    
;;;768    			/* 打印PS2鼠标数据包解码结果 */
;;;769    			if (PS2_IsMousePacket(uiPS2Msg))
000760  4638              MOV      r0,r7
000762  f7fffffe          BL       PS2_IsMousePacket
000766  b1b0              CBZ      r0,|L4.1942|
;;;770    			{
;;;771    				MOUSE_PACKET_T mouse;
;;;772    
;;;773    				PS2_DecodeMouse(uiPS2Msg, &mouse);
000768  a91e              ADD      r1,sp,#0x78
00076a  4638              MOV      r0,r7
00076c  f7fffffe          BL       PS2_DecodeMouse
;;;774    
;;;775    				sprintf(buf,  "X=%4d, Y=%4d, Z=%2d, 左键=%d, 中键=%d, 右键=%d",
000770  f9bd0080          LDRSH    r0,[sp,#0x80]
000774  f89d3084          LDRB     r3,[sp,#0x84]
000778  f89d2083          LDRB     r2,[sp,#0x83]
00077c  f89d1082          LDRB     r1,[sp,#0x82]
000780  e88d000f          STM      sp,{r0-r3}
000784  f9bd307e          LDRSH    r3,[sp,#0x7e]
000788  f9bd207c          LDRSH    r2,[sp,#0x7c]
00078c  a161              ADR      r1,|L4.2324|
00078e  a804              ADD      r0,sp,#0x10
000790  f7fffffe          BL       __2sprintf
;;;776    					mouse.Xmove, mouse.Ymove, mouse.Zmove,
;;;777    					mouse.BtnLeft, mouse.BtnMid, mouse.BtnRight);
;;;778    
;;;779    				Label2.pCaption = buf;
;;;780    				LCD_DrawLabel(&Label2);
;;;781    			}
000794  e013              B        |L4.1982|
                  |L4.1942|
000796  496b              LDR      r1,|L4.2372|
000798  2000              MOVS     r0,#0
00079a  bf00              NOP      
                  |L4.1948|
00079c  f8512030          LDR      r2,[r1,r0,LSL #3]
0007a0  b142              CBZ      r2,|L4.1972|
0007a2  42ba              CMP      r2,r7
0007a4  d103              BNE      |L4.1966|
0007a6  eb0100c0          ADD      r0,r1,r0,LSL #3
0007aa  6842              LDR      r2,[r0,#4]
0007ac  e003              B        |L4.1974|
                  |L4.1966|
0007ae  1c40              ADDS     r0,r0,#1
0007b0  b280              UXTH     r0,r0
0007b2  e7f3              B        |L4.1948|
                  |L4.1972|
0007b4  a264              ADR      r2,|L4.2376|
                  |L4.1974|
;;;782    			else	/* 作为PS2键盘数据包处理 */
;;;783    			{
;;;784    				sprintf(buf, "%s", GetNameOfKey(uiPS2Msg));
0007b6  a165              ADR      r1,|L4.2380|
0007b8  a804              ADD      r0,sp,#0x10
0007ba  f7fffffe          BL       __2sprintf
                  |L4.1982|
0007be  490d              LDR      r1,|L4.2036|
0007c0  a804              ADD      r0,sp,#0x10           ;779
0007c2  3914              SUBS     r1,r1,#0x14           ;779
0007c4  6108              STR      r0,[r1,#0x10]         ;780  ; Label2
0007c6  4608              MOV      r0,r1                 ;780
0007c8  f7fffffe          BL       LCD_DrawLabel
                  |L4.1996|
0007cc  9826              LDR      r0,[sp,#0x98]         ;325
0007ce  2800              CMP      r0,#0                 ;325
0007d0  f43fac74          BEQ      |L4.188|
;;;785    				Label2.pCaption = buf;
;;;786    				LCD_DrawLabel(&Label2);
;;;787    			}
;;;788    		}
;;;789    	}
;;;790    
;;;791    	PS2_StopWork();		/* 停止PS2中断 */
0007d4  f7fffffe          BL       PS2_StopWork
;;;792    	IRD_StopWork();	/* 停止红外解码 */
0007d8  f7fffffe          BL       IRD_StopWork
;;;793    }
0007dc  b029              ADD      sp,sp,#0xa4
0007de  e8bd8ff0          POP      {r4-r11,pc}
;;;794    
                          ENDP

0007e2  0000              DCW      0x0000
                  |L4.2020|
                          DCD      ||.data||
                  |L4.2024|
0007e8  4b33bcfc          DCB      "K3",188,252,176,180,207,194,0
0007ec  b0b4cfc2
0007f0  00      
0007f1  00                DCB      0
0007f2  00                DCB      0
0007f3  00                DCB      0
                  |L4.2036|
                          DCD      ||.bss||+0x28
                  |L4.2040|
0007f8  4b33bcfc          DCB      "K3",188,252,203,201,191,170,0
0007fc  cbc9bfaa
000800  00      
000801  00                DCB      0
000802  00                DCB      0
000803  00                DCB      0
                  |L4.2052|
000804  d2a1b8cb          DCB      210,161,184,203,201,207,188,252,176,180,207,194,0
000808  c9cfbcfc
00080c  b0b4cfc2
000810  00      
000811  00                DCB      0
000812  00                DCB      0
000813  00                DCB      0
                  |L4.2068|
                          DCD      g_tParam
                  |L4.2072|
000818  d2a1b8cb          DCB      210,161,184,203,207,194,188,252,176,180,207,194,0
00081c  cfc2bcfc
000820  b0b4cfc2
000824  00      
000825  00                DCB      0
000826  00                DCB      0
000827  00                DCB      0
                  |L4.2088|
000828  d2a1b8cb          DCB      210,161,184,203,215,243,188,252,176,180,207,194,0
00082c  d7f3bcfc
000830  b0b4cfc2
000834  00      
000835  00                DCB      0
000836  00                DCB      0
000837  00                DCB      0
                  |L4.2104|
000838  d2a1b8cb          DCB      210,161,184,203,211,210,188,252,176,180,207,194,0
00083c  d3d2bcfc
000840  b0b4cfc2
000844  00      
000845  00                DCB      0
000846  00                DCB      0
000847  00                DCB      0
                  |L4.2120|
000848  d2a1b8cb          DCB      210,161,184,203,"OK",188,252,176,180,207,194,0
00084c  4f4bbcfc
000850  b0b4cfc2
000854  00      
000855  00                DCB      0
000856  00                DCB      0
000857  00                DCB      0
                  |L4.2136|
000858  d2a1b8cb          DCB      210,161,184,203,"OK",188,252,203,201,191,170,0
00085c  4f4bbcfc
000860  cbc9bfaa
000864  00      
000865  00                DCB      0
000866  00                DCB      0
000867  00                DCB      0
                  |L4.2152|
000868  49522050          DCB      "IR Power",0
00086c  6f776572
000870  00      
000871  00                DCB      0
000872  00                DCB      0
000873  00                DCB      0
                  |L4.2164|
000874  4952204d          DCB      "IR Menu",0
000878  656e7500
                  |L4.2172|
00087c  49522054          DCB      "IR Test",0
000880  65737400
                  |L4.2180|
000884  4952202b          DCB      "IR +",0
000888  00      
000889  00                DCB      0
00088a  00                DCB      0
00088b  00                DCB      0
                  |L4.2188|
00088c  49522052          DCB      "IR Return",0
000890  65747572
000894  6e00    
000896  00                DCB      0
000897  00                DCB      0
                  |L4.2200|
000898  4952204c          DCB      "IR Left",0
00089c  65667400
                  |L4.2208|
0008a0  4952204f          DCB      "IR Ok",0
0008a4  6b00    
0008a6  00                DCB      0
0008a7  00                DCB      0
                  |L4.2216|
0008a8  49522052          DCB      "IR Right",0
0008ac  69676874
0008b0  00      
0008b1  00                DCB      0
0008b2  00                DCB      0
0008b3  00                DCB      0
                  |L4.2228|
0008b4  49522030          DCB      "IR 0",0
0008b8  00      
0008b9  00                DCB      0
0008ba  00                DCB      0
0008bb  00                DCB      0
                  |L4.2236|
0008bc  4952202d          DCB      "IR -",0
0008c0  00      
0008c1  00                DCB      0
0008c2  00                DCB      0
0008c3  00                DCB      0
                  |L4.2244|
0008c4  49522043          DCB      "IR C",0
0008c8  00      
0008c9  00                DCB      0
0008ca  00                DCB      0
0008cb  00                DCB      0
                  |L4.2252|
0008cc  49522031          DCB      "IR 1",0
0008d0  00      
0008d1  00                DCB      0
0008d2  00                DCB      0
0008d3  00                DCB      0
                  |L4.2260|
0008d4  49522032          DCB      "IR 2",0
0008d8  00      
0008d9  00                DCB      0
0008da  00                DCB      0
0008db  00                DCB      0
                  |L4.2268|
0008dc  49522033          DCB      "IR 3",0
0008e0  00      
0008e1  00                DCB      0
0008e2  00                DCB      0
0008e3  00                DCB      0
                  |L4.2276|
0008e4  49522034          DCB      "IR 4",0
0008e8  00      
0008e9  00                DCB      0
0008ea  00                DCB      0
0008eb  00                DCB      0
                  |L4.2284|
0008ec  49522035          DCB      "IR 5",0
0008f0  00      
0008f1  00                DCB      0
0008f2  00                DCB      0
0008f3  00                DCB      0
                  |L4.2292|
0008f4  49522036          DCB      "IR 6",0
0008f8  00      
0008f9  00                DCB      0
0008fa  00                DCB      0
0008fb  00                DCB      0
                  |L4.2300|
0008fc  49522037          DCB      "IR 7",0
000900  00      
000901  00                DCB      0
000902  00                DCB      0
000903  00                DCB      0
                  |L4.2308|
000904  49522038          DCB      "IR 8",0
000908  00      
000909  00                DCB      0
00090a  00                DCB      0
00090b  00                DCB      0
                  |L4.2316|
00090c  49522039          DCB      "IR 9",0
000910  00      
000911  00                DCB      0
000912  00                DCB      0
000913  00                DCB      0
                  |L4.2324|
000914  583d2534          DCB      "X=%4d, Y=%4d, Z=%2d, ",215,243,188,252,"=%d, ",214,208,188
000918  642c2059
00091c  3d253464
000920  2c205a3d
000924  2532642c
000928  20d7f3bc
00092c  fc3d2564
000930  2c20d6d0
000934  bc      
000935  fc3d2564          DCB      252,"=%d, ",211,210,188,252,"=%d",0
000939  2c20d3d2
00093d  bcfc3d25
000941  6400    
000943  00                DCB      0
                  |L4.2372|
                          DCD      ||.constdata||+0x30
                  |L4.2376|
000948  00                DCB      0
000949  00                DCB      0
00094a  00                DCB      0
00094b  00                DCB      0
                  |L4.2380|
00094c  257300            DCB      "%s",0
00094f  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Label1
                          %        20
                  Label2
                          %        20
                  Label3
                          %        20

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  g_RA8875Addr_480x272
                          DCD      0x00200000
                          DCD      0x0023fc00
                          DCD      0x0027f800
                  g_RA8875Addr_800x480
                          DCD      0x002bf400
                          DCD      0x0037ac00
                          DCD      0x00436400
                  g_NorAddr_480x272
                          DCD      0x64200000
                          DCD      0x6423fc00
                          DCD      0x6427f800
                  g_NorAddr_800x480
                          DCD      0x642bf400
                          DCD      0x6437ac00
                          DCD      0x64436400
                  s_KeyNameTab
                          DCD      0xeeeeeeee
                          DCD      ||.conststring||
                          DCD      0x0000001c
                          DCD      ||.conststring||+0x4
                          DCD      0x00000032
                          DCD      ||.conststring||+0x8
                          DCD      0x00000021
                          DCD      ||.conststring||+0xc
                          DCD      0x00000023
                          DCD      ||.conststring||+0x10
                          DCD      0x00000024
                          DCD      ||.conststring||+0x14
                          DCD      0x0000002b
                          DCD      ||.conststring||+0x18
                          DCD      0x00000034
                          DCD      ||.conststring||+0x1c
                          DCD      0x00000033
                          DCD      ||.conststring||+0x20
                          DCD      0x00000043
                          DCD      ||.conststring||+0x24
                          DCD      0x0000003b
                          DCD      ||.conststring||+0x28
                          DCD      0x00000042
                          DCD      ||.conststring||+0x2c
                          DCD      0x0000004b
                          DCD      ||.conststring||+0x30
                          DCD      0x0000003a
                          DCD      ||.conststring||+0x34
                          DCD      0x00000031
                          DCD      ||.conststring||+0x38
                          DCD      0x00000044
                          DCD      ||.conststring||+0x3c
                          DCD      0x0000004d
                          DCD      ||.conststring||+0x40
                          DCD      0x00000015
                          DCD      ||.conststring||+0x44
                          DCD      0x0000002d
                          DCD      ||.conststring||+0x48
                          DCD      0x0000001b
                          DCD      ||.conststring||+0x4c
                          DCD      0x0000002c
                          DCD      ||.conststring||+0x50
                          DCD      0x0000003c
                          DCD      ||.conststring||+0x54
                          DCD      0x0000002a
                          DCD      ||.conststring||+0x58
                          DCD      0x0000001d
                          DCD      ||.conststring||+0x5c
                          DCD      0x00000022
                          DCD      ||.conststring||+0x60
                          DCD      0x00000035
                          DCD      ||.conststring||+0x64
                          DCD      0x0000001a
                          DCD      ||.conststring||+0x68
                          DCD      0x00000045
                          DCD      ||.conststring||+0x6c
                          DCD      0x00000016
                          DCD      ||.conststring||+0x70
                          DCD      0x0000001e
                          DCD      ||.conststring||+0x74
                          DCD      0x00000026
                          DCD      ||.conststring||+0x78
                          DCD      0x00000025
                          DCD      ||.conststring||+0x7c
                          DCD      0x0000002e
                          DCD      ||.conststring||+0x80
                          DCD      0x00000036
                          DCD      ||.conststring||+0x84
                          DCD      0x0000003d
                          DCD      ||.conststring||+0x88
                          DCD      0x0000003e
                          DCD      ||.conststring||+0x8c
                          DCD      0x00000046
                          DCD      ||.conststring||+0x90
                          DCD      0x0000000e
                          DCD      ||.conststring||+0x94
                          DCD      0x0000004e
                          DCD      ||.conststring||+0x98
                          DCD      0x00000055
                          DCD      ||.conststring||+0x9c
                          DCD      0x0000005d
                          DCD      ||.conststring||+0xa0
                          DCD      0x00000066
                          DCD      ||.conststring||+0xa4
                          DCD      0x00000029
                          DCD      ||.conststring||+0xb0
                          DCD      0x0000000d
                          DCD      ||.conststring||+0xb8
                          DCD      0x00000058
                          DCD      ||.conststring||+0xbc
                          DCD      0x00000012
                          DCD      ||.conststring||+0xc4
                          DCD      0x00000014
                          DCD      ||.conststring||+0xd0
                          DCD      0x0000e01f
                          DCD      ||.conststring||+0xdc
                          DCD      0x00000011
                          DCD      ||.conststring||+0xe8
                          DCD      0x00000059
                          DCD      ||.conststring||+0xf4
                          DCD      0x0000e014
                          DCD      ||.conststring||+0x100
                          DCD      0x0000e027
                          DCD      ||.conststring||+0x10c
                          DCD      0x0000e011
                          DCD      ||.conststring||+0x118
                          DCD      0x0000e02f
                          DCD      ||.conststring||+0x124
                          DCD      0x0000005a
                          DCD      ||.conststring||+0x12c
                          DCD      0x00000076
                          DCD      ||.conststring||+0x134
                          DCD      0x00000005
                          DCD      ||.conststring||+0x138
                          DCD      0x00000006
                          DCD      ||.conststring||+0x13c
                          DCD      0x00000004
                          DCD      ||.conststring||+0x140
                          DCD      0x0000000c
                          DCD      ||.conststring||+0x144
                          DCD      0x00000003
                          DCD      ||.conststring||+0x148
                          DCD      0x0000000b
                          DCD      ||.conststring||+0x14c
                          DCD      0x00000083
                          DCD      ||.conststring||+0x150
                          DCD      0x0000000a
                          DCD      ||.conststring||+0x154
                          DCD      0x00000001
                          DCD      ||.conststring||+0x158
                          DCD      0x00000009
                          DCD      ||.conststring||+0x15c
                          DCD      0x00000078
                          DCD      ||.conststring||+0x160
                          DCD      0x00000007
                          DCD      ||.conststring||+0x164
                          DCD      0xe012e07c
                          DCD      ||.conststring||+0x168
                          DCD      0x0000007e
                          DCD      ||.conststring||+0x17c
                          DCD      0xe11477e1
                          DCD      ||.conststring||+0x188
                          DCD      0x00000054
                          DCD      ||.conststring||+0x194
                          DCD      0x0000e070
                          DCD      ||.conststring||+0x198
                          DCD      0x0000e06c
                          DCD      ||.conststring||+0x1a0
                          DCD      0x0000e07d
                          DCD      ||.conststring||+0x1a8
                          DCD      0x0000e071
                          DCD      ||.conststring||+0x1b0
                          DCD      0x0000e069
                          DCD      ||.conststring||+0x1b8
                          DCD      0x0000e07a
                          DCD      ||.conststring||+0x1bc
                          DCD      0x0000e075
                          DCD      ||.conststring||+0x1c8
                          DCD      0x0000e06b
                          DCD      ||.conststring||+0x1d4
                          DCD      0x0000e072
                          DCD      ||.conststring||+0x1e0
                          DCD      0x0000e074
                          DCD      ||.conststring||+0x1ec
                          DCD      0x00000077
                          DCD      ||.conststring||+0x1f8
                          DCD      0x0000e04a
                          DCD      ||.conststring||+0x204
                          DCD      0x0000007c
                          DCD      ||.conststring||+0x20c
                          DCD      0x0000007b
                          DCD      ||.conststring||+0x214
                          DCD      0x00000079
                          DCD      ||.conststring||+0x21c
                          DCD      0x0000e05a
                          DCD      ||.conststring||+0x224
                          DCD      0x00000071
                          DCD      ||.conststring||+0x230
                          DCD      0x00000070
                          DCD      ||.conststring||+0x238
                          DCD      0x00000069
                          DCD      ||.conststring||+0x238
                          DCD      0x00000072
                          DCD      ||.conststring||+0x238
                          DCD      0x0000007a
                          DCD      ||.conststring||+0x238
                          DCD      0x0000006b
                          DCD      ||.conststring||+0x238
                          DCD      0x00000073
                          DCD      ||.conststring||+0x238
                          DCD      0x00000074
                          DCD      ||.conststring||+0x238
                          DCD      0x0000006c
                          DCD      ||.conststring||+0x238
                          DCD      0x00000075
                          DCD      ||.conststring||+0x238
                          DCD      0x0000007d
                          DCD      ||.conststring||+0x238
                          DCD      0x0000005b
                          DCD      ||.conststring||+0x240
                          DCD      0x0000004c
                          DCD      ||.conststring||+0x244
                          DCD      0x00000052
                          DCD      ||.conststring||+0x248
                          DCD      0x00000041
                          DCD      ||.conststring||+0x24c
                          DCD      0x00000049
                          DCD      ||.conststring||+0x250
                          DCD      0x0000004a
                          DCD      ||.conststring||+0x254
                          DCD      0x00000000
                          DCD      ||.conststring||

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  00                DCB      0
000001  00                DCB      0
000002  00                DCB      0
000003  00                DCB      0
000004  4100              DCB      "A",0
000006  00                DCB      0
000007  00                DCB      0
000008  4200              DCB      "B",0
00000a  00                DCB      0
00000b  00                DCB      0
00000c  4300              DCB      "C",0
00000e  00                DCB      0
00000f  00                DCB      0
000010  4400              DCB      "D",0
000012  00                DCB      0
000013  00                DCB      0
000014  4500              DCB      "E",0
000016  00                DCB      0
000017  00                DCB      0
000018  4600              DCB      "F",0
00001a  00                DCB      0
00001b  00                DCB      0
00001c  4700              DCB      "G",0
00001e  00                DCB      0
00001f  00                DCB      0
000020  4800              DCB      "H",0
000022  00                DCB      0
000023  00                DCB      0
000024  4900              DCB      "I",0
000026  00                DCB      0
000027  00                DCB      0
000028  4a00              DCB      "J",0
00002a  00                DCB      0
00002b  00                DCB      0
00002c  4b00              DCB      "K",0
00002e  00                DCB      0
00002f  00                DCB      0
000030  4c00              DCB      "L",0
000032  00                DCB      0
000033  00                DCB      0
000034  4d00              DCB      "M",0
000036  00                DCB      0
000037  00                DCB      0
000038  4e00              DCB      "N",0
00003a  00                DCB      0
00003b  00                DCB      0
00003c  4f00              DCB      "O",0
00003e  00                DCB      0
00003f  00                DCB      0
000040  5000              DCB      "P",0
000042  00                DCB      0
000043  00                DCB      0
000044  5100              DCB      "Q",0
000046  00                DCB      0
000047  00                DCB      0
000048  5200              DCB      "R",0
00004a  00                DCB      0
00004b  00                DCB      0
00004c  5300              DCB      "S",0
00004e  00                DCB      0
00004f  00                DCB      0
000050  5400              DCB      "T",0
000052  00                DCB      0
000053  00                DCB      0
000054  5500              DCB      "U",0
000056  00                DCB      0
000057  00                DCB      0
000058  5600              DCB      "V",0
00005a  00                DCB      0
00005b  00                DCB      0
00005c  5700              DCB      "W",0
00005e  00                DCB      0
00005f  00                DCB      0
000060  5800              DCB      "X",0
000062  00                DCB      0
000063  00                DCB      0
000064  5900              DCB      "Y",0
000066  00                DCB      0
000067  00                DCB      0
000068  5a00              DCB      "Z",0
00006a  00                DCB      0
00006b  00                DCB      0
00006c  3000              DCB      "0",0
00006e  00                DCB      0
00006f  00                DCB      0
000070  3100              DCB      "1",0
000072  00                DCB      0
000073  00                DCB      0
000074  3200              DCB      "2",0
000076  00                DCB      0
000077  00                DCB      0
000078  3300              DCB      "3",0
00007a  00                DCB      0
00007b  00                DCB      0
00007c  3400              DCB      "4",0
00007e  00                DCB      0
00007f  00                DCB      0
000080  3500              DCB      "5",0
000082  00                DCB      0
000083  00                DCB      0
000084  3600              DCB      "6",0
000086  00                DCB      0
000087  00                DCB      0
000088  3700              DCB      "7",0
00008a  00                DCB      0
00008b  00                DCB      0
00008c  3800              DCB      "8",0
00008e  00                DCB      0
00008f  00                DCB      0
000090  3900              DCB      "9",0
000092  00                DCB      0
000093  00                DCB      0
000094  6000              DCB      "`",0
000096  00                DCB      0
000097  00                DCB      0
000098  2d00              DCB      "-",0
00009a  00                DCB      0
00009b  00                DCB      0
00009c  3d00              DCB      "=",0
00009e  00                DCB      0
00009f  00                DCB      0
0000a0  5c00              DCB      "\\",0
0000a2  00                DCB      0
0000a3  00                DCB      0
0000a4  4261636b          DCB      "Backspace",0
0000a8  73706163
0000ac  6500    
0000ae  00                DCB      0
0000af  00                DCB      0
0000b0  53706163          DCB      "Space",0
0000b4  6500    
0000b6  00                DCB      0
0000b7  00                DCB      0
0000b8  54616200          DCB      "Tab",0
0000bc  43617073          DCB      "CapsLk",0
0000c0  4c6b00  
0000c3  00                DCB      0
0000c4  53686966          DCB      "Shift Left",0
0000c8  74204c65
0000cc  667400  
0000cf  00                DCB      0
0000d0  4374726c          DCB      "Ctrl Left",0
0000d4  204c6566
0000d8  7400    
0000da  00                DCB      0
0000db  00                DCB      0
0000dc  47554920          DCB      "GUI Left",0
0000e0  4c656674
0000e4  00      
0000e5  00                DCB      0
0000e6  00                DCB      0
0000e7  00                DCB      0
0000e8  416c7420          DCB      "Alt Left",0
0000ec  4c656674
0000f0  00      
0000f1  00                DCB      0
0000f2  00                DCB      0
0000f3  00                DCB      0
0000f4  53686966          DCB      "Shift Right",0
0000f8  74205269
0000fc  67687400
000100  4374726c          DCB      "Ctrl Right",0
000104  20526967
000108  687400  
00010b  00                DCB      0
00010c  47756920          DCB      "Gui Right",0
000110  52696768
000114  7400    
000116  00                DCB      0
000117  00                DCB      0
000118  416c7420          DCB      "Alt Right",0
00011c  52696768
000120  7400    
000122  00                DCB      0
000123  00                DCB      0
000124  41707073          DCB      "Apps",0
000128  00      
000129  00                DCB      0
00012a  00                DCB      0
00012b  00                DCB      0
00012c  456e7465          DCB      "Enter",0
000130  7200    
000132  00                DCB      0
000133  00                DCB      0
000134  45534300          DCB      "ESC",0
000138  463100            DCB      "F1",0
00013b  00                DCB      0
00013c  463200            DCB      "F2",0
00013f  00                DCB      0
000140  463300            DCB      "F3",0
000143  00                DCB      0
000144  463400            DCB      "F4",0
000147  00                DCB      0
000148  463500            DCB      "F5",0
00014b  00                DCB      0
00014c  463600            DCB      "F6",0
00014f  00                DCB      0
000150  463700            DCB      "F7",0
000153  00                DCB      0
000154  463800            DCB      "F8",0
000157  00                DCB      0
000158  463900            DCB      "F9",0
00015b  00                DCB      0
00015c  46313000          DCB      "F10",0
000160  46313100          DCB      "F11",0
000164  46313200          DCB      "F12",0
000168  5072696e          DCB      "Print Screen/SysRq",0
00016c  74205363
000170  7265656e
000174  2f537973
000178  527100  
00017b  00                DCB      0
00017c  5363726f          DCB      "Scroll Lock",0
000180  6c6c204c
000184  6f636b00
000188  50617573          DCB      "Pause/Break",0
00018c  652f4272
000190  65616b00
000194  5b00              DCB      "[",0
000196  00                DCB      0
000197  00                DCB      0
000198  496e7365          DCB      "Insert",0
00019c  727400  
00019f  00                DCB      0
0001a0  486f6d65          DCB      "Home",0
0001a4  00      
0001a5  00                DCB      0
0001a6  00                DCB      0
0001a7  00                DCB      0
0001a8  50616765          DCB      "Page Up",0
0001ac  20557000
0001b0  44656c65          DCB      "Delete",0
0001b4  746500  
0001b7  00                DCB      0
0001b8  456e6400          DCB      "End",0
0001bc  50616765          DCB      "Page Down",0
0001c0  20446f77
0001c4  6e00    
0001c6  00                DCB      0
0001c7  00                DCB      0
0001c8  55702041          DCB      "Up Arrow",0
0001cc  72726f77
0001d0  00      
0001d1  00                DCB      0
0001d2  00                DCB      0
0001d3  00                DCB      0
0001d4  4c656674          DCB      "Left Arrow",0
0001d8  20417272
0001dc  6f7700  
0001df  00                DCB      0
0001e0  446f776e          DCB      "Down Arrow",0
0001e4  20417272
0001e8  6f7700  
0001eb  00                DCB      0
0001ec  52696768          DCB      "Right Arrow",0
0001f0  74204172
0001f4  726f7700
0001f8  4e756d20          DCB      "Num Lock",0
0001fc  4c6f636b
000200  00      
000201  00                DCB      0
000202  00                DCB      0
000203  00                DCB      0
000204  4b50202f          DCB      "KP /",0
000208  00      
000209  00                DCB      0
00020a  00                DCB      0
00020b  00                DCB      0
00020c  4b50202a          DCB      "KP *",0
000210  00      
000211  00                DCB      0
000212  00                DCB      0
000213  00                DCB      0
000214  4b50202d          DCB      "KP -",0
000218  00      
000219  00                DCB      0
00021a  00                DCB      0
00021b  00                DCB      0
00021c  4b50202b          DCB      "KP +",0
000220  00      
000221  00                DCB      0
000222  00                DCB      0
000223  00                DCB      0
000224  4b502045          DCB      "KP Enter",0
000228  6e746572
00022c  00      
00022d  00                DCB      0
00022e  00                DCB      0
00022f  00                DCB      0
000230  4b50202e          DCB      "KP .",0
000234  00      
000235  00                DCB      0
000236  00                DCB      0
000237  00                DCB      0
000238  4b502030          DCB      "KP 0",0
00023c  00      
00023d  00                DCB      0
00023e  00                DCB      0
00023f  00                DCB      0
000240  5d00              DCB      "]",0
000242  00                DCB      0
000243  00                DCB      0
000244  3b00              DCB      ";",0
000246  00                DCB      0
000247  00                DCB      0
000248  2700              DCB      "'",0
00024a  00                DCB      0
00024b  00                DCB      0
00024c  2c00              DCB      ",",0
00024e  00                DCB      0
00024f  00                DCB      0
000250  2e00              DCB      ".",0
000252  00                DCB      0
000253  00                DCB      0
000254  2f00              DCB      "/",0
000256  00                DCB      0
000257  00                DCB      0
000258  34383032          DCB      "480272_1.BIN",0
00025c  37325f31
000260  2e42494e
000264  00      
000265  00                DCB      0
000266  00                DCB      0
000267  00                DCB      0
000268  34383032          DCB      "480272_2.BIN",0
00026c  37325f32
000270  2e42494e
000274  00      
000275  00                DCB      0
000276  00                DCB      0
000277  00                DCB      0
000278  34383032          DCB      "480272_3.BIN",0
00027c  37325f33
000280  2e42494e
000284  00      
000285  00                DCB      0
000286  00                DCB      0
000287  00                DCB      0
000288  38303034          DCB      "800480_1.BIN",0
00028c  38305f31
000290  2e42494e
000294  00      
000295  00                DCB      0
000296  00                DCB      0
000297  00                DCB      0
000298  38303034          DCB      "800480_2.BIN",0
00029c  38305f32
0002a0  2e42494e
0002a4  00      
0002a5  00                DCB      0
0002a6  00                DCB      0
0002a7  00                DCB      0
0002a8  38303034          DCB      "800480_3.BIN",0
0002ac  38305f33
0002b0  2e42494e
0002b4  00      

                          AREA ||.data||, DATA, ALIGN=2

                  s_pic
000000  0000              DCB      0x00,0x00
                  FontLabel
000002  0000              DCB      0x00,0x00
                          DCD      0x00000000
000008  00000000          DCB      0x00,0x00,0x00,0x00
                  g_NandFileName_480x272
                          DCD      ||.conststring||+0x258
                          DCD      ||.conststring||+0x268
                          DCD      ||.conststring||+0x278
                  g_NandFileName_800x480
                          DCD      ||.conststring||+0x288
                          DCD      ||.conststring||+0x298
                          DCD      ||.conststring||+0x2a8

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\touch_test.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_touch_test_c_c7362639____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_touch_test_c_c7362639____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_touch_test_c_c7362639____REVSH|
#line 128
|__asm___12_touch_test_c_c7362639____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
