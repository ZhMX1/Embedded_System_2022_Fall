; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_ts_ft5x06.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_ts_ft5x06.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_ts_ft5x06.crf ..\..\User\bsp\src\bsp_ts_ft5x06.c]
                          THUMB

                          AREA ||i.FT5X06_InitHard||, CODE, READONLY, ALIGN=2

                  FT5X06_InitHard PROC
;;;43     */
;;;44     void FT5X06_InitHard(void)
000000  b508              PUSH     {r3,lr}
;;;45     {	
;;;46     	/* 配置触摸笔中断引脚为输入 */
;;;47     	{
;;;48     		GPIO_InitTypeDef GPIO_InitStructure;
;;;49     
;;;50     		/* 第1步：打开GPIO时钟 */
;;;51     		RCC_APB2PeriphClockCmd(RCC_TP_INT, ENABLE);
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;52     
;;;53     		/* 第2步：配置所有的按键GPIO为浮动输入模式(实际上CPU复位后就是输入状态) */
;;;54     		GPIO_InitStructure.GPIO_Pin = PIN_TP_INT;
00000a  2020              MOVS     r0,#0x20
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;55     		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;	/* 输入浮空模式 */
000010  2004              MOVS     r0,#4
000012  f88d0003          STRB     r0,[sp,#3]
;;;56     		GPIO_Init(PORT_TP_INT, &GPIO_InitStructure);	
000016  4669              MOV      r1,sp
000018  4804              LDR      r0,|L1.44|
00001a  f7fffffe          BL       GPIO_Init
;;;57     	}
;;;58     	
;;;59     #if 0	/* 打印全部的寄存器数据 for debug */
;;;60     	{
;;;61     		uint8_t i;
;;;62     		uint8_t reg_value;
;;;63     		
;;;64     		printf_dbg("[FTS] Touch Chip\r\n");
;;;65     		
;;;66     		bsp_DelayMS(10);
;;;67     		
;;;68     		for (i = 0; i < 255; i++)
;;;69     		{
;;;70     			FT5X06_ReadReg(i, &reg_value, 1);
;;;71     			printf_dbg(" 0x%02X = 0x%02X\r\n", i, reg_value);
;;;72     		}
;;;73     	}
;;;74     #endif	
;;;75     	
;;;76     #if 0
;;;77     	{
;;;78     		uint8_t reg_addr;
;;;79     		uint8_t reg_value;
;;;80     		
;;;81     		//get some register information
;;;82     		reg_addr = FT5X06_REG_FW_VER;
;;;83     		FT5X06_ReadReg(reg_addr, &reg_value, 1);
;;;84     		printf_dbg("[FTS] Firmware version = 0x%x\r\n", reg_value);
;;;85     		
;;;86     		reg_addr = FT5X06_REG_POINT_RATE;
;;;87     		FT5X06_ReadReg(reg_addr, &reg_value, 1);
;;;88     		printf_dbg("[FTS] report rate is %dHz.\r\n", reg_value * 10);
;;;89     		
;;;90     		reg_addr = FT5X06_REG_THGROUP;
;;;91     		FT5X06_ReadReg(reg_addr, &reg_value, 1);
;;;92     		printf_dbg("[FTS] touch threshold is %d.\r\n", reg_value * 4);
;;;93     	}
;;;94     #endif	
;;;95     	
;;;96     	g_tFT5X06.TimerCount = 0;
00001e  4804              LDR      r0,|L1.48|
000020  2100              MOVS     r1,#0
000022  7081              STRB     r1,[r0,#2]
;;;97     	g_tFT5X06.Enable = 1;
000024  2101              MOVS     r1,#1
000026  7041              STRB     r1,[r0,#1]
;;;98     }
000028  bd08              POP      {r3,pc}
;;;99     
                          ENDP

00002a  0000              DCW      0x0000
                  |L1.44|
                          DCD      0x40011000
                  |L1.48|
                          DCD      ||.bss||

                          AREA ||i.FT5X06_PenInt||, CODE, READONLY, ALIGN=2

                  FT5X06_PenInt PROC
;;;107    */
;;;108    uint8_t FT5X06_PenInt(void)
000000  4803              LDR      r0,|L2.16|
;;;109    {
;;;110    	if ((PORT_TP_INT->IDR & PIN_TP_INT) == 0)
000002  6880              LDR      r0,[r0,#8]
000004  0680              LSLS     r0,r0,#26
000006  d401              BMI      |L2.12|
;;;111    	{
;;;112    		return 1;
000008  2001              MOVS     r0,#1
;;;113    	}
;;;114    	return 0;
;;;115    }
00000a  4770              BX       lr
                  |L2.12|
00000c  2000              MOVS     r0,#0                 ;114
00000e  4770              BX       lr
;;;116    
                          ENDP

                  |L2.16|
                          DCD      0x40011000

                          AREA ||i.FT5X06_ReadID||, CODE, READONLY, ALIGN=2

                  FT5X06_ReadID PROC
;;;349    */
;;;350    uint8_t FT5X06_ReadID(void)
000000  b508              PUSH     {r3,lr}
;;;351    {
;;;352    	uint8_t id;
;;;353    	
;;;354    	FT5X06_ReadReg(FTS_REG_CHIP_ID, &id, 1);
000002  2201              MOVS     r2,#1
000004  4669              MOV      r1,sp
000006  20a3              MOVS     r0,#0xa3
000008  f7fffffe          BL       FT5X06_ReadReg
;;;355    	
;;;356    	g_tFT5X06.ChipID = id;		/* 保存id */
00000c  4902              LDR      r1,|L3.24|
00000e  f89d0000          LDRB     r0,[sp,#0]
000012  7008              STRB     r0,[r1,#0]
;;;357    	return id;
;;;358    }
000014  bd08              POP      {r3,pc}
;;;359    
                          ENDP

000016  0000              DCW      0x0000
                  |L3.24|
                          DCD      ||.bss||

                          AREA ||i.FT5X06_ReadReg||, CODE, READONLY, ALIGN=1

                  FT5X06_ReadReg PROC
;;;126    */
;;;127    static void FT5X06_ReadReg(uint16_t _usRegAddr, uint8_t *_pRegBuf, uint8_t _ucLen)
000000  b570              PUSH     {r4-r6,lr}
;;;128    {
000002  4615              MOV      r5,r2
000004  460e              MOV      r6,r1
000006  4604              MOV      r4,r0
;;;129    	uint8_t i;
;;;130    
;;;131        i2c_Start();					/* 总线开始信号 */
000008  f7fffffe          BL       i2c_Start
;;;132    
;;;133        i2c_SendByte(FT5X06_I2C_ADDR);	/* 发送设备地址+写信号 */
00000c  2070              MOVS     r0,#0x70
00000e  f7fffffe          BL       i2c_SendByte
;;;134    	i2c_WaitAck();
000012  f7fffffe          BL       i2c_WaitAck
;;;135    
;;;136        //i2c_SendByte(_usRegAddr >> 8);	/* 地址高8位 */
;;;137    	//i2c_WaitAck();
;;;138    
;;;139        i2c_SendByte(_usRegAddr);		/* 地址低8位 */
000016  b2e0              UXTB     r0,r4
000018  f7fffffe          BL       i2c_SendByte
;;;140    	i2c_WaitAck();
00001c  f7fffffe          BL       i2c_WaitAck
;;;141    
;;;142    	i2c_Start();
000020  f7fffffe          BL       i2c_Start
;;;143        i2c_SendByte(FT5X06_I2C_ADDR + 0x01);	/* 发送设备地址+读信号 */
000024  2071              MOVS     r0,#0x71
000026  f7fffffe          BL       i2c_SendByte
;;;144    	i2c_WaitAck();
00002a  f7fffffe          BL       i2c_WaitAck
;;;145    
;;;146    	for (i = 0; i < _ucLen - 1; i++)
00002e  2400              MOVS     r4,#0
000030  1e6d              SUBS     r5,r5,#1
000032  e006              B        |L4.66|
                  |L4.52|
;;;147    	{
;;;148    	    _pRegBuf[i] = i2c_ReadByte();	/* 读寄存器数据 */
000034  f7fffffe          BL       i2c_ReadByte
000038  5530              STRB     r0,[r6,r4]
;;;149    		i2c_Ack();
00003a  f7fffffe          BL       i2c_Ack
00003e  1c64              ADDS     r4,r4,#1
000040  b2e4              UXTB     r4,r4                 ;146
                  |L4.66|
000042  42ac              CMP      r4,r5                 ;146
000044  dbf6              BLT      |L4.52|
;;;150    	}
;;;151    
;;;152    	/* 最后一个数据 */
;;;153    	 _pRegBuf[i] = i2c_ReadByte();		/* 读寄存器数据 */
000046  f7fffffe          BL       i2c_ReadByte
00004a  5530              STRB     r0,[r6,r4]
;;;154    	i2c_NAck();
00004c  f7fffffe          BL       i2c_NAck
;;;155    
;;;156        i2c_Stop();							/* 总线停止信号 */
000050  e8bd4070          POP      {r4-r6,lr}
000054  f7ffbffe          B.W      i2c_Stop
;;;157    }
;;;158    
                          ENDP


                          AREA ||i.FT5X06_Scan||, CODE, READONLY, ALIGN=2

                  FT5X06_Scan PROC
;;;179    */
;;;180    void FT5X06_Scan(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;181    {
;;;182    	uint8_t buf[CFG_POINT_READ_BUF];
;;;183    	uint8_t i;
;;;184    	static uint8_t s_tp_down = 0;
;;;185    	uint16_t x, y;
;;;186    	static uint16_t x_save, y_save;
;;;187    	static uint8_t s_no_touch = 0;
;;;188    
;;;189    	if (g_tFT5X06.Enable == 0)
000002  4d48              LDR      r5,|L5.292|
000004  b089              SUB      sp,sp,#0x24           ;181
000006  7868              LDRB     r0,[r5,#1]  ; g_tFT5X06
000008  2800              CMP      r0,#0                 ;181
00000a  d063              BEQ      |L5.212|
;;;190    	{
;;;191    		return;
;;;192    	}
;;;193    	
;;;194    	/* 20ms 执行一次 */
;;;195    	if (g_tFT5X06.TimerCount < 10)
00000c  78a8              LDRB     r0,[r5,#2]  ; g_tFT5X06
00000e  280a              CMP      r0,#0xa
000010  d360              BCC      |L5.212|
;;;196    	{
;;;197    		return;
;;;198    	}
;;;199    
;;;200    	g_tFT5X06.TimerCount = 0;
000012  2600              MOVS     r6,#0
000014  70ae              STRB     r6,[r5,#2]
;;;201    	
;;;202    	if (FT5X06_PenInt() == 0)
000016  f7fffffe          BL       FT5X06_PenInt
;;;203    	{
;;;204    		/* INT引脚出现周期性的高低电平，周期18ms左右 */
;;;205    		if (s_tp_down == 1)
00001a  4c43              LDR      r4,|L5.296|
00001c  b3f0              CBZ      r0,|L5.156|
;;;206    		{
;;;207    			if (++s_no_touch > 2)
;;;208    			{
;;;209    				s_no_touch = 0;
;;;210    				s_tp_down = 0;
;;;211    				TOUCH_PutKey(TOUCH_RELEASE, x_save, y_save);	/* 释放 */
;;;212    			}
;;;213    		}		
;;;214    		return;
;;;215    	}
;;;216    	
;;;217    	s_no_touch = 0;
00001e  7066              STRB     r6,[r4,#1]
;;;218    	
;;;219    	FT5X06_ReadReg(2, buf, 1);		
000020  2201              MOVS     r2,#1
000022  4669              MOV      r1,sp
000024  2002              MOVS     r0,#2
000026  f7fffffe          BL       FT5X06_ReadReg
;;;220    	if ((buf[0] & 0x07) == 0)
00002a  f89d0000          LDRB     r0,[sp,#0]
00002e  0740              LSLS     r0,r0,#29
000030  d05d              BEQ      |L5.238|
;;;221    	{
;;;222    		if (s_tp_down == 1)
;;;223    		{
;;;224    			s_tp_down = 0;
;;;225    			TOUCH_PutKey(TOUCH_RELEASE, x_save, y_save);	/* 释放 */
;;;226    		}
;;;227    		return;
;;;228    	}
;;;229    	
;;;230    	/* 有触摸，读取完整的数据 */
;;;231    	FT5X06_ReadReg(0, buf, CFG_POINT_READ_BUF);
000032  2221              MOVS     r2,#0x21
000034  4669              MOV      r1,sp
000036  2000              MOVS     r0,#0
000038  f7fffffe          BL       FT5X06_ReadReg
;;;232    	
;;;233    	g_tFT5X06.Count = buf[2] & 0x07; 
00003c  f89d0002          LDRB     r0,[sp,#2]
000040  f0000007          AND      r0,r0,#7
000044  70e8              STRB     r0,[r5,#3]
;;;234    	if (g_tFT5X06.Count > FT5X06_TOUCH_POINTS)
000046  2805              CMP      r0,#5
000048  d901              BLS      |L5.78|
;;;235    	{
;;;236        	g_tFT5X06.Count = FT5X06_TOUCH_POINTS;
00004a  2005              MOVS     r0,#5
00004c  70e8              STRB     r0,[r5,#3]
                  |L5.78|
;;;237    	}
;;;238    	
;;;239    	g_tFT5X06.Count = 0;
00004e  70ee              STRB     r6,[r5,#3]
;;;240    	//for (i = 0; i < FT5X06_TOUCH_POINTS; i++)
;;;241    	for (i = 0; i < 1; i++)
000050  2000              MOVS     r0,#0
000052  46ee              MOV      lr,sp                 ;182
                  |L5.84|
;;;242    	{
;;;243    		uint8_t pointid;
;;;244    		
;;;245    		pointid = (buf[5 + 6*i]) >> 4;
000054  eb000140          ADD      r1,r0,r0,LSL #1
000058  eb0e0141          ADD      r1,lr,r1,LSL #1
00005c  794b              LDRB     r3,[r1,#5]
00005e  091a              LSRS     r2,r3,#4
;;;246    		if (pointid >= 0x0f)
000060  2a0f              CMP      r2,#0xf
000062  d21a              BCS      |L5.154|
;;;247    		{
;;;248    			break;
;;;249    		}
;;;250    		else
;;;251    		{
;;;252    			g_tFT5X06.Count++;
000064  78ee              LDRB     r6,[r5,#3]  ; g_tFT5X06
;;;253            	g_tFT5X06.X[i] = (int16_t)(buf[3 + 6*i] & 0x0F)<<8 | (int16_t)buf[4 + 6*i];
;;;254            	g_tFT5X06.Y[i] = (int16_t)(buf[5 + 6*i] & 0x0F)<<8 | (int16_t)buf[6 + 6*i];
000066  f003030f          AND      r3,r3,#0xf
00006a  1c76              ADDS     r6,r6,#1              ;252
00006c  70ee              STRB     r6,[r5,#3]            ;252
00006e  78cf              LDRB     r7,[r1,#3]            ;253
000070  790e              LDRB     r6,[r1,#4]            ;253
000072  f0070c0f          AND      r12,r7,#0xf           ;253
000076  ea462c0c          ORR      r12,r6,r12,LSL #8     ;253
00007a  eb050640          ADD      r6,r5,r0,LSL #1       ;253
00007e  f8a6c004          STRH     r12,[r6,#4]           ;253
000082  7989              LDRB     r1,[r1,#6]
000084  ea412103          ORR      r1,r1,r3,LSL #8
000088  81f1              STRH     r1,[r6,#0xe]
;;;255            	g_tFT5X06.Event[i] = buf[0x3 + 6*i] >> 6;
00008a  09bb              LSRS     r3,r7,#6
00008c  1829              ADDS     r1,r5,r0
;;;256            	g_tFT5X06.id[i] = (buf[5 + 6*i])>>4;
00008e  1c40              ADDS     r0,r0,#1
000090  774b              STRB     r3,[r1,#0x1d]         ;255
000092  760a              STRB     r2,[r1,#0x18]
000094  f01000ff          ANDS     r0,r0,#0xff           ;241
000098  d0dc              BEQ      |L5.84|
                  |L5.154|
;;;257        	}
;;;258        }
;;;259    
;;;260    	/* 检测按下 */
;;;261    	{
;;;262    		if (g_tFT5X06.ChipID == 0x55)       /* 4.3寸 480 * 272 */
00009a  e000              B        |L5.158|
                  |L5.156|
00009c  e01c              B        |L5.216|
                  |L5.158|
00009e  782e              LDRB     r6,[r5,#0]  ; g_tFT5X06
;;;263    		{
;;;264    			x = g_tFT5X06.Y[0];
;;;265    			y = g_tFT5X06.X[0];	
;;;266    			
;;;267    			/* 判断值域 */
;;;268    			if (x > 479)
0000a0  f44f72f0          MOV      r2,#0x1e0
;;;269    			{
;;;270    				x = 479;
0000a4  1e51              SUBS     r1,r2,#1
0000a6  2e55              CMP      r6,#0x55              ;262
0000a8  d02b              BEQ      |L5.258|
;;;271    			}
;;;272    			
;;;273    			if (y > 271)
;;;274    			{
;;;275    				y = 271;
;;;276    			}			
;;;277    		}
;;;278    		else if (g_tFT5X06.ChipID == 0x0A)	/* 5.0寸 800 * 480 */
;;;279    		{
;;;280    			x = g_tFT5X06.X[0];
0000aa  88ae              LDRH     r6,[r5,#4]  ; g_tFT5X06
;;;281    			y = g_tFT5X06.Y[0];	
0000ac  89ef              LDRH     r7,[r5,#0xe]  ; g_tFT5X06
;;;282    			
;;;283    			/* 判断值域 */
;;;284    			if (x > 799)
;;;285    			{
;;;286    				x = 799;
0000ae  f240301f          MOV      r0,#0x31f
0000b2  f5b67f48          CMP      r6,#0x320             ;284
0000b6  d300              BCC      |L5.186|
0000b8  4606              MOV      r6,r0
                  |L5.186|
;;;287    			}			
;;;288    			if (y > 479)
;;;289    			{
;;;290    				y = 479;
;;;291    			}			
;;;292    		}
;;;293    		else	/* id == 0x06 表示7寸电容屏（FT芯片） */
;;;294    		{
;;;295    			x = g_tFT5X06.X[0];
;;;296    			y = g_tFT5X06.Y[0];	
;;;297    			
;;;298    			/* 判断值域 */
;;;299    			if (x > 799)
;;;300    			{
;;;301    				x = 799;
;;;302    			}			
;;;303    			if (y > 479)
0000ba  4297              CMP      r7,r2
0000bc  d300              BCC      |L5.192|
;;;304    			{
;;;305    				y = 479;
0000be  460f              MOV      r7,r1
                  |L5.192|
;;;306    			}			
;;;307    		}
;;;308    	}
;;;309    	
;;;310    	if (s_tp_down == 0)
0000c0  7820              LDRB     r0,[r4,#0]  ; s_tp_down
0000c2  b348              CBZ      r0,|L5.280|
;;;311    	{
;;;312    		s_tp_down = 1;
;;;313    		
;;;314    		TOUCH_PutKey(TOUCH_DOWN, x, y);
;;;315    	}
;;;316    	else
;;;317    	{
;;;318    		TOUCH_PutKey(TOUCH_MOVE, x, y);
0000c4  463a              MOV      r2,r7
0000c6  4631              MOV      r1,r6
0000c8  f05f0002          MOVS.W   r0,#2
                  |L5.204|
0000cc  f7fffffe          BL       TOUCH_PutKey
;;;319    	}
;;;320    	x_save = x;	/* 保存坐标，用于释放事件 */
0000d0  8066              STRH     r6,[r4,#2]
;;;321    	y_save = y;
0000d2  80a7              STRH     r7,[r4,#4]
                  |L5.212|
;;;322    
;;;323    #if 0
;;;324    	for (i = 0; i < CFG_POINT_READ_BUF; i++)
;;;325    	{
;;;326    		printf("%02X ", buf[i]);
;;;327    	}
;;;328    	printf("\r\n");
;;;329    #endif
;;;330    
;;;331    #if 0  /* 打印5个坐标点数据 */	
;;;332    	printf("(%5d,%5d,%3d,%3d) ",  g_tFT5X06.X[0], g_tFT5X06.Y[0], g_tFT5X06.Event[0],  g_tFT5X06.id[0]);
;;;333    	printf("(%5d,%5d,%3d,%3d) ",  g_tFT5X06.X[1], g_tFT5X06.Y[1], g_tFT5X06.Event[1],  g_tFT5X06.id[1]);
;;;334    	printf("(%5d,%5d,%3d,%3d) ",  g_tFT5X06.X[2], g_tFT5X06.Y[2], g_tFT5X06.Event[2],  g_tFT5X06.id[2]);
;;;335    	printf("(%5d,%5d,%3d,%3d) ",  g_tFT5X06.X[3], g_tFT5X06.Y[3], g_tFT5X06.Event[3],  g_tFT5X06.id[3]);
;;;336    	printf("(%5d,%5d,%3d,%3d) ",  g_tFT5X06.X[4], g_tFT5X06.Y[4], g_tFT5X06.Event[4],  g_tFT5X06.id[4]);
;;;337    	printf("\r\n");
;;;338    #endif	
;;;339    }
0000d4  b009              ADD      sp,sp,#0x24
0000d6  bdf0              POP      {r4-r7,pc}
                  |L5.216|
0000d8  7820              LDRB     r0,[r4,#0]            ;205  ; s_tp_down
0000da  2801              CMP      r0,#1                 ;205
0000dc  d1fa              BNE      |L5.212|
0000de  7860              LDRB     r0,[r4,#1]            ;207  ; s_no_touch
0000e0  1c40              ADDS     r0,r0,#1              ;207
0000e2  b2c0              UXTB     r0,r0                 ;207
0000e4  7060              STRB     r0,[r4,#1]            ;207
0000e6  2802              CMP      r0,#2                 ;207
0000e8  d9f4              BLS      |L5.212|
0000ea  7066              STRB     r6,[r4,#1]            ;209
0000ec  e002              B        |L5.244|
                  |L5.238|
0000ee  7820              LDRB     r0,[r4,#0]            ;222  ; s_tp_down
0000f0  2801              CMP      r0,#1                 ;222
0000f2  d1ef              BNE      |L5.212|
                  |L5.244|
0000f4  7026              STRB     r6,[r4,#0]            ;224
0000f6  88a2              LDRH     r2,[r4,#4]            ;225  ; y_save
0000f8  8861              LDRH     r1,[r4,#2]            ;225  ; x_save
0000fa  2003              MOVS     r0,#3                 ;225
0000fc  f7fffffe          BL       TOUCH_PutKey
000100  e7e8              B        |L5.212|
                  |L5.258|
000102  89ee              LDRH     r6,[r5,#0xe]          ;264  ; g_tFT5X06
000104  88af              LDRH     r7,[r5,#4]            ;265  ; g_tFT5X06
000106  4296              CMP      r6,r2                 ;268
000108  d300              BCC      |L5.268|
00010a  460e              MOV      r6,r1                 ;270
                  |L5.268|
00010c  f5b77f88          CMP      r7,#0x110             ;273
000110  d3d6              BCC      |L5.192|
000112  f240170f          MOV      r7,#0x10f             ;275
000116  e7d3              B        |L5.192|
                  |L5.280|
000118  2001              MOVS     r0,#1                 ;312
00011a  7020              STRB     r0,[r4,#0]            ;312
00011c  463a              MOV      r2,r7                 ;314
00011e  4631              MOV      r1,r6                 ;314
000120  e7d4              B        |L5.204|
;;;340    
                          ENDP

000122  0000              DCW      0x0000
                  |L5.292|
                          DCD      ||.bss||
                  |L5.296|
                          DCD      ||.data||

                          AREA ||i.FT5X06_Timer1ms||, CODE, READONLY, ALIGN=2

                  FT5X06_Timer1ms PROC
;;;166    */
;;;167    void FT5X06_Timer1ms(void)
000000  4802              LDR      r0,|L6.12|
;;;168    {
;;;169    	g_tFT5X06.TimerCount++;
000002  7881              LDRB     r1,[r0,#2]  ; g_tFT5X06
000004  1c49              ADDS     r1,r1,#1
000006  7081              STRB     r1,[r0,#2]
;;;170    }
000008  4770              BX       lr
;;;171    
                          ENDP

00000a  0000              DCW      0x0000
                  |L6.12|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  g_tFT5X06
                          %        34

                          AREA ||.data||, DATA, ALIGN=1

                  s_tp_down
000000  00                DCB      0x00
                  s_no_touch
000001  00                DCB      0x00
                  x_save
000002  0000              DCB      0x00,0x00
                  y_save
000004  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_ts_ft5x06.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_ts_ft5x06_c_4fa934f7____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_bsp_ts_ft5x06_c_4fa934f7____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_ts_ft5x06_c_4fa934f7____REVSH|
#line 128
|__asm___15_bsp_ts_ft5x06_c_4fa934f7____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
