; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_rs485_led.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_rs485_led.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_rs485_led.crf ..\..\User\bsp\src\bsp_rs485_led.c]
                          THUMB

                          AREA ||i.LED485_DispNumber||, CODE, READONLY, ALIGN=1

                  LED485_DispNumber PROC
;;;197    */
;;;198    void LED485_DispNumber(uint8_t _addr, int16_t _iNumber)
000000  b51c              PUSH     {r2-r4,lr}
;;;199    {
;;;200    	uint8_t txbuf[6];
;;;201    
;;;202    	txbuf[0] = _addr;			/* 485地址 */
000002  f88d0000          STRB     r0,[sp,#0]
;;;203    	txbuf[1] = 0x06;			/* 功能码 */
000006  2006              MOVS     r0,#6
000008  f88d0001          STRB     r0,[sp,#1]
;;;204    	txbuf[2] = 0x00;			/* 寄存器 ：00 88 */
00000c  2000              MOVS     r0,#0
00000e  f88d0002          STRB     r0,[sp,#2]
;;;205    	txbuf[3] = 0x88;
000012  2088              MOVS     r0,#0x88
000014  f88d0003          STRB     r0,[sp,#3]
;;;206    	txbuf[4] = _iNumber >> 8;	/* 要显示的整数 */
000018  0a08              LSRS     r0,r1,#8
00001a  f88d0004          STRB     r0,[sp,#4]
;;;207    	txbuf[5] = _iNumber;
00001e  f88d1005          STRB     r1,[sp,#5]
;;;208    
;;;209    	MODBUS_SendWithCRC(txbuf, 6);
000022  2106              MOVS     r1,#6
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       MODBUS_SendWithCRC
;;;210    }
00002a  bd1c              POP      {r2-r4,pc}
;;;211    
                          ENDP


                          AREA ||i.LED485_DispNumberA||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  LED485_DispNumberA PROC
;;;131    */
;;;132    void LED485_DispNumberA(uint8_t _addr, int16_t _iNumber)
000000  b51f              PUSH     {r0-r4,lr}
;;;133    {
;;;134    	char buf[16];
;;;135    
;;;136    	sprintf(buf, "$%03d,%3d#", _addr, _iNumber);
000002  460b              MOV      r3,r1
000004  4602              MOV      r2,r0
000006  a104              ADR      r1,|L2.24|
000008  4668              MOV      r0,sp
00000a  f7fffffe          BL       __2sprintf
;;;137    	RS485_SendStr(buf);
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       RS485_SendStr
;;;138    }
000014  bd1f              POP      {r0-r4,pc}
;;;139    
                          ENDP

000016  0000              DCW      0x0000
                  |L2.24|
000018  24253033          DCB      "$$%03d,%3d#",0
00001c  642c2533
000020  642300  
000023  00                DCB      0

                          AREA ||i.LED485_DispNumberWithDot||, CODE, READONLY, ALIGN=1

                  LED485_DispNumberWithDot PROC
;;;290    */
;;;291    void LED485_DispNumberWithDot(uint8_t _addr, int16_t _iNumber, uint8_t _dot)
000000  b50e              PUSH     {r1-r3,lr}
;;;292    {
;;;293    /*
;;;294    	PLC发送  :0110 00 90 00 02 04 00 0201 EA DB 1C
;;;295    	?  01:   数码管屏的站号（RS485地址）
;;;296    	?  10 :   功能码，表示写多个寄存器
;;;297    	?  00 90 :   数码管屏的显示寄存器(带小数点和正负号的整数)
;;;298    	?  00 02:  寄存器个数
;;;299    	?  04:  数据个数（字节数）
;;;300    	?  00 02：  00 表示正负号（00=正数；01=负数，数字前显示-）
;;;301    				02 表示小数点位数，0表示无小数点。2表示小数点后有2位数字
;;;302    	?  01 EA:   2位整数，高字节在前。01 EA表示十进制 490
;;;303    	?  DB 1C  :   二个字节CRC码
;;;304    	此命令将显示“4.90”
;;;305    	数码管屏返回 ：01 10 00 90 00 02 41 E5
;;;306    */
;;;307    	uint8_t txbuf[11];
;;;308    
;;;309    	txbuf[0] = _addr;			/* 485地址 */
;;;310    	txbuf[1] = 0x10;			/* 功能码 10*/
;;;311    
;;;312    	txbuf[2] = 0x00;			/* 地址寄存器 ：00 90 */
;;;313    	txbuf[3] = 0x90;
000002  2390              MOVS     r3,#0x90
000004  f88d0000          STRB     r0,[sp,#0]            ;309
000008  2010              MOVS     r0,#0x10              ;310
00000a  f88d0001          STRB     r0,[sp,#1]            ;310
00000e  2000              MOVS     r0,#0                 ;312
000010  f88d0002          STRB     r0,[sp,#2]            ;312
000014  f88d3003          STRB     r3,[sp,#3]
;;;314    
;;;315    	txbuf[4] = 0x00;			/* 寄存器个数 */
000018  f88d0004          STRB     r0,[sp,#4]
;;;316    	txbuf[5] = 0x02;
00001c  2302              MOVS     r3,#2
00001e  f88d3005          STRB     r3,[sp,#5]
;;;317    
;;;318    	txbuf[6] = 0x04;			/* 数据个数 */
000022  2304              MOVS     r3,#4
000024  f88d3006          STRB     r3,[sp,#6]
;;;319    
;;;320    	if (_iNumber < 0)			/* 显示正负号 */
000028  2900              CMP      r1,#0
00002a  da01              BGE      |L3.48|
;;;321    	{
;;;322    		txbuf[7] = 0x01;
00002c  f04f0001          MOV      r0,#1
                  |L3.48|
;;;323    	}
;;;324    	else
;;;325    	{
;;;326    		txbuf[7] = 0x00;
000030  f88d0007          STRB     r0,[sp,#7]
;;;327    	}
;;;328    
;;;329    	txbuf[8] = _dot;			/* 小数点个数 */
000034  f88d2008          STRB     r2,[sp,#8]
;;;330    
;;;331    	if (_iNumber < 0)
000038  da02              BGE      |L3.64|
;;;332    	{
;;;333    		_iNumber = -_iNumber;
00003a  f1c10000          RSB      r0,r1,#0
00003e  b201              SXTH     r1,r0
                  |L3.64|
;;;334    	}
;;;335    	txbuf[9] = _iNumber >> 8;
000040  ea4f2011          LSR      r0,r1,#8
000044  f88d0009          STRB     r0,[sp,#9]
;;;336    	txbuf[10] = _iNumber;
000048  f88d100a          STRB     r1,[sp,#0xa]
;;;337    
;;;338    	MODBUS_SendWithCRC(txbuf, 11);
00004c  f04f010b          MOV      r1,#0xb
000050  4668              MOV      r0,sp
000052  f7fffffe          BL       MODBUS_SendWithCRC
;;;339    }
000056  bd0e              POP      {r1-r3,pc}
;;;340    
                          ENDP


                          AREA ||i.LED485_DispStr||, CODE, READONLY, ALIGN=1

                  LED485_DispStr PROC
;;;350    */
;;;351    void LED485_DispStr(uint8_t _addr, char *_str)
000000  b570              PUSH     {r4-r6,lr}
;;;352    {
000002  b086              SUB      sp,sp,#0x18
;;;353    /*
;;;354    	PLC发送  :
;;;355    	0110 00 70 00 06 0C 50 32 2E 33 00 00 00 00 00 00 00 00 3B 25
;;;356    	?  01:   数码管屏的站号（RS485地址）
;;;357    	?  10 :   功能码，表示写多个寄存器
;;;358    	?  0070 :   数码管屏的显示寄存器(ASCII)
;;;359    	?  00 06:  寄存器个数
;;;360    	?  0C:   数据段的字节数
;;;361    	?  50 32 2E 33 00 00 00 00 00 00 00 00  :
;;;362    	ASCII字符串。固定长度12字节，长度不足12位的字符串右边必须填00。本例
;;;363    	表示ASCII字符串”P2.3”
;;;364    	?  3B 25  :   二个字节CRC码
;;;365    	此命令将显示“P2.3”
;;;366    	数码管屏返回 ：01 10 00 70 00 06 41 D0
;;;367    */
;;;368    	uint8_t txbuf[20];
;;;369    	uint8_t i;
;;;370    	uint8_t pos = 0;
;;;371    	uint8_t zero = 0;
000004  2400              MOVS     r4,#0
;;;372    
;;;373    	txbuf[pos++] = _addr;			/* 485地址 */
000006  f88d0000          STRB     r0,[sp,#0]
;;;374    	txbuf[pos++] = 0x10;			/* 功能码 10*/
00000a  2010              MOVS     r0,#0x10
00000c  f88d0001          STRB     r0,[sp,#1]
;;;375    
;;;376    	txbuf[pos++] = 0x00;			/* 地址寄存器 ：00 70 */
000010  f88d4002          STRB     r4,[sp,#2]
;;;377    	txbuf[pos++] = 0x70;
000014  2070              MOVS     r0,#0x70
000016  f88d0003          STRB     r0,[sp,#3]
;;;378    
;;;379    	txbuf[pos++] = 0x00;			/* 寄存器个数 */
00001a  f88d4004          STRB     r4,[sp,#4]
;;;380    	txbuf[pos++] = 0x06;
00001e  2006              MOVS     r0,#6
000020  f88d0005          STRB     r0,[sp,#5]
;;;381    
;;;382    	txbuf[pos++] = 0x0C;			/* 数据个数 */
000024  200c              MOVS     r0,#0xc
000026  460d              MOV      r5,r1                 ;352
000028  f88d0006          STRB     r0,[sp,#6]
00002c  466a              MOV      r2,sp                 ;373
00002e  4623              MOV      r3,r4                 ;376
000030  2107              MOVS     r1,#7
;;;383    
;;;384    	for (i = 0; i < 12; i++)
000032  4620              MOV      r0,r4
000034  e002              B        |L4.60|
                  |L4.54|
;;;385    	{
;;;386    		if (zero == 0)
000036  b10c              CBZ      r4,|L4.60|
;;;387    		{
;;;388    			if (_str[i] == 0)
;;;389    			{
;;;390    				zero = 1;
;;;391    			}
;;;392    			txbuf[pos++] = _str[i];
;;;393    		}
;;;394    		else
;;;395    		{
;;;396    			txbuf[pos++] = 0;
000038  5453              STRB     r3,[r2,r1]
00003a  e003              B        |L4.68|
                  |L4.60|
00003c  5c2e              LDRB     r6,[r5,r0]            ;388
00003e  b906              CBNZ     r6,|L4.66|
000040  2401              MOVS     r4,#1                 ;390
                  |L4.66|
000042  5456              STRB     r6,[r2,r1]            ;392
                  |L4.68|
000044  1c49              ADDS     r1,r1,#1              ;392
000046  1c40              ADDS     r0,r0,#1              ;392
000048  b2c0              UXTB     r0,r0                 ;384
00004a  b2c9              UXTB     r1,r1                 ;392
00004c  280c              CMP      r0,#0xc               ;384
00004e  d3f2              BCC      |L4.54|
;;;397    		}
;;;398    	}
;;;399    	MODBUS_SendWithCRC(txbuf, pos);
000050  4610              MOV      r0,r2
000052  f7fffffe          BL       MODBUS_SendWithCRC
;;;400    }
000056  b006              ADD      sp,sp,#0x18
000058  bd70              POP      {r4-r6,pc}
;;;401    
                          ENDP


                          AREA ||i.LED485_DispStrA||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  LED485_DispStrA PROC
;;;148    */
;;;149    void LED485_DispStrA(uint8_t _addr, char *_str)
000000  b51f              PUSH     {r0-r4,lr}
;;;150    {
;;;151    	char buf[16];
;;;152    
;;;153    	sprintf(buf, "$%03d,%s#", _addr, _str);
000002  460b              MOV      r3,r1
000004  4602              MOV      r2,r0
000006  a104              ADR      r1,|L5.24|
000008  4668              MOV      r0,sp
00000a  f7fffffe          BL       __2sprintf
;;;154    	RS485_SendStr(buf);
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       RS485_SendStr
;;;155    }
000014  bd1f              POP      {r0-r4,pc}
;;;156    
                          ENDP

000016  0000              DCW      0x0000
                  |L5.24|
000018  24253033          DCB      "$$%03d,%s#",0
00001c  642c2573
000020  2300    
000022  00                DCB      0
000023  00                DCB      0

                          AREA ||i.LED485_ModifyAddr||, CODE, READONLY, ALIGN=1

                  LED485_ModifyAddr PROC
;;;266    */
;;;267    void LED485_ModifyAddr(uint8_t _addr, uint8_t _NewAddr)
000000  b51c              PUSH     {r2-r4,lr}
;;;268    {
;;;269    	uint8_t txbuf[6];
;;;270    
;;;271    	txbuf[0] = _addr;			/* 485地址 */
;;;272    	txbuf[1] = 0x06;			/* 功能码 */
;;;273    	txbuf[2] = 0x00;			/* 地址寄存器 ：00 23 */
;;;274    	txbuf[3] = 0x23;
000002  2223              MOVS     r2,#0x23
000004  f88d0000          STRB     r0,[sp,#0]            ;271
000008  2006              MOVS     r0,#6                 ;272
00000a  f88d0001          STRB     r0,[sp,#1]            ;272
00000e  2000              MOVS     r0,#0                 ;273
;;;275    	txbuf[4] = 0x00;
000010  f88d0004          STRB     r0,[sp,#4]
000014  f88d0002          STRB     r0,[sp,#2]            ;273
;;;276    	txbuf[5] = _NewAddr;
000018  f88d1005          STRB     r1,[sp,#5]
00001c  f88d2003          STRB     r2,[sp,#3]            ;274
;;;277    
;;;278    	MODBUS_SendWithCRC(txbuf, 6);
000020  2106              MOVS     r1,#6
000022  4668              MOV      r0,sp
000024  f7fffffe          BL       MODBUS_SendWithCRC
;;;279    }
000028  bd1c              POP      {r2-r4,pc}
;;;280    
                          ENDP


                          AREA ||i.LED485_ModifyAddrA||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  LED485_ModifyAddrA PROC
;;;114    */
;;;115    void LED485_ModifyAddrA(uint8_t _addr, uint8_t _NewAddr)
000000  b50e              PUSH     {r1-r3,lr}
;;;116    {
;;;117    	char buf[10];
;;;118    
;;;119    	sprintf(buf, "$%03d,%03d@", _addr, _NewAddr);
000002  460b              MOV      r3,r1
000004  4602              MOV      r2,r0
000006  a104              ADR      r1,|L7.24|
000008  4668              MOV      r0,sp
00000a  f7fffffe          BL       __2sprintf
;;;120    	RS485_SendStr(buf);
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       RS485_SendStr
;;;121    }
000014  bd0e              POP      {r1-r3,pc}
;;;122    
                          ENDP

000016  0000              DCW      0x0000
                  |L7.24|
000018  24253033          DCB      "$$%03d,%03d@",0
00001c  642c2530
000020  33644000

                          AREA ||i.LED485_ReadBright||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  LED485_ReadBright PROC
;;;80     */
;;;81     void LED485_ReadBright(uint8_t _addr)
000000  b50e              PUSH     {r1-r3,lr}
;;;82     {
;;;83     	char buf[10];
;;;84     
;;;85     	sprintf(buf, "$%03d,04&", _addr);
000002  4602              MOV      r2,r0
000004  a103              ADR      r1,|L8.20|
000006  4668              MOV      r0,sp
000008  f7fffffe          BL       __2sprintf
;;;86     	RS485_SendStr(buf);
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       RS485_SendStr
;;;87     }
000012  bd0e              POP      {r1-r3,pc}
;;;88     
                          ENDP

                  |L8.20|
000014  24253033          DCB      "$$%03d,04&",0
000018  642c3034
00001c  2600    
00001e  00                DCB      0
00001f  00                DCB      0

                          AREA ||i.LED485_ReadModel||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  LED485_ReadModel PROC
;;;46     */
;;;47     void LED485_ReadModel(uint8_t _addr)
000000  b50e              PUSH     {r1-r3,lr}
;;;48     {
;;;49     	char buf[10];
;;;50     
;;;51     	sprintf(buf, "$%03d,02&", _addr);
000002  4602              MOV      r2,r0
000004  a103              ADR      r1,|L9.20|
000006  4668              MOV      r0,sp
000008  f7fffffe          BL       __2sprintf
;;;52     	RS485_SendStr(buf);
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       RS485_SendStr
;;;53     }
000012  bd0e              POP      {r1-r3,pc}
;;;54     
                          ENDP

                  |L9.20|
000014  24253033          DCB      "$$%03d,02&",0
000018  642c3032
00001c  2600    
00001e  00                DCB      0
00001f  00                DCB      0

                          AREA ||i.LED485_ReadVersion||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  LED485_ReadVersion PROC
;;;63     */
;;;64     void LED485_ReadVersion(uint8_t _addr)
000000  b50e              PUSH     {r1-r3,lr}
;;;65     {
;;;66     	char buf[10];
;;;67     
;;;68     	sprintf(buf, "$%03d,03&", _addr);
000002  4602              MOV      r2,r0
000004  a103              ADR      r1,|L10.20|
000006  4668              MOV      r0,sp
000008  f7fffffe          BL       __2sprintf
;;;69     	RS485_SendStr(buf);
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       RS485_SendStr
;;;70     }
000012  bd0e              POP      {r1-r3,pc}
;;;71     
                          ENDP

                  |L10.20|
000014  24253033          DCB      "$$%03d,03&",0
000018  642c3033
00001c  2600    
00001e  00                DCB      0
00001f  00                DCB      0

                          AREA ||i.LED485_SetBright||, CODE, READONLY, ALIGN=1

                  LED485_SetBright PROC
;;;243    */
;;;244    void LED485_SetBright(uint8_t _addr, uint8_t _bright)
000000  b51c              PUSH     {r2-r4,lr}
;;;245    {
;;;246    	uint8_t txbuf[6];
;;;247    
;;;248    	txbuf[0] = _addr;			/* 485地址 */
;;;249    	txbuf[1] = 0x06;			/* 功能码 */
;;;250    	txbuf[2] = 0x00;			/* 亮度寄存器 ：00 24 */
;;;251    	txbuf[3] = 0x24;
000002  2224              MOVS     r2,#0x24
000004  f88d0000          STRB     r0,[sp,#0]            ;248
000008  2006              MOVS     r0,#6                 ;249
00000a  f88d0001          STRB     r0,[sp,#1]            ;249
00000e  2000              MOVS     r0,#0                 ;250
;;;252    	txbuf[4] = 0x00;			/* 00 00 表示无小数点， 00 02 表示2位小数点 */
000010  f88d0004          STRB     r0,[sp,#4]
000014  f88d0002          STRB     r0,[sp,#2]            ;250
;;;253    	txbuf[5] = _bright;
000018  f88d1005          STRB     r1,[sp,#5]
00001c  f88d2003          STRB     r2,[sp,#3]            ;251
;;;254    
;;;255    	MODBUS_SendWithCRC(txbuf, 6);
000020  2106              MOVS     r1,#6
000022  4668              MOV      r0,sp
000024  f7fffffe          BL       MODBUS_SendWithCRC
;;;256    }
000028  bd1c              POP      {r2-r4,pc}
;;;257    
                          ENDP


                          AREA ||i.LED485_SetBrightA||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  LED485_SetBrightA PROC
;;;97     */
;;;98     void LED485_SetBrightA(uint8_t _addr, uint8_t _bright)
000000  b50e              PUSH     {r1-r3,lr}
;;;99     {
;;;100    	char buf[10];
;;;101    
;;;102    	sprintf(buf, "$%03d,%d%%", _addr, _bright);
000002  460b              MOV      r3,r1
000004  4602              MOV      r2,r0
000006  a104              ADR      r1,|L12.24|
000008  4668              MOV      r0,sp
00000a  f7fffffe          BL       __2sprintf
;;;103    	RS485_SendStr(buf);
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       RS485_SendStr
;;;104    }
000014  bd0e              POP      {r1-r3,pc}
;;;105    
                          ENDP

000016  0000              DCW      0x0000
                  |L12.24|
000018  24253033          DCB      "$$%03d,%d%%",0
00001c  642c2564
000020  252500  
000023  00                DCB      0

                          AREA ||i.LED485_SetDispDot||, CODE, READONLY, ALIGN=1

                  LED485_SetDispDot PROC
;;;220    */
;;;221    void LED485_SetDispDot(uint8_t _addr, uint8_t _dot)
000000  b51c              PUSH     {r2-r4,lr}
;;;222    {
;;;223    	uint8_t txbuf[6];
;;;224    
;;;225    	txbuf[0] = _addr;			/* 485地址 */
;;;226    	txbuf[1] = 0x06;			/* 功能码 */
;;;227    	txbuf[2] = 0x00;			/* 寄存器 ：00 25 */
;;;228    	txbuf[3] = 0x25;
000002  2225              MOVS     r2,#0x25
000004  f88d0000          STRB     r0,[sp,#0]            ;225
000008  2006              MOVS     r0,#6                 ;226
00000a  f88d0001          STRB     r0,[sp,#1]            ;226
00000e  2000              MOVS     r0,#0                 ;227
;;;229    	txbuf[4] = 0x00;			/* 00 00 表示无小数点， 00 02 表示2位小数点 */
000010  f88d0004          STRB     r0,[sp,#4]
000014  f88d0002          STRB     r0,[sp,#2]            ;227
;;;230    	txbuf[5] = _dot;
000018  f88d1005          STRB     r1,[sp,#5]
00001c  f88d2003          STRB     r2,[sp,#3]            ;228
;;;231    
;;;232    	MODBUS_SendWithCRC(txbuf, 6);
000020  2106              MOVS     r1,#6
000022  4668              MOV      r0,sp
000024  f7fffffe          BL       MODBUS_SendWithCRC
;;;233    }
000028  bd1c              POP      {r2-r4,pc}
;;;234    
                          ENDP


                          AREA ||i.LED485_SetProtAscii||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  LED485_SetProtAscii PROC
;;;180    */
;;;181    void LED485_SetProtAscii(uint8_t _addr)
000000  b50e              PUSH     {r1-r3,lr}
;;;182    {
;;;183    	char buf[10];
;;;184    
;;;185    	sprintf(buf, "$%03d,80&", _addr);
000002  4602              MOV      r2,r0
000004  a103              ADR      r1,|L14.20|
000006  4668              MOV      r0,sp
000008  f7fffffe          BL       __2sprintf
;;;186    	RS485_SendStr(buf);
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       RS485_SendStr
;;;187    }
000012  bd0e              POP      {r1-r3,pc}
;;;188    
                          ENDP

                  |L14.20|
000014  24253033          DCB      "$$%03d,80&",0
000018  642c3830
00001c  2600    
00001e  00                DCB      0
00001f  00                DCB      0

                          AREA ||i.LED485_SetProtRTU||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  LED485_SetProtRTU PROC
;;;164    */
;;;165    void LED485_SetProtRTU(uint8_t _addr)
000000  b50e              PUSH     {r1-r3,lr}
;;;166    {
;;;167    	char buf[10];
;;;168    
;;;169    	sprintf(buf, "$%03d,81&", _addr);
000002  4602              MOV      r2,r0
000004  a103              ADR      r1,|L15.20|
000006  4668              MOV      r0,sp
000008  f7fffffe          BL       __2sprintf
;;;170    	RS485_SendStr(buf);
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       RS485_SendStr
;;;171    }
000012  bd0e              POP      {r1-r3,pc}
;;;172    
                          ENDP

                  |L15.20|
000014  24253033          DCB      "$$%03d,81&",0
000018  642c3831
00001c  2600    
00001e  00                DCB      0
00001f  00                DCB      0

                          AREA ||i.LED485_TestOk||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  LED485_TestOk PROC
;;;29     */
;;;30     void LED485_TestOk(uint8_t _addr)
000000  b50e              PUSH     {r1-r3,lr}
;;;31     {
;;;32     	char buf[10];
;;;33     
;;;34     	sprintf(buf, "$%03d,01&", _addr);
000002  4602              MOV      r2,r0
000004  a103              ADR      r1,|L16.20|
000006  4668              MOV      r0,sp
000008  f7fffffe          BL       __2sprintf
;;;35     	RS485_SendStr(buf);
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       RS485_SendStr
;;;36     }
000012  bd0e              POP      {r1-r3,pc}
;;;37     
                          ENDP

                  |L16.20|
000014  24253033          DCB      "$$%03d,01&",0
000018  642c3031
00001c  2600    
00001e  00                DCB      0
00001f  00                DCB      0

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_rs485_led.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_rs485_led_c_4b6dd6a8____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_bsp_rs485_led_c_4b6dd6a8____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_rs485_led_c_4b6dd6a8____REVSH|
#line 128
|__asm___15_bsp_rs485_led_c_4b6dd6a8____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
