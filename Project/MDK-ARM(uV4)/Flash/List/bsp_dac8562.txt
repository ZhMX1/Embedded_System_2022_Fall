; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_dac8562.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_dac8562.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_dac8562.crf ..\..\User\bsp\src\bsp_dac8562.c]
                          THUMB

                          AREA ||i.DAC8562_DacToVoltage||, CODE, READONLY, ALIGN=2

                  DAC8562_DacToVoltage PROC
;;;217    */
;;;218    int32_t DAC8562_DacToVoltage(uint16_t _dac)
000000  b508              PUSH     {r3,lr}
;;;219    {
;;;220    	int32_t y;
;;;221    
;;;222    	/* CaculTwoPoint(int32_t x1, int32_t y1, int32_t x2, int32_t y2, int32_t x);*/
;;;223    	y =  CaculTwoPoint(X1, Y1, X2, Y2, _dac);
000002  4b04              LDR      r3,|L1.20|
000004  9000              STR      r0,[sp,#0]
000006  f64f72ff          MOV      r2,#0xffff
00000a  4259              RSBS     r1,r3,#0
00000c  2000              MOVS     r0,#0
00000e  f7fffffe          BL       CaculTwoPoint
;;;224    	return y;
;;;225    }
000012  bd08              POP      {r3,pc}
;;;226    
                          ENDP

                  |L1.20|
                          DCD      0x000186a0

                          AREA ||i.DAC8562_SetCS||, CODE, READONLY, ALIGN=2

                  DAC8562_SetCS PROC
;;;109    */
;;;110    void DAC8562_SetCS(uint8_t _level)
000000  b570              PUSH     {r4-r6,lr}
;;;111    {
;;;112    	if (_level == 0)
;;;113    	{
;;;114    		bsp_SpiBusEnter();	/* 占用SPI总线， 用于总线共享 */
;;;115    
;;;116    		#ifdef SOFT_SPI		/* 软件SPI */
;;;117    			bsp_SetSpiSck(0);
;;;118    			DAC8562_CS_0();
;;;119    		#endif
;;;120    
;;;121    		#ifdef HARD_SPI		/* 硬件SPI */
;;;122    			bsp_SPI_Init(SPI_Direction_2Lines_FullDuplex | SPI_Mode_Master | SPI_DataSize_8b
;;;123    				| SPI_CPOL_Low | SPI_CPHA_1Edge | SPI_NSS_Soft | SPI_BaudRatePrescaler_8 | SPI_FirstBit_MSB);
;;;124    			DAC8562_CS_0();
000002  4d08              LDR      r5,|L2.36|
000004  2408              MOVS     r4,#8
000006  b120              CBZ      r0,|L2.18|
;;;125    		#endif
;;;126    	}
;;;127    	else
;;;128    	{
;;;129    		DAC8562_CS_1();
000008  612c              STR      r4,[r5,#0x10]
;;;130    
;;;131    		bsp_SpiBusExit();	/* 释放SPI总线， 用于总线共享 */
00000a  e8bd4070          POP      {r4-r6,lr}
00000e  f7ffbffe          B.W      bsp_SpiBusExit
                  |L2.18|
000012  f7fffffe          BL       bsp_SpiBusEnter
000016  f44f7045          MOV      r0,#0x314             ;122
00001a  f7fffffe          BL       bsp_SPI_Init
00001e  616c              STR      r4,[r5,#0x14]         ;124
;;;132    	}
;;;133    }
000020  bd70              POP      {r4-r6,pc}
;;;134    
                          ENDP

000022  0000              DCW      0x0000
                  |L2.36|
                          DCD      0x40011000

                          AREA ||i.DAC8562_SetDacData||, CODE, READONLY, ALIGN=2

                  DAC8562_SetDacData PROC
;;;194    */
;;;195    void DAC8562_SetDacData(uint8_t _ch, uint16_t _dac)
000000  b130              CBZ      r0,|L3.16|
;;;196    {
;;;197    	if (_ch == 0)
;;;198    	{
;;;199    		/* Write to DAC-A input register and update DAC-A; */
;;;200    		DAC8562_WriteCmd((3 << 19) | (0 << 16) | (_dac << 0));
;;;201    	}
;;;202    	else if (_ch == 1)
000002  2801              CMP      r0,#1
000004  d107              BNE      |L3.22|
;;;203    	{
;;;204    		/* Write to DAC-B input register and update DAC-A; */
;;;205    		DAC8562_WriteCmd((3 << 19) | (1 << 16) | (_dac << 0));
000006  f44110c8          ORR      r0,r1,#0x190000
00000a  bf00              NOP      
                  |L3.12|
00000c  f7ffbffe          B.W      DAC8562_WriteCmd
                  |L3.16|
000010  f44110c0          ORR      r0,r1,#0x180000       ;200
000014  e7fa              B        |L3.12|
                  |L3.22|
;;;206    	}
;;;207    }
000016  4770              BX       lr
;;;208    
                          ENDP


                          AREA ||i.DAC8562_VoltageToDac||, CODE, READONLY, ALIGN=2

                  DAC8562_VoltageToDac PROC
;;;234    */
;;;235    uint32_t DAC8562_VoltageToDac(int32_t _volt)
000000  b508              PUSH     {r3,lr}
;;;236    {
;;;237    	/* CaculTwoPoint(int32_t x1, int32_t y1, int32_t x2, int32_t y2, int32_t x);*/
;;;238    	return CaculTwoPoint(Y1, X1, Y2, X2, _volt);
000002  4a04              LDR      r2,|L4.20|
000004  9000              STR      r0,[sp,#0]
000006  f64f73ff          MOV      r3,#0xffff
00000a  2100              MOVS     r1,#0
00000c  4250              RSBS     r0,r2,#0
00000e  f7fffffe          BL       CaculTwoPoint
;;;239    }
000012  bd08              POP      {r3,pc}
;;;240    
                          ENDP

                  |L4.20|
                          DCD      0x000186a0

                          AREA ||i.DAC8562_WriteCmd||, CODE, READONLY, ALIGN=1

                  DAC8562_WriteCmd PROC
;;;171    */
;;;172    static void DAC8562_WriteCmd(uint32_t _cmd)
000000  b510              PUSH     {r4,lr}
;;;173    {
000002  4604              MOV      r4,r0
;;;174    	DAC8562_SetCS(0);
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       DAC8562_SetCS
;;;175    
;;;176    	/*　DAC8562 SCLK时钟高达50M，因此可以不延迟 */
;;;177    
;;;178    	/*　DAC8501 SCLK时钟高达30M，因此可以不延迟 */
;;;179    	bsp_spiWrite0(_cmd >> 16);
00000a  f3c44007          UBFX     r0,r4,#16,#8
00000e  f7fffffe          BL       bsp_spiWrite0
;;;180    	bsp_spiWrite0(_cmd >> 8);
000012  f3c42007          UBFX     r0,r4,#8,#8
000016  f7fffffe          BL       bsp_spiWrite0
;;;181    	bsp_spiWrite0(_cmd);
00001a  b2e0              UXTB     r0,r4
00001c  f7fffffe          BL       bsp_spiWrite0
;;;182    
;;;183    	DAC8562_SetCS(1);
000020  e8bd4010          POP      {r4,lr}
000024  2001              MOVS     r0,#1
000026  f7ffbffe          B.W      DAC8562_SetCS
;;;184    }
;;;185    
                          ENDP


                          AREA ||i.bsp_InitDAC8562||, CODE, READONLY, ALIGN=2

                  bsp_InitDAC8562 PROC
;;;83     */
;;;84     void bsp_InitDAC8562(void)
000000  b538              PUSH     {r3-r5,lr}
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
00000a  4816              LDR      r0,|L6.100|
00000c  2108              MOVS     r1,#8
00000e  6101              STR      r1,[r0,#0x10]
000010  4a15              LDR      r2,|L6.104|
000012  2401              MOVS     r4,#1
000014  6014              STR      r4,[r2,#0]
000016  2210              MOVS     r2,#0x10
000018  f88d2003          STRB     r2,[sp,#3]
00001c  2203              MOVS     r2,#3
00001e  f88d2002          STRB     r2,[sp,#2]
000022  f8ad1000          STRH     r1,[sp,#0]
000026  4669              MOV      r1,sp
000028  f7fffffe          BL       GPIO_Init
00002c  480e              LDR      r0,|L6.104|
00002e  f8ad4000          STRH     r4,[sp,#0]
000032  4669              MOV      r1,sp
000034  3814              SUBS     r0,r0,#0x14
000036  f7fffffe          BL       GPIO_Init
;;;85     {
;;;86     	DAC8562_ConfigGPIO();
;;;87     
;;;88     	/* Power up DAC-A and DAC-B */
;;;89     	DAC8562_WriteCmd((4 << 19) | (0 << 16) | (3 << 0));
00003a  480c              LDR      r0,|L6.108|
00003c  f7fffffe          BL       DAC8562_WriteCmd
;;;90     
;;;91     	/* LDAC pin inactive for DAC-B and DAC-A  不使用LDAC引脚更新数据 */
;;;92     	DAC8562_WriteCmd((6 << 19) | (0 << 16) | (3 << 0));
000040  480b              LDR      r0,|L6.112|
000042  f7fffffe          BL       DAC8562_WriteCmd
;;;93     
;;;94     	/* 复位2个DAC到中间值, 输出0V */
;;;95     	DAC8562_SetDacData(0, 32767);
000046  f64774ff          MOV      r4,#0x7fff
00004a  4621              MOV      r1,r4
00004c  2000              MOVS     r0,#0
00004e  f7fffffe          BL       DAC8562_SetDacData
;;;96     	DAC8562_SetDacData(1, 32767);
000052  4621              MOV      r1,r4
000054  2001              MOVS     r0,#1
000056  f7fffffe          BL       DAC8562_SetDacData
;;;97     
;;;98     	/* 选择内部参考并复位2个DAC的增益=2 （复位时，内部参考是禁止的) */
;;;99     	DAC8562_WriteCmd((7 << 19) | (0 << 16) | (1 << 0));
00005a  e8bd4038          POP      {r3-r5,lr}
00005e  4805              LDR      r0,|L6.116|
000060  f7ffbffe          B.W      DAC8562_WriteCmd
;;;100    }
;;;101    
                          ENDP

                  |L6.100|
                          DCD      0x40011000
                  |L6.104|
                          DCD      0x40010c14
                  |L6.108|
                          DCD      0x00200003
                  |L6.112|
                          DCD      0x00300003
                  |L6.116|
                          DCD      0x00380001

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_dac8562.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_dac8562_c_d868fe34____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_bsp_dac8562_c_d868fe34____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_dac8562_c_d868fe34____REVSH|
#line 128
|__asm___13_bsp_dac8562_c_d868fe34____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
