; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\spi_sw.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\spi_sw.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\spi_sw.crf ..\..\User\CH376\src\SPI_SW.C]
                          THUMB

                          AREA ||i.CH376_PORT_INIT||, CODE, READONLY, ALIGN=2

                  CH376_PORT_INIT PROC
;;;36     /* 使用软件模拟SPI读写时序,进行初始化 */
;;;37     void CH376_PORT_INIT( void )  
000000  b538              PUSH     {r3-r5,lr}
;;;38     {
;;;39     	GPIO_InitTypeDef GPIO_InitStructure;
;;;40     
;;;41     	/* 设置SPI_SCS,SPI_SCK,SPI_SDI为输出方向,SPI_SDO为输入方向 */
;;;42     	
;;;43     	/* 打开CPU的GPIO时钟 */
;;;44     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF | RCC_APB2Periph_GPIOE, ENABLE);
000002  2101              MOVS     r1,#1
000004  20c0              MOVS     r0,#0xc0
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;45     
;;;46     	/* 配置 PA5/SPI1_SCK,PA7/SPI1_MOSI为推挽输出 */
;;;47     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
00000a  f44f6480          MOV      r4,#0x400
00000e  f8ad4000          STRH     r4,[sp,#0]
;;;48     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000012  2010              MOVS     r0,#0x10
000014  f88d0003          STRB     r0,[sp,#3]
;;;49     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000018  2003              MOVS     r0,#3
00001a  f88d0002          STRB     r0,[sp,#2]
;;;50     	GPIO_Init(GPIOF, &GPIO_InitStructure);						
00001e  4669              MOV      r1,sp
000020  4803              LDR      r0,|L1.48|
000022  f7fffffe          BL       GPIO_Init
;;;51     	
;;;52     	CH376_SCS_1();  /* 禁止SPI片选 */
000026  4802              LDR      r0,|L1.48|
000028  3010              ADDS     r0,r0,#0x10
00002a  6004              STR      r4,[r0,#0]
;;;53     		
;;;54     	/* 如果是硬件SPI接口,那么可使用mode3(CPOL=1&CPHA=1)或mode0(CPOL=0&CPHA=0),
;;;55     		CH376在时钟上升沿采样输入,下降沿输出,数据位是高位在前 */
;;;56     }
00002c  bd38              POP      {r3-r5,pc}
;;;57     
                          ENDP

00002e  0000              DCW      0x0000
                  |L1.48|
                          DCD      0x40011c00

                          AREA ||i.Query376Interrupt||, CODE, READONLY, ALIGN=2

                  Query376Interrupt PROC
;;;137    /* 查询CH376中断(INT#低电平) */
;;;138    UINT8 Query376Interrupt( void )
000000  b510              PUSH     {r4,lr}
;;;139    {
;;;140    	return( CH376_INT_HIGH() ? FALSE : TRUE );
000002  2104              MOVS     r1,#4
000004  4803              LDR      r0,|L2.20|
000006  f7fffffe          BL       GPIO_ReadInputDataBit
00000a  b108              CBZ      r0,|L2.16|
00000c  2000              MOVS     r0,#0
;;;141    }
00000e  bd10              POP      {r4,pc}
                  |L2.16|
000010  2001              MOVS     r0,#1                 ;140
000012  bd10              POP      {r4,pc}
;;;142    
                          ENDP

                  |L2.20|
                          DCD      0x40011800

                          AREA ||i.ch376_SetCS||, CODE, READONLY, ALIGN=2

                  ch376_SetCS PROC
;;;74     */
;;;75     static void ch376_SetCS(uint8_t _level)
000000  b510              PUSH     {r4,lr}
;;;76     {
;;;77     	if (_level == 0)
;;;78     	{
;;;79     		bsp_SpiBusEnter();	/* 占用SPI总线， 用于总线共享 */
;;;80     
;;;81     		#ifdef SOFT_SPI		/* 软件SPI */
;;;82     			bsp_SetSpiSck(1);
;;;83     			CH376_SCS_0();
;;;84     		#endif
;;;85     
;;;86     		#ifdef HARD_SPI		/* 硬件SPI */
;;;87     			/* 2015-07-09 实测:　SPI_BaudRatePrescaler_16 时，显示一副480*272需要2.4秒　*/
;;;88     		
;;;89     			bsp_SPI_Init(SPI_Direction_2Lines_FullDuplex | SPI_Mode_Master | SPI_DataSize_8b
;;;90     				| SPI_CPOL_High | SPI_CPHA_2Edge | SPI_NSS_Soft | SPI_BaudRatePrescaler_16 | SPI_FirstBit_MSB);
;;;91     
;;;92     			CH376_SCS_0();
000002  f44f6480          MOV      r4,#0x400
000006  b128              CBZ      r0,|L3.20|
;;;93     		#endif
;;;94     	}
;;;95     	else
;;;96     	{
;;;97     		CH376_SCS_1();
000008  4807              LDR      r0,|L3.40|
00000a  6004              STR      r4,[r0,#0]
;;;98     
;;;99     		bsp_SpiBusExit();	/* 释放SPI总线， 用于总线共享 */
00000c  e8bd4010          POP      {r4,lr}
000010  f7ffbffe          B.W      bsp_SpiBusExit
                  |L3.20|
000014  f7fffffe          BL       bsp_SpiBusEnter
000018  f240301f          MOV      r0,#0x31f             ;89
00001c  f7fffffe          BL       bsp_SPI_Init
000020  4801              LDR      r0,|L3.40|
000022  1d00              ADDS     r0,r0,#4              ;92
000024  6004              STR      r4,[r0,#0]            ;92
;;;100    	}
;;;101    }
000026  bd10              POP      {r4,pc}
;;;102    
                          ENDP

                  |L3.40|
                          DCD      0x40011c10

                          AREA ||i.mDelay0_5uS||, CODE, READONLY, ALIGN=1

                  mDelay0_5uS PROC
;;;57     
;;;58     void mDelay0_5uS( void )  /* 至少延时0.5uS,根据单片机主频调整 */
000000  2000              MOVS     r0,#0
                  |L4.2|
;;;59     {
;;;60     	UINT8 i;
;;;61     
;;;62     	for (i = 0; i < 30; i++);
000002  1c40              ADDS     r0,r0,#1
000004  b2c0              UXTB     r0,r0
000006  281e              CMP      r0,#0x1e
000008  d3fb              BCC      |L4.2|
;;;63     }
00000a  4770              BX       lr
;;;64     
                          ENDP


                          AREA ||i.mInitCH376Host||, CODE, READONLY, ALIGN=1

                  mInitCH376Host PROC
;;;142    
;;;143    UINT8 mInitCH376Host( void )  /* 初始化CH376 */
000000  b510              PUSH     {r4,lr}
;;;144    {
;;;145    	UINT8	res;
;;;146    	
;;;147    	CH376_PORT_INIT( );  /* 接口硬件初始化 */
000002  f7fffffe          BL       CH376_PORT_INIT
;;;148    
;;;149    	//mDelaymS(200);
;;;150    	
;;;151    	xWriteCH376Cmd( CMD11_CHECK_EXIST );  /* 测试单片机与CH376之间的通讯接口 */
000006  2006              MOVS     r0,#6
000008  f7fffffe          BL       xWriteCH376Cmd
;;;152    	xWriteCH376Data( 0x65 );
00000c  2065              MOVS     r0,#0x65
00000e  f7fffffe          BL       bsp_spiWrite1
000012  f7fffffe          BL       bsp_spiRead1
;;;153    	res = xReadCH376Data( );
000016  4604              MOV      r4,r0
000018  2001              MOVS     r0,#1
00001a  f7fffffe          BL       ch376_SetCS
;;;154    	xEndCH376Cmd( );
;;;155    	if ( res != 0x9A ) return( ERR_USB_UNKNOWN );  /* 通讯接口不正常,可能原因有:接口连接异常,其它设备影响(片选不唯一),串口波特率,一直在复位,晶振不工作 */
00001e  2c9a              CMP      r4,#0x9a
000020  d110              BNE      |L5.68|
;;;156    	xWriteCH376Cmd( CMD11_SET_USB_MODE );  /* 设备USB工作模式 */
000022  2015              MOVS     r0,#0x15
000024  f7fffffe          BL       xWriteCH376Cmd
;;;157    	xWriteCH376Data( 0x06 );
000028  2006              MOVS     r0,#6
00002a  f7fffffe          BL       bsp_spiWrite1
;;;158    	mDelayuS(50 );
00002e  2032              MOVS     r0,#0x32
000030  f7fffffe          BL       mDelayuS
000034  f7fffffe          BL       bsp_spiRead1
;;;159    	res = xReadCH376Data( );
000038  4604              MOV      r4,r0
00003a  2001              MOVS     r0,#1
00003c  f7fffffe          BL       ch376_SetCS
;;;160    	xEndCH376Cmd( );
;;;161    
;;;162    	if ( res == CMD_RET_SUCCESS ) return( USB_INT_SUCCESS );
000040  2c51              CMP      r4,#0x51
000042  d001              BEQ      |L5.72|
                  |L5.68|
;;;163    	else return( ERR_USB_UNKNOWN );  /* 设置模式错误 */
000044  20fa              MOVS     r0,#0xfa
;;;164    }
000046  bd10              POP      {r4,pc}
                  |L5.72|
000048  2014              MOVS     r0,#0x14              ;162
00004a  bd10              POP      {r4,pc}
                          ENDP


                          AREA ||i.xEndCH376Cmd||, CODE, READONLY, ALIGN=1

                  xEndCH376Cmd PROC
;;;102    
;;;103    void xEndCH376Cmd( )
000000  2001              MOVS     r0,#1
;;;104    {
;;;105    	 //CH376_SCS_1();
;;;106    	 ch376_SetCS(1);
000002  f7ffbffe          B.W      ch376_SetCS
;;;107    }
;;;108    
                          ENDP


                          AREA ||i.xReadCH376Data||, CODE, READONLY, ALIGN=1

                  xReadCH376Data PROC
;;;130    
;;;131    UINT8 xReadCH376Data( void )  /* 从CH376读数据 */
000000  f7ffbffe          B.W      bsp_spiRead1
;;;132    {
;;;133    //	mDelay0_5uS( );  /* 确保读写周期大于0.6uS */
;;;134    	return( bsp_spiRead1( ) );
;;;135    }
;;;136    
                          ENDP


                          AREA ||i.xWriteCH376Cmd||, CODE, READONLY, ALIGN=2

                  xWriteCH376Cmd PROC
;;;108    
;;;109    void xWriteCH376Cmd( UINT8 mCmd )  /* 向CH376写命令 */
000000  b510              PUSH     {r4,lr}
;;;110    {
;;;111    	CH376_SCS_1();  /* 防止之前未通过xEndCH376Cmd禁止SPI片选 */
000002  490a              LDR      r1,|L8.44|
000004  4604              MOV      r4,r0                 ;110
000006  f44f6080          MOV      r0,#0x400
00000a  6008              STR      r0,[r1,#0]
;;;112    	mDelay0_5uS( );
00000c  f7fffffe          BL       mDelay0_5uS
;;;113    	
;;;114    	//CH376_SCS_0();  /* SPI片选有效 */	
;;;115    	ch376_SetCS(0);
000010  2000              MOVS     r0,#0
000012  f7fffffe          BL       ch376_SetCS
;;;116    	
;;;117    	bsp_spiWrite1( mCmd );  /* 发出命令码 */
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       bsp_spiWrite1
;;;118    	
;;;119    	/* 延时1.5uS确保读写周期大于1.5uS,或者用上面一行的状态查询代替 */
;;;120    	mDelay0_5uS( ); 
00001c  f7fffffe          BL       mDelay0_5uS
;;;121    	mDelay0_5uS( ); 
000020  f7fffffe          BL       mDelay0_5uS
;;;122    	mDelay0_5uS( );  
000024  e8bd4010          POP      {r4,lr}
000028  f7ffbffe          B.W      mDelay0_5uS
;;;123    }
;;;124    
                          ENDP

                  |L8.44|
                          DCD      0x40011c10

                          AREA ||i.xWriteCH376Data||, CODE, READONLY, ALIGN=1

                  xWriteCH376Data PROC
;;;124    
;;;125    void xWriteCH376Data( UINT8 mData )  /* 向CH376写数据 */
000000  f7ffbffe          B.W      bsp_spiWrite1
;;;126    {
;;;127    	bsp_spiWrite1( mData );
;;;128    //	mDelay0_5uS( );  /* 确保读写周期大于0.6uS */
;;;129    }
;;;130    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\CH376\\src\\SPI_SW.C"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_SPI_SW_C_e62b545a____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_SPI_SW_C_e62b545a____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_SPI_SW_C_e62b545a____REVSH|
#line 128
|__asm___8_SPI_SW_C_e62b545a____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
