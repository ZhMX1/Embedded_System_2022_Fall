; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\http_server.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\http_server.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\http_server.crf ..\..\User\app\src\http_server.c]
                          THUMB

                          AREA ||i.DispFormHttp||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  DispFormHttp PROC
;;;541    */
;;;542    static void DispFormHttp(void)
000000  b57c              PUSH     {r2-r6,lr}
;;;543    {
;;;544    	sprintf(FormHttp->EditIP.Text, "%d.%d.%d.%d", g_tParam.uip_ip[0], g_tParam.uip_ip[1],
000002  4c3b              LDR      r4,|L1.240|
000004  4d3e              LDR      r5,|L1.256|
000006  f894102b          LDRB     r1,[r4,#0x2b]  ; g_tParam
00000a  f894002a          LDRB     r0,[r4,#0x2a]  ; g_tParam
00000e  e9cd0100          STRD     r0,r1,[sp,#0]
000012  6828              LDR      r0,[r5,#0]  ; FormHttp
000014  f8943029          LDRB     r3,[r4,#0x29]  ; g_tParam
000018  f8142f28          LDRB     r2,[r4,#0x28]!  ; g_tParam
00001c  a135              ADR      r1,|L1.244|
00001e  30d4              ADDS     r0,r0,#0xd4
000020  f7fffffe          BL       __2sprintf
;;;545    		g_tParam.uip_ip[2], g_tParam.uip_ip[3]);
;;;546    
;;;547    	sprintf(FormHttp->EditNetMask.Text, "%d.%d.%d.%d", g_tParam.uip_net_mask[0], g_tParam.uip_net_mask[1],
000024  79e1              LDRB     r1,[r4,#7]  ; g_tParam
000026  79a0              LDRB     r0,[r4,#6]  ; g_tParam
000028  e9cd0100          STRD     r0,r1,[sp,#0]
00002c  6828              LDR      r0,[r5,#0]  ; FormHttp
00002e  7963              LDRB     r3,[r4,#5]  ; g_tParam
000030  7922              LDRB     r2,[r4,#4]  ; g_tParam
000032  a130              ADR      r1,|L1.244|
000034  f5007084          ADD      r0,r0,#0x108
000038  f7fffffe          BL       __2sprintf
;;;548    		g_tParam.uip_net_mask[2], g_tParam.uip_net_mask[3]);
;;;549    
;;;550    	sprintf(FormHttp->EditGateway.Text, "%d.%d.%d.%d", g_tParam.uip_gateway[0], g_tParam.uip_gateway[1],
00003c  7ae1              LDRB     r1,[r4,#0xb]  ; g_tParam
00003e  7aa0              LDRB     r0,[r4,#0xa]  ; g_tParam
000040  e9cd0100          STRD     r0,r1,[sp,#0]
000044  6828              LDR      r0,[r5,#0]  ; FormHttp
000046  7a63              LDRB     r3,[r4,#9]  ; g_tParam
000048  7a22              LDRB     r2,[r4,#8]  ; g_tParam
00004a  a12a              ADR      r1,|L1.244|
00004c  f500709e          ADD      r0,r0,#0x13c
000050  f7fffffe          BL       __2sprintf
;;;551    		g_tParam.uip_gateway[2], g_tParam.uip_gateway[3]);
;;;552    
;;;553    	sprintf(FormHttp->EditLwIP.Text, "%d.%d.%d.%d", g_tParam.lwip_ip[0], g_tParam.lwip_ip[1],
000054  7be1              LDRB     r1,[r4,#0xf]  ; g_tParam
000056  7ba0              LDRB     r0,[r4,#0xe]  ; g_tParam
000058  e9cd0100          STRD     r0,r1,[sp,#0]
00005c  6828              LDR      r0,[r5,#0]  ; FormHttp
00005e  7b63              LDRB     r3,[r4,#0xd]  ; g_tParam
000060  7b22              LDRB     r2,[r4,#0xc]  ; g_tParam
000062  a124              ADR      r1,|L1.244|
000064  f50070b8          ADD      r0,r0,#0x170
000068  f7fffffe          BL       __2sprintf
;;;554    		g_tParam.lwip_ip[2], g_tParam.lwip_ip[3]);
;;;555    
;;;556    	sprintf(FormHttp->EditLwNetMask.Text, "%d.%d.%d.%d", g_tParam.lwip_net_mask[0], g_tParam.lwip_net_mask[1],
00006c  7ce1              LDRB     r1,[r4,#0x13]  ; g_tParam
00006e  7ca0              LDRB     r0,[r4,#0x12]  ; g_tParam
000070  e9cd0100          STRD     r0,r1,[sp,#0]
000074  6828              LDR      r0,[r5,#0]  ; FormHttp
000076  7c63              LDRB     r3,[r4,#0x11]  ; g_tParam
000078  7c22              LDRB     r2,[r4,#0x10]  ; g_tParam
00007a  a11e              ADR      r1,|L1.244|
00007c  f50070d2          ADD      r0,r0,#0x1a4
000080  f7fffffe          BL       __2sprintf
;;;557    		g_tParam.lwip_net_mask[2], g_tParam.lwip_net_mask[3]);
;;;558    
;;;559    	sprintf(FormHttp->EditLwGateway.Text, "%d.%d.%d.%d", g_tParam.lwip_gateway[0], g_tParam.lwip_gateway[1],
000084  7de1              LDRB     r1,[r4,#0x17]  ; g_tParam
000086  7da0              LDRB     r0,[r4,#0x16]  ; g_tParam
000088  e9cd0100          STRD     r0,r1,[sp,#0]
00008c  6828              LDR      r0,[r5,#0]  ; FormHttp
00008e  7d63              LDRB     r3,[r4,#0x15]  ; g_tParam
000090  7d22              LDRB     r2,[r4,#0x14]  ; g_tParam
000092  a118              ADR      r1,|L1.244|
000094  f50070ec          ADD      r0,r0,#0x1d8
000098  f7fffffe          BL       __2sprintf
;;;560    		g_tParam.lwip_gateway[2], g_tParam.lwip_gateway[3]);
;;;561    
;;;562    	/* Uip */
;;;563    	LCD_DrawLabel(&FormHttp->LabelIP);
00009c  6828              LDR      r0,[r5,#0]  ; FormHttp
00009e  3048              ADDS     r0,r0,#0x48
0000a0  f7fffffe          BL       LCD_DrawLabel
;;;564    	LCD_DrawLabel(&FormHttp->LabelNetMask);
0000a4  6828              LDR      r0,[r5,#0]  ; FormHttp
0000a6  305c              ADDS     r0,r0,#0x5c
0000a8  f7fffffe          BL       LCD_DrawLabel
;;;565    	LCD_DrawLabel(&FormHttp->LabelGateway);
0000ac  6828              LDR      r0,[r5,#0]  ; FormHttp
0000ae  3070              ADDS     r0,r0,#0x70
0000b0  f7fffffe          BL       LCD_DrawLabel
;;;566    	LCD_DrawEdit(&FormHttp->EditIP);
0000b4  6828              LDR      r0,[r5,#0]  ; FormHttp
0000b6  30c0              ADDS     r0,r0,#0xc0
0000b8  f7fffffe          BL       LCD_DrawEdit
;;;567    	LCD_DrawEdit(&FormHttp->EditNetMask);
0000bc  6828              LDR      r0,[r5,#0]  ; FormHttp
0000be  30f4              ADDS     r0,r0,#0xf4
0000c0  f7fffffe          BL       LCD_DrawEdit
;;;568    	LCD_DrawEdit(&FormHttp->EditGateway);
0000c4  6828              LDR      r0,[r5,#0]  ; FormHttp
0000c6  f5007094          ADD      r0,r0,#0x128
0000ca  f7fffffe          BL       LCD_DrawEdit
;;;569    	LCD_DrawButton(&FormHttp->ButtonSetIP);
0000ce  6828              LDR      r0,[r5,#0]  ; FormHttp
0000d0  f50070fc          ADD      r0,r0,#0x1f8
0000d4  f7fffffe          BL       LCD_DrawButton
;;;570    
;;;571    	/* Lwip */
;;;572    	//LCD_DrawLabel(&FormHttp->LabelLwIP);
;;;573    	//LCD_DrawLabel(&FormHttp->LabelLwNetMask);
;;;574    	//LCD_DrawLabel(&FormHttp->LabelLwGateway);
;;;575    	//LCD_DrawEdit(&FormHttp->EditLwIP);
;;;576    	//LCD_DrawEdit(&FormHttp->EditLwNetMask);
;;;577    	//LCD_DrawEdit(&FormHttp->EditLwGateway);
;;;578    	//LCD_DrawButton(&FormHttp->ButtonLwSetIP);
;;;579    
;;;580    	/* 返回按钮 */
;;;581    	LCD_DrawButton(&FormHttp->ButtonRet);
0000d8  6828              LDR      r0,[r5,#0]  ; FormHttp
0000da  f500700a          ADD      r0,r0,#0x228
0000de  f7fffffe          BL       LCD_DrawButton
;;;582    
;;;583    	LCD_DrawGroupBox(&FormHttp->BoxUip);
0000e2  6828              LDR      r0,[r5,#0]  ; FormHttp
0000e4  e8bd407c          POP      {r2-r6,lr}
0000e8  3020              ADDS     r0,r0,#0x20
0000ea  f7ffbffe          B.W      LCD_DrawGroupBox
;;;584    	//LCD_DrawGroupBox(&FormHttp->BoxLwip);
;;;585    }
;;;586    
                          ENDP

0000ee  0000              DCW      0x0000
                  |L1.240|
                          DCD      g_tParam
                  |L1.244|
0000f4  25642e25          DCB      "%d.%d.%d.%d",0
0000f8  642e2564
0000fc  2e256400
                  |L1.256|
                          DCD      ||.data||

                          AREA ||i.InitFormHttp||, CODE, READONLY, ALIGN=2

                  InitFormHttp PROC
;;;389    */
;;;390    static void InitFormHttp(void)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;391    {
;;;392    	/* 按钮字体 */
;;;393    	FormHttp->FontBtn.FontCode = FC_ST_16;
000004  4881              LDR      r0,|L2.524|
000006  2201              MOVS     r2,#1
;;;394    	FormHttp->FontBtn.BackColor = CL_MASK;		/* 透明色 */
000008  f6491199          MOV      r1,#0x9999
00000c  6800              LDR      r0,[r0,#0]            ;393  ; FormHttp
;;;395    	FormHttp->FontBtn.FrontColor = CL_BLACK;
;;;396    	FormHttp->FontBtn.Space = 0;
;;;397    
;;;398    	/* 编辑框字体 */
;;;399    	FormHttp->FontEdit.FontCode = FC_ST_16;
;;;400    	FormHttp->FontEdit.BackColor = CL_MASK;		/* 透明色 */
00000e  f6491399          MOV      r3,#0x9999
;;;401    	FormHttp->FontEdit.FrontColor = CL_BLACK;
;;;402    	FormHttp->FontEdit.Space = 0;
;;;403    
;;;404    	/* 标签字体 */
;;;405    	FormHttp->FontLabel.FontCode = FC_ST_16;
;;;406    	FormHttp->FontLabel.BackColor = FORM_BACK_COLOR;	/* 窗体背景色 */
;;;407    	FormHttp->FontLabel.FrontColor = CL_BLACK;
;;;408    	FormHttp->FontLabel.Space = 0;
;;;409    
;;;410    	/* 分组框 */
;;;411    	FormHttp->BoxUip.Left = BOX1_X;
;;;412    	FormHttp->BoxUip.Top = BOX1_Y;
;;;413    	FormHttp->BoxUip.Height = BOX1_H;
;;;414    	FormHttp->BoxUip.Width = BOX1_W;
;;;415    	FormHttp->BoxUip.pCaption = BOX1_TEXT;
000012  a480              ADR      r4,|L2.532|
000014  7402              STRB     r2,[r0,#0x10]         ;393
000016  8281              STRH     r1,[r0,#0x14]         ;394
000018  2100              MOVS     r1,#0                 ;395
00001a  8241              STRH     r1,[r0,#0x12]         ;395
00001c  82c1              STRH     r1,[r0,#0x16]         ;396
00001e  7202              STRB     r2,[r0,#8]            ;399
000020  8183              STRH     r3,[r0,#0xc]          ;400
000022  8141              STRH     r1,[r0,#0xa]          ;401
000024  81c1              STRH     r1,[r0,#0xe]          ;402
000026  7002              STRB     r2,[r0,#0]            ;405
000028  f64e725b          MOV      r2,#0xef5b            ;406
00002c  8082              STRH     r2,[r0,#4]            ;406
00002e  8041              STRH     r1,[r0,#2]            ;407
000030  80c1              STRH     r1,[r0,#6]            ;408
000032  2205              MOVS     r2,#5                 ;411
000034  8442              STRH     r2,[r0,#0x22]         ;411
000036  2232              MOVS     r2,#0x32              ;412
000038  8482              STRH     r2,[r0,#0x24]         ;412
00003a  2296              MOVS     r2,#0x96              ;413
00003c  84c2              STRH     r2,[r0,#0x26]         ;413
00003e  4a74              LDR      r2,|L2.528|
;;;416    	FormHttp->BoxUip.Font = &FormHttp->FontLabel;
;;;417    
;;;418    	FormHttp->BoxLwip.Left = BOX2_X;
;;;419    	FormHttp->BoxLwip.Top = BOX2_Y;
;;;420    	FormHttp->BoxLwip.Height = BOX2_H;
;;;421    	FormHttp->BoxLwip.Width = BOX2_W;
;;;422    	FormHttp->BoxLwip.pCaption = BOX2_TEXT;
;;;423    	FormHttp->BoxLwip.Font = &FormHttp->FontLabel;
;;;424    
;;;425    	/* 标签 */
;;;426    	FormHttp->LabelIP.Left = LABEL_IP_X;
;;;427    	FormHttp->LabelIP.Top = LABEL_IP_Y;
;;;428    	FormHttp->LabelIP.MaxLen = 0;
;;;429    	FormHttp->LabelIP.pCaption = LABEL_IP_TEXT;
;;;430    	FormHttp->LabelIP.Font = &FormHttp->FontLabel;
;;;431    
;;;432    	FormHttp->LabelNetMask.Left = LABEL_MASK_X;
;;;433    	FormHttp->LabelNetMask.Top = LABEL_MASK_Y;
;;;434    	FormHttp->LabelNetMask.MaxLen = 0;
;;;435    	FormHttp->LabelNetMask.pCaption = LABEL_MASK_TEXT;
000040  a581              ADR      r5,|L2.584|
000042  8813              LDRH     r3,[r2,#0]            ;414  ; g_LcdWidth
000044  f1a30210          SUB      r2,r3,#0x10           ;414
000048  eb0276d2          ADD      r6,r2,r2,LSR #31      ;414
00004c  0872              LSRS     r2,r6,#1              ;414
00004e  8502              STRH     r2,[r0,#0x28]         ;414
000050  e9c0040b          STRD     r0,r4,[r0,#0x2c]      ;415
000054  240a              MOVS     r4,#0xa               ;418
000056  eb040466          ADD      r4,r4,r6,ASR #1       ;418
00005a  86c4              STRH     r4,[r0,#0x36]         ;418
00005c  2432              MOVS     r4,#0x32              ;419
00005e  8704              STRH     r4,[r0,#0x38]         ;419
000060  2496              MOVS     r4,#0x96              ;420
000062  8744              STRH     r4,[r0,#0x3a]         ;420
000064  8782              STRH     r2,[r0,#0x3c]         ;421
000066  a26f              ADR      r2,|L2.548|
000068  e9c00210          STRD     r0,r2,[r0,#0x40]      ;422
00006c  220b              MOVS     r2,#0xb               ;426
00006e  f8a0204a          STRH     r2,[r0,#0x4a]         ;426
000072  2446              MOVS     r4,#0x46              ;427
000074  f8a0404c          STRH     r4,[r0,#0x4c]         ;427
000078  f8a01052          STRH     r1,[r0,#0x52]         ;428
00007c  a470              ADR      r4,|L2.576|
00007e  e9c00415          STRD     r0,r4,[r0,#0x54]      ;429
000082  f8a0205e          STRH     r2,[r0,#0x5e]         ;432
000086  2462              MOVS     r4,#0x62              ;433
000088  f8a04060          STRH     r4,[r0,#0x60]         ;433
00008c  f8a01066          STRH     r1,[r0,#0x66]         ;434
000090  e9c0051a          STRD     r0,r5,[r0,#0x68]
;;;436    	FormHttp->LabelNetMask.Font = &FormHttp->FontLabel;
;;;437    
;;;438    	FormHttp->LabelGateway.Left = LABEL_GATE_X;
000094  f8a02072          STRH     r2,[r0,#0x72]
;;;439    	FormHttp->LabelGateway.Top = LABEL_GATE_Y;
000098  257e              MOVS     r5,#0x7e
00009a  f8a05074          STRH     r5,[r0,#0x74]
;;;440    	FormHttp->LabelGateway.MaxLen = 0;
00009e  f8a0107a          STRH     r1,[r0,#0x7a]
;;;441    	FormHttp->LabelGateway.pCaption = LABEL_GATE_TEXT;
0000a2  a26c              ADR      r2,|L2.596|
;;;442    	FormHttp->LabelGateway.Font = &FormHttp->FontLabel;
0000a4  e9c0021f          STRD     r0,r2,[r0,#0x7c]
;;;443    
;;;444    	FormHttp->LabelLwIP.Left = LABEL_LWIP_X;
0000a8  2210              MOVS     r2,#0x10
0000aa  eb020266          ADD      r2,r2,r6,ASR #1
0000ae  f8a02086          STRH     r2,[r0,#0x86]
;;;445    	FormHttp->LabelLwIP.Top = LABEL_LWIP_Y;
0000b2  2746              MOVS     r7,#0x46
0000b4  f8a07088          STRH     r7,[r0,#0x88]
;;;446    	FormHttp->LabelLwIP.MaxLen = 0;
0000b8  f8a0108e          STRH     r1,[r0,#0x8e]
;;;447    	FormHttp->LabelLwIP.pCaption = LABEL_LWIP_TEXT;
0000bc  a760              ADR      r7,|L2.576|
;;;448    	FormHttp->LabelLwIP.Font = &FormHttp->FontLabel;
0000be  e9c00724          STRD     r0,r7,[r0,#0x90]
;;;449    
;;;450    	FormHttp->LabelLwNetMask.Left = LABEL_LWMASK_X;
0000c2  f8a0209a          STRH     r2,[r0,#0x9a]
;;;451    	FormHttp->LabelLwNetMask.Top = LABEL_LWMASK_Y;
0000c6  f8a0409c          STRH     r4,[r0,#0x9c]
;;;452    	FormHttp->LabelLwNetMask.MaxLen = 0;
0000ca  f8a010a2          STRH     r1,[r0,#0xa2]
;;;453    	FormHttp->LabelLwNetMask.pCaption = LABEL_LWMASK_TEXT;
0000ce  a45e              ADR      r4,|L2.584|
;;;454    	FormHttp->LabelLwNetMask.Font = &FormHttp->FontLabel;
0000d0  e9c00429          STRD     r0,r4,[r0,#0xa4]
;;;455    
;;;456    	FormHttp->LabelLwGateway.Left = LABEL_LWGATE_X;
0000d4  f8a020ae          STRH     r2,[r0,#0xae]
;;;457    	FormHttp->LabelLwGateway.Top = LABEL_LWGATE_Y;
0000d8  f8a050b0          STRH     r5,[r0,#0xb0]
;;;458    	FormHttp->LabelLwGateway.MaxLen = 0;
0000dc  f8a010b6          STRH     r1,[r0,#0xb6]
;;;459    	FormHttp->LabelLwGateway.pCaption = LABEL_LWGATE_TEXT;
0000e0  a25c              ADR      r2,|L2.596|
;;;460    	FormHttp->LabelLwGateway.Font = &FormHttp->FontLabel;
0000e2  e9c0022e          STRD     r0,r2,[r0,#0xb8]
;;;461    
;;;462    
;;;463    	/* 编辑框 */
;;;464    	/* uip */
;;;465    	FormHttp->EditIP.Left = EDIT_IP_X;
0000e6  275b              MOVS     r7,#0x5b
0000e8  f8a070c2          STRH     r7,[r0,#0xc2]
;;;466    	FormHttp->EditIP.Top = EDIT_IP_Y;
0000ec  f04f0844          MOV      r8,#0x44
0000f0  f8a080c4          STRH     r8,[r0,#0xc4]
;;;467    	FormHttp->EditIP.Height = EDIT_IP_H;
0000f4  2214              MOVS     r2,#0x14
0000f6  f8a020c6          STRH     r2,[r0,#0xc6]
;;;468    	FormHttp->EditIP.Width = EDIT_IP_W;
0000fa  2584              MOVS     r5,#0x84
0000fc  f8a050c8          STRH     r5,[r0,#0xc8]
;;;469    	FormHttp->EditIP.pCaption = FormHttp->EditIP.Text;
000100  f10002d4          ADD      r2,r0,#0xd4
;;;470    	FormHttp->EditIP.Font = &FormHttp->FontBtn;
000104  f8c020d0          STR      r2,[r0,#0xd0]
000108  3ac4              SUBS     r2,r2,#0xc4
;;;471    
;;;472    	FormHttp->EditNetMask.Left = EDIT_MASK_X;
00010a  f8c020cc          STR      r2,[r0,#0xcc]
00010e  f8a070f6          STRH     r7,[r0,#0xf6]
;;;473    	FormHttp->EditNetMask.Top = EDIT_MASK_Y;
000112  f04f0c60          MOV      r12,#0x60
000116  f8a0c0f8          STRH     r12,[r0,#0xf8]
;;;474    	FormHttp->EditNetMask.Height = EDIT_MASK_H;
00011a  2414              MOVS     r4,#0x14
00011c  f8a040fa          STRH     r4,[r0,#0xfa]
;;;475    	FormHttp->EditNetMask.Width = EDIT_MASK_W;
000120  f8a050fc          STRH     r5,[r0,#0xfc]
;;;476    	FormHttp->EditNetMask.pCaption = FormHttp->EditNetMask.Text;
000124  f5007484          ADD      r4,r0,#0x108
;;;477    	FormHttp->EditNetMask.Font = &FormHttp->FontEdit;
000128  f8c04104          STR      r4,[r0,#0x104]
00012c  f1000408          ADD      r4,r0,#8
;;;478    
;;;479    	FormHttp->EditGateway.Left = EDIT_GATE_X;
000130  f8c04100          STR      r4,[r0,#0x100]
000134  f8a0712a          STRH     r7,[r0,#0x12a]
;;;480    	FormHttp->EditGateway.Top = EDIT_GATE_Y;
000138  f04f097c          MOV      r9,#0x7c
00013c  f8a0912c          STRH     r9,[r0,#0x12c]
;;;481    	FormHttp->EditGateway.Height = EDIT_GATE_H;
000140  2714              MOVS     r7,#0x14
000142  f8a0712e          STRH     r7,[r0,#0x12e]
;;;482    	FormHttp->EditGateway.Width = EDIT_GATE_W;
000146  f8a05130          STRH     r5,[r0,#0x130]
;;;483    	FormHttp->EditGateway.pCaption = FormHttp->EditGateway.Text;
00014a  f500779e          ADD      r7,r0,#0x13c
00014e  e9c0474d          STRD     r4,r7,[r0,#0x134]
;;;484    	FormHttp->EditGateway.Font = &FormHttp->FontEdit;
;;;485    
;;;486    	/* lwip */
;;;487    	FormHttp->EditLwIP.Left = EDIT_LWIP_X;
000152  eb0c0766          ADD      r7,r12,r6,ASR #1
000156  f8a0715e          STRH     r7,[r0,#0x15e]
;;;488    	FormHttp->EditLwIP.Top = EDIT_LWIP_Y;
00015a  f8a08160          STRH     r8,[r0,#0x160]
;;;489    	FormHttp->EditLwIP.Height = EDIT_LWIP_H;
00015e  f04f0814          MOV      r8,#0x14
000162  f8a08162          STRH     r8,[r0,#0x162]
;;;490    	FormHttp->EditLwIP.Width = EDIT_LWIP_W;
000166  f8a05164          STRH     r5,[r0,#0x164]
;;;491    	FormHttp->EditLwIP.pCaption = FormHttp->EditLwIP.Text;
00016a  f50078b8          ADD      r8,r0,#0x170
00016e  e9c0285a          STRD     r2,r8,[r0,#0x168]
;;;492    	FormHttp->EditLwIP.Font = &FormHttp->FontBtn;
;;;493    
;;;494    	FormHttp->EditLwNetMask.Left = EDIT_LWMASK_X;
000172  f8a07192          STRH     r7,[r0,#0x192]
;;;495    	FormHttp->EditLwNetMask.Top = EDIT_LWMASK_Y;
000176  f8a0c194          STRH     r12,[r0,#0x194]
;;;496    	FormHttp->EditLwNetMask.Height = EDIT_LWMASK_H;
00017a  f04f0c14          MOV      r12,#0x14
00017e  f8a0c196          STRH     r12,[r0,#0x196]
;;;497    	FormHttp->EditLwNetMask.Width = EDIT_LWMASK_W;
000182  f8a05198          STRH     r5,[r0,#0x198]
;;;498    	FormHttp->EditLwNetMask.pCaption = FormHttp->EditLwNetMask.Text;
000186  f5007cd2          ADD      r12,r0,#0x1a4
00018a  e9e04c67          STRD     r4,r12,[r0,#0x19c]!
;;;499    	FormHttp->EditLwNetMask.Font = &FormHttp->FontEdit;
;;;500    
;;;501    	FormHttp->EditLwGateway.Left = EDIT_LWGATE_X;
;;;502    	FormHttp->EditLwGateway.Top = EDIT_LWGATE_Y;
;;;503    	FormHttp->EditLwGateway.Height = EDIT_LWGATE_H;
;;;504    	FormHttp->EditLwGateway.Width = EDIT_LWGATE_W;
;;;505    	FormHttp->EditLwGateway.pCaption = FormHttp->EditLwGateway.Text;
00018e  3b40              SUBS     r3,r3,#0x40
000190  8547              STRH     r7,[r0,#0x2a]         ;501
000192  f8a0902c          STRH     r9,[r0,#0x2c]         ;502
000196  2714              MOVS     r7,#0x14              ;503
000198  85c7              STRH     r7,[r0,#0x2e]         ;503
00019a  8605              STRH     r5,[r0,#0x30]         ;504
00019c  f100053c          ADD      r5,r0,#0x3c
0001a0  e9c0450d          STRD     r4,r5,[r0,#0x34]
;;;506    	FormHttp->EditLwGateway.Font = &FormHttp->FontEdit;
;;;507    
;;;508    	/* 按钮 */
;;;509    	FormHttp->ButtonRet.Left = BUTTON_RET_X;
0001a4  f8a0308e          STRH     r3,[r0,#0x8e]
;;;510    	FormHttp->ButtonRet.Top = BUTTON_RET_Y;
0001a8  4b2d              LDR      r3,|L2.608|
;;;511    	FormHttp->ButtonRet.Height = BUTTON_RET_H;
;;;512    	FormHttp->ButtonRet.Width = BUTTON_RET_W;
0001aa  243c              MOVS     r4,#0x3c
0001ac  881b              LDRH     r3,[r3,#0]            ;510  ; g_LcdHeight
0001ae  3b24              SUBS     r3,r3,#0x24           ;510
0001b0  f8a03090          STRH     r3,[r0,#0x90]         ;510
0001b4  2320              MOVS     r3,#0x20              ;511
0001b6  f8a03092          STRH     r3,[r0,#0x92]         ;511
0001ba  f8a04094          STRH     r4,[r0,#0x94]
;;;513    	FormHttp->ButtonRet.pCaption = BUTTON_RET_TEXT;
0001be  a429              ADR      r4,|L2.612|
0001c0  e9c02426          STRD     r2,r4,[r0,#0x98]
;;;514    	FormHttp->ButtonRet.Font = &FormHttp->FontBtn;
;;;515    	FormHttp->ButtonRet.Focus = 0;
0001c4  f88010a0          STRB     r1,[r0,#0xa0]
;;;516    
;;;517    	FormHttp->ButtonSetIP.Left = BUTTON_IP_X;
0001c8  2419              MOVS     r4,#0x19
0001ca  f8a0405e          STRH     r4,[r0,#0x5e]
;;;518    	FormHttp->ButtonSetIP.Top = BUTTON_IP_Y;
0001ce  24a0              MOVS     r4,#0xa0
0001d0  f8a04060          STRH     r4,[r0,#0x60]
;;;519    	FormHttp->ButtonSetIP.Height = BUTTON_IP_H;
0001d4  f8a03062          STRH     r3,[r0,#0x62]
;;;520    	FormHttp->ButtonSetIP.Width = BUTTON_IP_W;
0001d8  256e              MOVS     r5,#0x6e
0001da  f8a05064          STRH     r5,[r0,#0x64]
;;;521    	FormHttp->ButtonSetIP.pCaption = BUTTON_IP_TEXT;
0001de  a723              ADR      r7,|L2.620|
0001e0  e9c0271a          STRD     r2,r7,[r0,#0x68]
;;;522    	FormHttp->ButtonSetIP.Font = &FormHttp->FontBtn;
;;;523    	FormHttp->ButtonSetIP.Focus = 0;
;;;524    
;;;525    	FormHttp->ButtonLwSetIP.Left = BUTTON_LWIP_X;
0001e4  271e              MOVS     r7,#0x1e
0001e6  f8801070          STRB     r1,[r0,#0x70]         ;523
0001ea  eb070666          ADD      r6,r7,r6,ASR #1
0001ee  f8a06076          STRH     r6,[r0,#0x76]
;;;526    	FormHttp->ButtonLwSetIP.Top = BUTTON_LWIP_Y;
0001f2  f8a04078          STRH     r4,[r0,#0x78]
;;;527    	FormHttp->ButtonLwSetIP.Height = BUTTON_LWIP_H;
0001f6  f8a0307a          STRH     r3,[r0,#0x7a]
;;;528    	FormHttp->ButtonLwSetIP.Width = BUTTON_LWIP_W;
0001fa  f8a0507c          STRH     r5,[r0,#0x7c]
;;;529    	FormHttp->ButtonLwSetIP.pCaption = BUTTON_LWIP_TEXT;
0001fe  a31e              ADR      r3,|L2.632|
000200  e9c02320          STRD     r2,r3,[r0,#0x80]
;;;530    	FormHttp->ButtonLwSetIP.Font = &FormHttp->FontBtn;
;;;531    	FormHttp->ButtonLwSetIP.Focus = 0;
000204  f8801088          STRB     r1,[r0,#0x88]
;;;532    }
000208  e8bd83f0          POP      {r4-r9,pc}
;;;533    
                          ENDP

                  |L2.524|
                          DCD      ||.data||
                  |L2.528|
                          DCD      g_LcdWidth
                  |L2.532|
000214  444d3930          DCB      "DM9000",205,248,191,168,"(uIP)",0
000218  3030cdf8
00021c  bfa82875
000220  49502900
                  |L2.548|
000224  46343037          DCB      "F407 MAC + DM9161 PHY ",205,248,191,168,0
000228  204d4143
00022c  202b2044
000230  4d393136
000234  31205048
000238  5920cdf8
00023c  bfa800  
00023f  00                DCB      0
                  |L2.576|
000240  b1bebbfa          DCB      177,190,187,250,"IP:",0
000244  49503a00
                  |L2.584|
000248  d7d3cdf8          DCB      215,211,205,248,209,218,194,235,":",0
00024c  d1dac2eb
000250  3a00    
000252  00                DCB      0
000253  00                DCB      0
                  |L2.596|
000254  c4acc8cf          DCB      196,172,200,207,205,248,185,216,":",0
000258  cdf8b9d8
00025c  3a00    
00025e  00                DCB      0
00025f  00                DCB      0
                  |L2.608|
                          DCD      g_LcdHeight
                  |L2.612|
000264  b7b5bbd8          DCB      183,181,187,216,0
000268  00      
000269  00                DCB      0
00026a  00                DCB      0
00026b  00                DCB      0
                  |L2.620|
00026c  d6d8c9e8          DCB      214,216,201,232,"uIP",205,248,194,231,0
000270  754950cd
000274  f8c2e700
                  |L2.632|
000278  d6d8c9e8          DCB      214,216,201,232,"LwIP",205,248,194,231,0
00027c  4c774950
000280  cdf8c2e7
000284  00      
000285  00                DCB      0
000286  00                DCB      0
000287  00                DCB      0

                          AREA ||i.WebServer||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  WebServer PROC
;;;179    */
;;;180    void WebServer(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;181    {
;;;182    	uint8_t ucKeyCode;		/* 按键代码 */
;;;183    	uint8_t ucTouch;		/* 触摸事件 */
;;;184    	int16_t tpX, tpY;
;;;185    	uint16_t x, y;
;;;186    	uint16_t usLineCap = 18;
;;;187    	char buf[128];
;;;188    	uint8_t fRefresh;
;;;189    	FONT_T tFont;		/* 定义字体结构体变量 */
;;;190    	FormHttp_T tForm;
;;;191    
;;;192    	FormHttp = &tForm;
000004  4cb4              LDR      r4,|L3.728|
000006  f5ad7d3d          SUB      sp,sp,#0x2f4          ;181
00000a  a822              ADD      r0,sp,#0x88
;;;193    
;;;194    	/* 设置字体参数 */
;;;195    	{
;;;196    		tFont.FontCode = FC_ST_16;	/* 字体代码 16点阵 */
00000c  6020              STR      r0,[r4,#0]  ; FormHttp
;;;197    		tFont.FrontColor = CL_BLACK;	/* 字体颜色 */
;;;198    		tFont.BackColor = FORM_BACK_COLOR;	/* 文字背景颜色 */
00000e  f64e795b          MOV      r9,#0xef5b
000012  f04f0801          MOV      r8,#1                 ;196
000016  2500              MOVS     r5,#0                 ;197
000018  f88d82cc          STRB     r8,[sp,#0x2cc]        ;196
00001c  464e              MOV      r6,r9
00001e  f8ad92d0          STRH     r9,[sp,#0x2d0]
000022  2712              MOVS     r7,#0x12              ;186
000024  f8ad52ce          STRH     r5,[sp,#0x2ce]        ;197
;;;199    		tFont.Space = 0;				/* 文字间距，单位 = 像素 */
000028  f8ad52d2          STRH     r5,[sp,#0x2d2]
;;;200    
;;;201    	}
;;;202    
;;;203    	LCD_ClrScr(FORM_BACK_COLOR);  	/* 清屏，背景蓝色 */
00002c  4630              MOV      r0,r6
00002e  f7fffffe          BL       LCD_ClrScr
;;;204    
;;;205    	LCD_DispStr(5, 3, "正在启动网卡...", &tFont);
000032  abb3              ADD      r3,sp,#0x2cc
000034  a2a9              ADR      r2,|L3.732|
000036  2103              MOVS     r1,#3
000038  2005              MOVS     r0,#5
00003a  f7fffffe          BL       LCD_DispStr
;;;206    
;;;207    	/* UIP 初始化 */
;;;208    	{
;;;209    		/* 网络参数存在在全局变量 g_tParam.uip_ip, g_tParam.uip_net_mask, g_tParam.uip_gateway */
;;;210    		uip_start();
00003e  f7fffffe          BL       uip_start
;;;211    	}
;;;212    
;;;213    	LCD_ClrScr(FORM_BACK_COLOR);  	/* 清屏，背景蓝色 */
000042  4630              MOV      r0,r6
000044  f7fffffe          BL       LCD_ClrScr
;;;214    
;;;215    	InitFormHttp();
000048  f7fffffe          BL       InitFormHttp
;;;216    
;;;217    	fRefresh = 1;
00004c  2601              MOVS     r6,#1
00004e  f10d0a08          ADD      r10,sp,#8             ;187
;;;218    	while(1)
;;;219    	{
;;;220    		bsp_Idle();
000052  bf00              NOP      
                  |L3.84|
000054  f7fffffe          BL       bsp_Idle
;;;221    
;;;222    		uip_pro();
000058  f7fffffe          BL       uip_pro
;;;223    
;;;224    		if (fRefresh)	/* 刷新整个界面 */
00005c  2e00              CMP      r6,#0
00005e  d038              BEQ      |L3.210|
;;;225    		{
;;;226    			fRefresh = 0;
;;;227    
;;;228    			//LCD_ClrScr(FORM_BACK_COLOR);  	/* 不要整体刷屏，会引起闪烁 */
;;;229    
;;;230    			x = 5;
000060  2005              MOVS     r0,#5
000062  2600              MOVS     r6,#0                 ;226
;;;231    			y = 3;
000064  2103              MOVS     r1,#3
;;;232    			LCD_DispStr(x, y, "WEB服务器程序", &tFont);
000066  abb3              ADD      r3,sp,#0x2cc
000068  a2a0              ADR      r2,|L3.748|
00006a  9001              STR      r0,[sp,#4]
00006c  f7fffffe          BL       LCD_DispStr
;;;233    			y += usLineCap;
000070  f1070b03          ADD      r11,r7,#3
;;;234    
;;;235    			/* 打印芯片ID */
;;;236    			{
;;;237    				uint32_t id;
;;;238    
;;;239    				id = dm9k_ReadID();
000074  f7fffffe          BL       dm9k_ReadID
;;;240    				sprintf(buf, "DM9000 ID = 0x%08X", id);
000078  4602              MOV      r2,r0
00007a  90b5              STR      r0,[sp,#0x2d4]
00007c  a19f              ADR      r1,|L3.764|
00007e  a802              ADD      r0,sp,#8
000080  f7fffffe          BL       __2sprintf
;;;241    
;;;242    				if (id == 0x0A469000)
000084  49a2              LDR      r1,|L3.784|
000086  98b5              LDR      r0,[sp,#0x2d4]
000088  4288              CMP      r0,r1
00008a  d10d              BNE      |L3.168|
;;;243    				{
;;;244    					sprintf(&buf[strlen(buf)], ", Ok");
00008c  a802              ADD      r0,sp,#8
00008e  f7fffffe          BL       strlen
000092  4450              ADD      r0,r0,r10
000094  a19f              ADR      r1,|L3.788|
000096  f7fffffe          BL       __2sprintf
;;;245    					LCD_DispStr(x, y, buf, &tFont);
00009a  abb3              ADD      r3,sp,#0x2cc
00009c  aa02              ADD      r2,sp,#8
00009e  4659              MOV      r1,r11
0000a0  9801              LDR      r0,[sp,#4]
0000a2  f7fffffe          BL       LCD_DispStr
0000a6  e012              B        |L3.206|
                  |L3.168|
;;;246    				}
;;;247    				else
;;;248    				{
;;;249    					tFont.FrontColor = CL_RED;	/* 红色字体表示错误 */
0000a8  f44f4078          MOV      r0,#0xf800
0000ac  f8ad02ce          STRH     r0,[sp,#0x2ce]
;;;250    					sprintf(&buf[strlen(buf)], ", Err");
0000b0  a802              ADD      r0,sp,#8
0000b2  f7fffffe          BL       strlen
0000b6  4450              ADD      r0,r0,r10
0000b8  a198              ADR      r1,|L3.796|
0000ba  f7fffffe          BL       __2sprintf
;;;251    					LCD_DispStr(x, y, buf, &tFont);
0000be  abb3              ADD      r3,sp,#0x2cc
0000c0  aa02              ADD      r2,sp,#8
0000c2  4659              MOV      r1,r11
0000c4  9801              LDR      r0,[sp,#4]
0000c6  f7fffffe          BL       LCD_DispStr
;;;252    					tFont.FrontColor = CL_BLACK;/* 恢复文字颜色 */
0000ca  f8ad52ce          STRH     r5,[sp,#0x2ce]
                  |L3.206|
;;;253    				}
;;;254    
;;;255    				y += usLineCap;
;;;256    			}
;;;257    
;;;258    			DispFormHttp();
0000ce  f7fffffe          BL       DispFormHttp
                  |L3.210|
;;;259    		}
;;;260    
;;;261    		ucTouch = TOUCH_GetKey(&tpX, &tpY);	/* 读取触摸事件 */
0000d2  a9b2              ADD      r1,sp,#0x2c8
0000d4  a8b9              ADD      r0,sp,#0x2e4
0000d6  f7fffffe          BL       TOUCH_GetKey
;;;262    		if (ucTouch != TOUCH_NONE)
0000da  2800              CMP      r0,#0
0000dc  d05e              BEQ      |L3.412|
;;;263    		{
;;;264    			switch (ucTouch)
0000de  2801              CMP      r0,#1
0000e0  d004              BEQ      |L3.236|
0000e2  2802              CMP      r0,#2
0000e4  d07b              BEQ      |L3.478|
0000e6  2803              CMP      r0,#3
0000e8  d158              BNE      |L3.412|
0000ea  e0b0              B        |L3.590|
                  |L3.236|
;;;265    			{
;;;266    				case TOUCH_DOWN:		/* 触笔按下事件 */
;;;267    					if (TOUCH_InRect(tpX, tpY, FormHttp->ButtonRet.Left, FormHttp->ButtonRet.Top,
0000ec  6820              LDR      r0,[r4,#0]  ; FormHttp
0000ee  f8b02230          LDRH     r2,[r0,#0x230]
0000f2  f8b0122e          LDRH     r1,[r0,#0x22e]
0000f6  e9cd1200          STRD     r1,r2,[sp,#0]
0000fa  f8b0322c          LDRH     r3,[r0,#0x22c]
0000fe  f8b0222a          LDRH     r2,[r0,#0x22a]
000102  f8bd02c8          LDRH     r0,[sp,#0x2c8]
000106  b281              UXTH     r1,r0
000108  f8bd02e4          LDRH     r0,[sp,#0x2e4]
00010c  b280              UXTH     r0,r0
00010e  f7fffffe          BL       TOUCH_InRect
000112  2800              CMP      r0,#0
000114  6820              LDR      r0,[r4,#0]  ; FormHttp
000116  d004              BEQ      |L3.290|
;;;268    						FormHttp->ButtonRet.Height, FormHttp->ButtonRet.Width))
;;;269    					{
;;;270    						FormHttp->ButtonRet.Focus = 1;
000118  f880823c          STRB     r8,[r0,#0x23c]
00011c  f500700a          ADD      r0,r0,#0x228
;;;271    						LCD_DrawButton(&FormHttp->ButtonRet);	/* 绘制选中状态的按钮 */
000120  e017              B        |L3.338|
                  |L3.290|
;;;272    					}
;;;273    					else if (TOUCH_InRect(tpX, tpY, FormHttp->ButtonSetIP.Left, FormHttp->ButtonSetIP.Top,
000122  f8b02200          LDRH     r2,[r0,#0x200]
000126  f8b011fe          LDRH     r1,[r0,#0x1fe]
00012a  e9cd1200          STRD     r1,r2,[sp,#0]
00012e  f8b031fc          LDRH     r3,[r0,#0x1fc]
000132  f8b021fa          LDRH     r2,[r0,#0x1fa]
000136  f8bd02c8          LDRH     r0,[sp,#0x2c8]
00013a  b281              UXTH     r1,r0
00013c  f8bd02e4          LDRH     r0,[sp,#0x2e4]
000140  b280              UXTH     r0,r0
000142  f7fffffe          BL       TOUCH_InRect
000146  b130              CBZ      r0,|L3.342|
;;;274    						FormHttp->ButtonSetIP.Height, FormHttp->ButtonSetIP.Width))
;;;275    					{
;;;276    						FormHttp->ButtonSetIP.Focus = 1;
000148  6820              LDR      r0,[r4,#0]  ; FormHttp
00014a  f880820c          STRB     r8,[r0,#0x20c]
00014e  f50070fc          ADD      r0,r0,#0x1f8
                  |L3.338|
;;;277    						LCD_DrawButton(&FormHttp->ButtonSetIP);	/* 绘制选中状态的按钮 */
000152  f7fffffe          BL       LCD_DrawButton
                  |L3.342|
;;;278    					}
;;;279    
;;;280    					/* 判断 UIP 编辑框 */
;;;281    					if (TOUCH_InRect(tpX, tpY, FormHttp->EditIP.Left, FormHttp->EditIP.Top,
000156  6820              LDR      r0,[r4,#0]  ; FormHttp
000158  f8b020c8          LDRH     r2,[r0,#0xc8]
00015c  f8b010c6          LDRH     r1,[r0,#0xc6]
000160  e9cd1200          STRD     r1,r2,[sp,#0]
000164  f8b030c4          LDRH     r3,[r0,#0xc4]
000168  f8b020c2          LDRH     r2,[r0,#0xc2]
00016c  f8bd02c8          LDRH     r0,[sp,#0x2c8]
000170  b281              UXTH     r1,r0
000172  f8bd02e4          LDRH     r0,[sp,#0x2e4]
000176  b280              UXTH     r0,r0
000178  f7fffffe          BL       TOUCH_InRect
00017c  b178              CBZ      r0,|L3.414|
;;;282    						FormHttp->EditIP.Height, FormHttp->EditIP.Width))
;;;283    					{
;;;284    						{
;;;285    							uint8_t ip_buf[4];
;;;286    
;;;287    							if (InputNumber(NUMPAD_IP, "设置本机IP (For Uip)", 0, (void *)ip_buf))
00017e  2200              MOVS     r2,#0
000180  466b              MOV      r3,sp
000182  a168              ADR      r1,|L3.804|
000184  4610              MOV      r0,r2
000186  f7fffffe          BL       InputNumber
00018a  b118              CBZ      r0,|L3.404|
;;;288    							{
;;;289    								memcpy(g_tParam.uip_ip, ip_buf, 4);
00018c  486b              LDR      r0,|L3.828|
00018e  9900              LDR      r1,[sp,#0]
;;;290    								SaveParam();	/* 将参数保存到Flash */
000190  6281              STR      r1,[r0,#0x28]  ; g_tParam
000192  e044              B        |L3.542|
                  |L3.404|
;;;291    							}
;;;292    
;;;293    							ClearWinNumPad(FORM_BACK_COLOR);	/* 清除数字键盘窗口 */
000194  4648              MOV      r0,r9
000196  f7fffffe          BL       ClearWinNumPad
;;;294    							fRefresh = 1;
00019a  2601              MOVS     r6,#1
                  |L3.412|
;;;295    						}
00019c  e090              B        |L3.704|
                  |L3.414|
;;;296    					}
;;;297    					else if (TOUCH_InRect(tpX, tpY, FormHttp->EditNetMask.Left, FormHttp->EditNetMask.Top,
00019e  6820              LDR      r0,[r4,#0]  ; FormHttp
0001a0  f8b020fc          LDRH     r2,[r0,#0xfc]
0001a4  f8b010fa          LDRH     r1,[r0,#0xfa]
0001a8  e9cd1200          STRD     r1,r2,[sp,#0]
0001ac  f8b030f8          LDRH     r3,[r0,#0xf8]
0001b0  f8b020f6          LDRH     r2,[r0,#0xf6]
0001b4  f8bd02c8          LDRH     r0,[sp,#0x2c8]
0001b8  b281              UXTH     r1,r0
0001ba  f8bd02e4          LDRH     r0,[sp,#0x2e4]
0001be  b280              UXTH     r0,r0
0001c0  f7fffffe          BL       TOUCH_InRect
0001c4  b160              CBZ      r0,|L3.480|
;;;298    						FormHttp->EditNetMask.Height, FormHttp->EditNetMask.Width))
;;;299    					{
;;;300    						{
;;;301    							uint8_t ip_buf[4];
;;;302    
;;;303    							if (InputNumber(NUMPAD_IP, "设置子网掩码 (For Uip)", 0, (void *)ip_buf))
0001c6  2200              MOVS     r2,#0
0001c8  466b              MOV      r3,sp
0001ca  a15d              ADR      r1,|L3.832|
0001cc  4610              MOV      r0,r2
0001ce  f7fffffe          BL       InputNumber
0001d2  2800              CMP      r0,#0
0001d4  d0de              BEQ      |L3.404|
;;;304    							{
;;;305    								memcpy(g_tParam.uip_net_mask, ip_buf, 4);
0001d6  4859              LDR      r0,|L3.828|
0001d8  9900              LDR      r1,[sp,#0]
;;;306    								SaveParam();	/* 将参数保存到Flash */
0001da  62c1              STR      r1,[r0,#0x2c]  ; g_tParam
0001dc  e01f              B        |L3.542|
                  |L3.478|
0001de  e021              B        |L3.548|
                  |L3.480|
;;;307    							}
;;;308    
;;;309    							ClearWinNumPad(FORM_BACK_COLOR);	/* 清除数字键盘窗口 */
;;;310    							fRefresh = 1;
;;;311    						}
;;;312    					}
;;;313    					else if (TOUCH_InRect(tpX, tpY, FormHttp->EditGateway.Left, FormHttp->EditGateway.Top,
0001e0  6820              LDR      r0,[r4,#0]  ; FormHttp
0001e2  f8b02130          LDRH     r2,[r0,#0x130]
0001e6  f8b0112e          LDRH     r1,[r0,#0x12e]
0001ea  e9cd1200          STRD     r1,r2,[sp,#0]
0001ee  f8b0312c          LDRH     r3,[r0,#0x12c]
0001f2  f8b0212a          LDRH     r2,[r0,#0x12a]
0001f6  f8bd02c8          LDRH     r0,[sp,#0x2c8]
0001fa  b281              UXTH     r1,r0
0001fc  f8bd02e4          LDRH     r0,[sp,#0x2e4]
000200  b280              UXTH     r0,r0
000202  f7fffffe          BL       TOUCH_InRect
000206  b308              CBZ      r0,|L3.588|
;;;314    						FormHttp->EditGateway.Height, FormHttp->EditGateway.Width))
;;;315    					{
;;;316    						{
;;;317    							uint8_t ip_buf[4];
;;;318    
;;;319    							if (InputNumber(NUMPAD_IP, "设置默认网关 (For Uip)", 0, (void *)ip_buf))
000208  2200              MOVS     r2,#0
00020a  466b              MOV      r3,sp
00020c  a152              ADR      r1,|L3.856|
00020e  4610              MOV      r0,r2
000210  f7fffffe          BL       InputNumber
000214  2800              CMP      r0,#0
000216  d0bd              BEQ      |L3.404|
;;;320    							{
;;;321    								memcpy(g_tParam.uip_gateway, ip_buf, 4);
000218  4848              LDR      r0,|L3.828|
00021a  9900              LDR      r1,[sp,#0]
00021c  6301              STR      r1,[r0,#0x30]  ; g_tParam
                  |L3.542|
;;;322    								SaveParam();	/* 将参数保存到Flash */
00021e  f7fffffe          BL       SaveParam
000222  e7b7              B        |L3.404|
                  |L3.548|
;;;323    							}
;;;324    
;;;325    							ClearWinNumPad(FORM_BACK_COLOR);	/* 清除数字键盘窗口 */
;;;326    							fRefresh = 1;
;;;327    						}
;;;328    					}
;;;329    					break;
;;;330    
;;;331    				case TOUCH_MOVE:		/* 触笔移动事件 */
;;;332    					if (TOUCH_InRect(tpX, tpY, BUTTON_RET_X, BUTTON_RET_Y, BUTTON_RET_H, BUTTON_RET_W))
000224  213c              MOVS     r1,#0x3c
000226  2020              MOVS     r0,#0x20
000228  e9cd0100          STRD     r0,r1,[sp,#0]
00022c  4850              LDR      r0,|L3.880|
00022e  8800              LDRH     r0,[r0,#0]  ; g_LcdHeight
000230  3824              SUBS     r0,r0,#0x24
000232  b283              UXTH     r3,r0
000234  484f              LDR      r0,|L3.884|
000236  8800              LDRH     r0,[r0,#0]  ; g_LcdWidth
000238  3840              SUBS     r0,r0,#0x40
00023a  b282              UXTH     r2,r0
00023c  f8bd02c8          LDRH     r0,[sp,#0x2c8]
000240  b281              UXTH     r1,r0
000242  f8bd02e4          LDRH     r0,[sp,#0x2e4]
000246  b280              UXTH     r0,r0
000248  f7fffffe          BL       TOUCH_InRect
                  |L3.588|
;;;333    					{
;;;334    						;
;;;335    					}
;;;336    					break;
00024c  e038              B        |L3.704|
                  |L3.590|
;;;337    
;;;338    				case TOUCH_RELEASE:		/* 触笔释放事件 */
;;;339    					if (TOUCH_InRect(tpX, tpY, FormHttp->ButtonRet.Left, FormHttp->ButtonRet.Top,
00024e  6820              LDR      r0,[r4,#0]  ; FormHttp
000250  f8b02230          LDRH     r2,[r0,#0x230]
000254  f8b0122e          LDRH     r1,[r0,#0x22e]
000258  e9cd1200          STRD     r1,r2,[sp,#0]
00025c  f8b0322c          LDRH     r3,[r0,#0x22c]
000260  f8b0222a          LDRH     r2,[r0,#0x22a]
000264  f8bd02c8          LDRH     r0,[sp,#0x2c8]
000268  b281              UXTH     r1,r0
00026a  f8bd02e4          LDRH     r0,[sp,#0x2e4]
00026e  b280              UXTH     r0,r0
000270  f7fffffe          BL       TOUCH_InRect
000274  2800              CMP      r0,#0
000276  d12b              BNE      |L3.720|
;;;340    						FormHttp->ButtonRet.Height, FormHttp->ButtonRet.Width))
;;;341    					{
;;;342    						return;		/* 返回 */
;;;343    					}
;;;344    					else if (TOUCH_InRect(tpX, tpY, FormHttp->ButtonSetIP.Left, FormHttp->ButtonSetIP.Top,
000278  6820              LDR      r0,[r4,#0]  ; FormHttp
00027a  f8b02200          LDRH     r2,[r0,#0x200]
00027e  f8b011fe          LDRH     r1,[r0,#0x1fe]
000282  e9cd1200          STRD     r1,r2,[sp,#0]
000286  f8b031fc          LDRH     r3,[r0,#0x1fc]
00028a  f8b021fa          LDRH     r2,[r0,#0x1fa]
00028e  f8bd02c8          LDRH     r0,[sp,#0x2c8]
000292  b281              UXTH     r1,r0
000294  f8bd02e4          LDRH     r0,[sp,#0x2e4]
000298  b280              UXTH     r0,r0
00029a  f7fffffe          BL       TOUCH_InRect
00029e  b108              CBZ      r0,|L3.676|
;;;345    						FormHttp->ButtonSetIP.Height, FormHttp->ButtonSetIP.Width))
;;;346    					{
;;;347    						uip_ChangeNetParam();	/* 重设网络参数 */
0002a0  f7fffffe          BL       uip_ChangeNetParam
                  |L3.676|
;;;348    					}
;;;349    
;;;350    					/* 去除按钮的焦点状态 */
;;;351    					FormHttp->ButtonRet.Focus = 0;
0002a4  6820              LDR      r0,[r4,#0]  ; FormHttp
0002a6  f880523c          STRB     r5,[r0,#0x23c]
0002aa  f500700a          ADD      r0,r0,#0x228
;;;352    					LCD_DrawButton(&FormHttp->ButtonRet);	/* 绘制选中状态的按钮 */
0002ae  f7fffffe          BL       LCD_DrawButton
;;;353    
;;;354    					FormHttp->ButtonSetIP.Focus = 0;
0002b2  6820              LDR      r0,[r4,#0]  ; FormHttp
0002b4  f880520c          STRB     r5,[r0,#0x20c]
0002b8  f50070fc          ADD      r0,r0,#0x1f8
;;;355    					LCD_DrawButton(&FormHttp->ButtonSetIP);	/* 绘制选中状态的按钮 */					
0002bc  f7fffffe          BL       LCD_DrawButton
                  |L3.704|
;;;356    					break;
;;;357    			}
;;;358    		}
;;;359    
;;;360    		ucKeyCode = bsp_GetKey();	/* 读取键值, 无键按下时返回 KEY_NONE = 0 */
0002c0  f7fffffe          BL       bsp_GetKey
;;;361    		if (ucKeyCode != KEY_NONE)
0002c4  2800              CMP      r0,#0
0002c6  f43faec5          BEQ      |L3.84|
;;;362    		{
;;;363    			/* 有键按下 */
;;;364    			switch (ucKeyCode)
0002ca  2816              CMP      r0,#0x16
0002cc  f47faec2          BNE      |L3.84|
                  |L3.720|
;;;365    			{
;;;366    				case  JOY_DOWN_OK:		/* 摇杆OK键 */
;;;367    					return;		/* 返回 */
;;;368    
;;;369    				default:
;;;370    					break;
;;;371    			}
;;;372    		}
;;;373    	}
;;;374    }
0002d0  f50d7d3d          ADD      sp,sp,#0x2f4
0002d4  e8bd8ff0          POP      {r4-r11,pc}
;;;375    
                          ENDP

                  |L3.728|
                          DCD      ||.data||
                  |L3.732|
0002dc  d5fdd4da          DCB      213,253,212,218,198,244,182,175,205,248,191,168,"...",0
0002e0  c6f4b6af
0002e4  cdf8bfa8
0002e8  2e2e2e00
                  |L3.748|
0002ec  574542b7          DCB      "WEB",183,254,206,241,198,247,179,204,208,242,0
0002f0  fecef1c6
0002f4  f7b3ccd0
0002f8  f200    
0002fa  00                DCB      0
0002fb  00                DCB      0
                  |L3.764|
0002fc  444d3930          DCB      "DM9000 ID = 0x%08X",0
000300  30302049
000304  44203d20
000308  30782530
00030c  385800  
00030f  00                DCB      0
                  |L3.784|
                          DCD      0x0a469000
                  |L3.788|
000314  2c204f6b          DCB      ", Ok",0
000318  00      
000319  00                DCB      0
00031a  00                DCB      0
00031b  00                DCB      0
                  |L3.796|
00031c  2c204572          DCB      ", Err",0
000320  7200    
000322  00                DCB      0
000323  00                DCB      0
                  |L3.804|
000324  c9e8d6c3          DCB      201,232,214,195,177,190,187,250,"IP (For Uip)",0
000328  b1bebbfa
00032c  49502028
000330  466f7220
000334  55697029
000338  00      
000339  00                DCB      0
00033a  00                DCB      0
00033b  00                DCB      0
                  |L3.828|
                          DCD      g_tParam
                  |L3.832|
000340  c9e8d6c3          DCB      201,232,214,195,215,211,205,248,209,218,194,235," (For U"
000344  d7d3cdf8
000348  d1dac2eb
00034c  2028466f
000350  722055  
000353  69702900          DCB      "ip)",0
000357  00                DCB      0
                  |L3.856|
000358  c9e8d6c3          DCB      201,232,214,195,196,172,200,207,205,248,185,216," (For U"
00035c  c4acc8cf
000360  cdf8b9d8
000364  2028466f
000368  722055  
00036b  69702900          DCB      "ip)",0
00036f  00                DCB      0
                  |L3.880|
                          DCD      g_LcdHeight
                  |L3.884|
                          DCD      g_LcdWidth

                          AREA ||i.resolv_found||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  resolv_found PROC
;;;730    
;;;731    void resolv_found(char *name, u16_t *ipaddr)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;732    {
000004  000c              MOVS     r4,r1
000006  4680              MOV      r8,r0
000008  d018              BEQ      |L4.60|
;;;733    	//  u16_t *ipaddr2;
;;;734    
;;;735    	if (ipaddr == NULL)
;;;736    	{
;;;737    		printf("Host '%s' not found.\n", name);
;;;738    	}
;;;739    	else
;;;740    	{
;;;741    		printf("Found name '%s' = %d.%d.%d.%d\n", name,
00000a  8860              LDRH     r0,[r4,#2]
00000c  f7fffffe          BL       htons
000010  b2c7              UXTB     r7,r0
000012  8860              LDRH     r0,[r4,#2]
000014  f7fffffe          BL       htons
000018  0a06              LSRS     r6,r0,#8
00001a  8820              LDRH     r0,[r4,#0]
00001c  f7fffffe          BL       htons
000020  b2c5              UXTB     r5,r0
000022  8820              LDRH     r0,[r4,#0]
000024  f7fffffe          BL       htons
000028  0a02              LSRS     r2,r0,#8
00002a  462b              MOV      r3,r5
00002c  4641              MOV      r1,r8
00002e  a006              ADR      r0,|L4.72|
000030  e9cd6700          STRD     r6,r7,[sp,#0]
000034  f7fffffe          BL       __2printf
;;;742    		htons(ipaddr[0]) >> 8,
;;;743    		htons(ipaddr[0]) & 0xff,
;;;744    		htons(ipaddr[1]) >> 8,
;;;745    		htons(ipaddr[1]) & 0xff);
;;;746    		/*    webclient_get("www.sics.se", 80, "/~adam/uip");*/
;;;747    	}
;;;748    }
000038  e8bd81fc          POP      {r2-r8,pc}
                  |L4.60|
00003c  e8bd41fc          POP      {r2-r8,lr}            ;737
000040  4601              MOV      r1,r0                 ;737
000042  a009              ADR      r0,|L4.104|
000044  f7ffbffe          B.W      __2printf
;;;749    
                          ENDP

                  |L4.72|
000048  466f756e          DCB      "Found name '%s' = %d.%d.%d.%d\n",0
00004c  64206e61
000050  6d652027
000054  25732720
000058  3d202564
00005c  2e25642e
000060  25642e25
000064  640a00  
000067  00                DCB      0
                  |L4.104|
000068  486f7374          DCB      "Host '%s' not found.\n",0
00006c  20272573
000070  27206e6f
000074  7420666f
000078  756e642e
00007c  0a00    
00007e  00                DCB      0
00007f  00                DCB      0

                          AREA ||i.smtp_done||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  smtp_done PROC
;;;759    
;;;760    void smtp_done(unsigned char code)
000000  4601              MOV      r1,r0
;;;761    {
;;;762    	printf("SMTP done with code %d\n", code);
000002  a001              ADR      r0,|L5.8|
000004  f7ffbffe          B.W      __2printf
;;;763    }
;;;764    void webclient_closed(void)
                          ENDP

                  |L5.8|
000008  534d5450          DCB      "SMTP done with code %d\n",0
00000c  20646f6e
000010  65207769
000014  74682063
000018  6f646520
00001c  25640a00

                          AREA ||i.uip_ChangeNetParam||, CODE, READONLY, ALIGN=2

                  uip_ChangeNetParam PROC
;;;630    */
;;;631    void uip_ChangeNetParam(void)
000000  4808              LDR      r0,|L6.36|
;;;632    {
;;;633    	//uip_ipaddr(ipaddr, 192,168,1,10);	/* 缺省IP */
;;;634    	uip_sethostaddr((uint16_t *)g_tParam.uip_ip);
000002  4909              LDR      r1,|L6.40|
000004  8d02              LDRH     r2,[r0,#0x28]  ; g_tParam
000006  800a              STRH     r2,[r1,#0]
000008  8d42              LDRH     r2,[r0,#0x2a]  ; g_tParam
00000a  804a              STRH     r2,[r1,#2]
;;;635    
;;;636    	//uip_ipaddr(ipaddr, 255,255,255,0);	/* 地址掩码 */
;;;637    	uip_setnetmask((uint16_t *)g_tParam.uip_net_mask);
00000c  4907              LDR      r1,|L6.44|
00000e  8d82              LDRH     r2,[r0,#0x2c]  ; g_tParam
000010  800a              STRH     r2,[r1,#0]
000012  8dc2              LDRH     r2,[r0,#0x2e]  ; g_tParam
000014  804a              STRH     r2,[r1,#2]
;;;638    
;;;639    	//uip_ipaddr(ipaddr, 192,168,1,1);	/* 默认网关 */
;;;640    	uip_setdraddr((uint16_t *)g_tParam.uip_gateway);
000016  4906              LDR      r1,|L6.48|
000018  8e02              LDRH     r2,[r0,#0x30]  ; g_tParam
00001a  800a              STRH     r2,[r1,#0]
00001c  8e40              LDRH     r0,[r0,#0x32]  ; g_tParam
00001e  8048              STRH     r0,[r1,#2]
;;;641    }
000020  4770              BX       lr
;;;642    
                          ENDP

000022  0000              DCW      0x0000
                  |L6.36|
                          DCD      g_tParam
                  |L6.40|
                          DCD      uip_hostaddr
                  |L6.44|
                          DCD      uip_netmask
                  |L6.48|
                          DCD      uip_draddr

                          AREA ||i.uip_log||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  uip_log PROC
;;;725    /*---------------------------------------------------------------------------*/
;;;726    void uip_log(char *m)
000000  4601              MOV      r1,r0
;;;727    {
;;;728    	printf("uIP log message: %s\n", m);
000002  a001              ADR      r0,|L7.8|
000004  f7ffbffe          B.W      __2printf
;;;729    }
;;;730    
                          ENDP

                  |L7.8|
000008  75495020          DCB      "uIP log message: %s\n",0
00000c  6c6f6720
000010  6d657373
000014  6167653a
000018  2025730a
00001c  00      
00001d  00                DCB      0
00001e  00                DCB      0
00001f  00                DCB      0

                          AREA ||i.uip_pro||, CODE, READONLY, ALIGN=2

                  uip_pro PROC
;;;650    */
;;;651    void uip_pro(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;652    {
;;;653    	uint16_t i;
;;;654    
;;;655    	uip_len = tapdev_read();
000004  f7fffffe          BL       tapdev_read
000008  4c29              LDR      r4,|L8.176|
00000a  8020              STRH     r0,[r4,#0]
;;;656    	if(uip_len > 0)
00000c  b300              CBZ      r0,|L8.80|
;;;657    	{
;;;658    		if (BUF->type == htons(UIP_ETHTYPE_IP))
00000e  f44f6000          MOV      r0,#0x800
000012  f7fffffe          BL       htons
000016  4d27              LDR      r5,|L8.180|
000018  89a9              LDRH     r1,[r5,#0xc]  ; uip_buf
00001a  4288              CMP      r0,r1
00001c  d108              BNE      |L8.48|
;;;659    		{
;;;660    			uip_arp_ipin();
;;;661    			uip_input();
00001e  2001              MOVS     r0,#1
000020  f7fffffe          BL       uip_process
;;;662    			/* If the above function invocation resulted in data that
;;;663    			should be sent out on the network, the global variable
;;;664    			uip_len is set to a value > 0. */
;;;665    			if (uip_len > 0)
000024  8820              LDRH     r0,[r4,#0]  ; uip_len
000026  2800              CMP      r0,#0
000028  d040              BEQ      |L8.172|
;;;666    			{
;;;667    				uip_arp_out();
00002a  f7fffffe          BL       uip_arp_out
;;;668    				tapdev_send();
00002e  e00b              B        |L8.72|
                  |L8.48|
;;;669    			}
;;;670    		}
;;;671    		else if (BUF->type == htons(UIP_ETHTYPE_ARP))
000030  f6400006          MOV      r0,#0x806
000034  f7fffffe          BL       htons
000038  89a9              LDRH     r1,[r5,#0xc]  ; uip_buf
00003a  4288              CMP      r0,r1
00003c  d136              BNE      |L8.172|
;;;672    		{
;;;673    			uip_arp_arpin();
00003e  f7fffffe          BL       uip_arp_arpin
;;;674    			/* If the above function invocation resulted in data that
;;;675    			should be sent out on the network, the global variable
;;;676    			uip_len is set to a value > 0. */
;;;677    			if (uip_len > 0)
000042  8820              LDRH     r0,[r4,#0]  ; uip_len
000044  2800              CMP      r0,#0
000046  d031              BEQ      |L8.172|
                  |L8.72|
;;;678    			{
;;;679    				tapdev_send();
000048  e8bd41f0          POP      {r4-r8,lr}
00004c  f7ffbffe          B.W      tapdev_send
                  |L8.80|
;;;680    			}
;;;681    		}
;;;682    	}
;;;683    	else if(timer_expired(&periodic_timer))
000050  4819              LDR      r0,|L8.184|
000052  f7fffffe          BL       timer_expired
000056  2800              CMP      r0,#0
000058  d028              BEQ      |L8.172|
;;;684    	{
;;;685    		//printf("  0.5s periodic timer expired\n\r");
;;;686    		timer_reset(&periodic_timer);
00005a  4817              LDR      r0,|L8.184|
00005c  f7fffffe          BL       timer_reset
;;;687    		for(i = 0; i < UIP_CONNS; i++)
;;;688    		{
;;;689    			uip_periodic(i);
000060  4e16              LDR      r6,|L8.188|
000062  4f17              LDR      r7,|L8.192|
000064  2500              MOVS     r5,#0                 ;687
000066  bf00              NOP      
                  |L8.104|
000068  eb051005          ADD      r0,r5,r5,LSL #4
00006c  eb000040          ADD      r0,r0,r0,LSL #1
000070  eb060080          ADD      r0,r6,r0,LSL #2
000074  6038              STR      r0,[r7,#0]  ; uip_conn
000076  2002              MOVS     r0,#2
000078  f7fffffe          BL       uip_process
;;;690    			/* If the above function invocation resulted in data that
;;;691    			should be sent out on the network, the global variable
;;;692    			uip_len is set to a value > 0. */
;;;693    			if(uip_len > 0)
00007c  8820              LDRH     r0,[r4,#0]  ; uip_len
00007e  b118              CBZ      r0,|L8.136|
;;;694    			{
;;;695    				uip_arp_out();
000080  f7fffffe          BL       uip_arp_out
;;;696    				tapdev_send();
000084  f7fffffe          BL       tapdev_send
                  |L8.136|
000088  1c6d              ADDS     r5,r5,#1
00008a  b2ad              UXTH     r5,r5                 ;687
00008c  2d28              CMP      r5,#0x28              ;687
00008e  d3eb              BCC      |L8.104|
;;;697    			}
;;;698    		}
;;;699    
;;;700    		#if UIP_UDP
;;;701    		for(i = 0; i < UIP_UDP_CONNS; i++)
;;;702    		{
;;;703    			uip_udp_periodic(i);
;;;704    			/* If the above function invocation resulted in data that
;;;705    			should be sent out on the network, the global variable
;;;706    			uip_len is set to a value > 0. */
;;;707    			if(uip_len > 0)
;;;708    			{
;;;709    				uip_arp_out();
;;;710    				tapdev_send();
;;;711    			}
;;;712    		}
;;;713    		#endif /* UIP_UDP */
;;;714    
;;;715    		/* Call the ARP timer function every 10 seconds. */
;;;716    		if (timer_expired(&arp_timer))
000090  4809              LDR      r0,|L8.184|
000092  3008              ADDS     r0,r0,#8
000094  f7fffffe          BL       timer_expired
000098  2800              CMP      r0,#0
00009a  d007              BEQ      |L8.172|
;;;717    		{
;;;718    			//printf("  10s periodic timer expired\n\r");
;;;719    			timer_reset(&arp_timer);
00009c  4806              LDR      r0,|L8.184|
00009e  3008              ADDS     r0,r0,#8
0000a0  f7fffffe          BL       timer_reset
;;;720    			uip_arp_timer();
0000a4  e8bd41f0          POP      {r4-r8,lr}
0000a8  f7ffbffe          B.W      uip_arp_timer
                  |L8.172|
;;;721    		}
;;;722    	}
;;;723    }
0000ac  e8bd81f0          POP      {r4-r8,pc}
;;;724    
                          ENDP

                  |L8.176|
                          DCD      uip_len
                  |L8.180|
                          DCD      uip_buf
                  |L8.184|
                          DCD      ||.data||+0x4
                  |L8.188|
                          DCD      uip_conns
                  |L8.192|
                          DCD      uip_conn

                          AREA ||i.uip_start||, CODE, READONLY, ALIGN=2

                  uip_start PROC
;;;601    */
;;;602    void uip_start(void)
000000  b510              PUSH     {r4,lr}
;;;603    {
;;;604    	timer_set(&periodic_timer, CLOCK_SECOND / 2);
000002  2132              MOVS     r1,#0x32
000004  4810              LDR      r0,|L9.72|
000006  f7fffffe          BL       timer_set
;;;605    	timer_set(&arp_timer, CLOCK_SECOND * 10);
00000a  480f              LDR      r0,|L9.72|
00000c  f44f717a          MOV      r1,#0x3e8
000010  3008              ADDS     r0,r0,#8
000012  f7fffffe          BL       timer_set
;;;606    
;;;607    	tapdev_init();	/* 初始化网卡硬件 */
000016  f7fffffe          BL       tapdev_init
;;;608    	uip_init();
00001a  f7fffffe          BL       uip_init
;;;609    
;;;610    	//uip_ipaddr(ipaddr, 192,168,1,10);	/* 缺省IP */
;;;611    	uip_sethostaddr((uint16_t *)g_tParam.uip_ip);
00001e  480b              LDR      r0,|L9.76|
000020  490b              LDR      r1,|L9.80|
000022  8d02              LDRH     r2,[r0,#0x28]  ; g_tParam
000024  800a              STRH     r2,[r1,#0]
000026  8d42              LDRH     r2,[r0,#0x2a]  ; g_tParam
000028  804a              STRH     r2,[r1,#2]
;;;612    
;;;613    	//uip_ipaddr(ipaddr, 255,255,255,0);	/* 地址掩码 */
;;;614    	uip_setnetmask((uint16_t *)g_tParam.uip_net_mask);
00002a  490a              LDR      r1,|L9.84|
00002c  8d82              LDRH     r2,[r0,#0x2c]  ; g_tParam
00002e  800a              STRH     r2,[r1,#0]
000030  8dc2              LDRH     r2,[r0,#0x2e]  ; g_tParam
000032  804a              STRH     r2,[r1,#2]
;;;615    
;;;616    	//uip_ipaddr(ipaddr, 192,168,1,1);	/* 默认网关 */
;;;617    	uip_setdraddr((uint16_t *)g_tParam.uip_gateway);
000034  4908              LDR      r1,|L9.88|
000036  8e02              LDRH     r2,[r0,#0x30]  ; g_tParam
000038  800a              STRH     r2,[r1,#0]
00003a  8e40              LDRH     r0,[r0,#0x32]  ; g_tParam
00003c  8048              STRH     r0,[r1,#2]
;;;618    
;;;619    	httpd_init();
00003e  e8bd4010          POP      {r4,lr}
000042  f7ffbffe          B.W      httpd_init
;;;620    }
;;;621    
                          ENDP

000046  0000              DCW      0x0000
                  |L9.72|
                          DCD      ||.data||+0x4
                  |L9.76|
                          DCD      g_tParam
                  |L9.80|
                          DCD      uip_hostaddr
                  |L9.84|
                          DCD      uip_netmask
                  |L9.88|
                          DCD      uip_draddr

                          AREA ||i.webclient_aborted||, CODE, READONLY, ALIGN=2

                  webclient_aborted PROC
;;;767    }
;;;768    void webclient_aborted(void)
000000  a001              ADR      r0,|L10.8|
;;;769    {
;;;770    	printf("Webclient: connection aborted\n");
000002  f7ffbffe          B.W      __2printf
;;;771    }
;;;772    
                          ENDP

000006  0000              DCW      0x0000
                  |L10.8|
000008  57656263          DCB      "Webclient: connection aborted\n",0
00000c  6c69656e
000010  743a2063
000014  6f6e6e65
000018  6374696f
00001c  6e206162
000020  6f727465
000024  640a00  
000027  00                DCB      0

                          AREA ||i.webclient_closed||, CODE, READONLY, ALIGN=2

                  webclient_closed PROC
;;;763    }
;;;764    void webclient_closed(void)
000000  a001              ADR      r0,|L11.8|
;;;765    {
;;;766    	printf("Webclient: connection closed\n");
000002  f7ffbffe          B.W      __2printf
;;;767    }
;;;768    void webclient_aborted(void)
                          ENDP

000006  0000              DCW      0x0000
                  |L11.8|
000008  57656263          DCB      "Webclient: connection closed\n",0
00000c  6c69656e
000010  743a2063
000014  6f6e6e65
000018  6374696f
00001c  6e20636c
000020  6f736564
000024  0a00    
000026  00                DCB      0
000027  00                DCB      0

                          AREA ||i.webclient_connected||, CODE, READONLY, ALIGN=2

                  webclient_connected PROC
;;;777    
;;;778    void webclient_connected(void)
000000  a001              ADR      r0,|L12.8|
;;;779    {
;;;780    	printf("Webclient: connected, waiting for data...\n");
000002  f7ffbffe          B.W      __2printf
;;;781    }
;;;782    
                          ENDP

000006  0000              DCW      0x0000
                  |L12.8|
000008  57656263          DCB      "Webclient: connected, waiting for data...\n",0
00000c  6c69656e
000010  743a2063
000014  6f6e6e65
000018  63746564
00001c  2c207761
000020  6974696e
000024  6720666f
000028  72206461
00002c  74612e2e
000030  2e0a00  
000033  00                DCB      0

                          AREA ||i.webclient_datahandler||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  webclient_datahandler PROC
;;;782    
;;;783    void webclient_datahandler(char *data, u16_t len)
000000  a001              ADR      r0,|L13.8|
;;;784    {
;;;785    	printf("Webclient: got %d bytes of data.\n", len);
000002  f7ffbffe          B.W      __2printf
;;;786    }
;;;787    
                          ENDP

000006  0000              DCW      0x0000
                  |L13.8|
000008  57656263          DCB      "Webclient: got %d bytes of data.\n",0
00000c  6c69656e
000010  743a2067
000014  6f742025
000018  64206279
00001c  74657320
000020  6f662064
000024  6174612e
000028  0a00    
00002a  00                DCB      0
00002b  00                DCB      0

                          AREA ||i.webclient_timedout||, CODE, READONLY, ALIGN=2

                  webclient_timedout PROC
;;;772    
;;;773    void webclient_timedout(void)
000000  a001              ADR      r0,|L14.8|
;;;774    {
;;;775    	printf("Webclient: connection timed out\n");
000002  f7ffbffe          B.W      __2printf
;;;776    }
;;;777    
                          ENDP

000006  0000              DCW      0x0000
                  |L14.8|
000008  57656263          DCB      "Webclient: connection timed out\n",0
00000c  6c69656e
000010  743a2063
000014  6f6e6e65
000018  6374696f
00001c  6e207469
000020  6d656420
000024  6f75740a
000028  00      
000029  00                DCB      0
00002a  00                DCB      0
00002b  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  FormHttp
                          DCD      0x00000000
                  periodic_timer
                          %        8
                  arp_timer
                          %        8

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\http_server.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_http_server_c_981bba61____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_http_server_c_981bba61____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_http_server_c_981bba61____REVSH|
#line 128
|__asm___13_http_server_c_981bba61____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
